{"version":3,"sources":["hooks.ts","http.ts","services.ts","consts.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","service","axios","create","baseURL","timeout","headers","get","url","data","Promise","resolve","reject","params","then","res","catch","err","post","put","del","delete","http","consts","CDN_PREFIX","App","useState","layerComb","setLayerComb","orderedLayers","setOrderedLayers","outputImage","setOutputImage","outputImageDimension","setOutputImageDimension","itemImageDimension","setItemImageDimension","colorImageDimension","setColorImageDimension","tabImageDimension","setTabImageDimension","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","savedComb","JSON","parse","localStorage","getItem","services","getColorImageDimension","calculatedWidth","Math","min","finalWidth","getOutputImageDimension","getItemImageDimension","handleChangeItem","layerIdx","itmId","cId","layerComb_","setItem","stringify","layerList","filter","i","map","src","x","y","mergeImages","b64","handleDownloadPsd","a","agPsd","all","idx","name","pNm","layer","drawImg","ctx","image","Image","onload","drawImage","canvas2","OffscreenCanvas","getContext","top","left","blendMode","opacity","canvas","psdLayers","psdData","colorMode","channels","bitsPerChannel","children","writePsd","blob","Blob","saveAs","Date","now","className","style","flexDirection","startsWith","title","alt","onClick","id","type","display","onChange","e","file","target","files","reader","FileReader","result","value","readAsText","document","getElementById","click","presetJson","presetBlob","thumbUrl","isRmv","items","item","sameColorItem","originals","find","Object","keys","colors","length","j","orig","background","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.72370a41.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import axios from 'axios';\n\nconst service = axios.create({\n  baseURL: \"\",\n  timeout: 10000,\n  headers: {},\n});\n\nexport function get<T>(url: string, data: object = {}) {\n  return new Promise<T>((resolve, reject) => {\n    service.get(url, { params: data })\n      .then((res: { data: T }) => {\n        resolve(res.data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n\nexport function post<T>(url: string, data: object = {}) {\n  return new Promise<T>((resolve, reject) => {\n    service.post(url, data)\n      .then((res: { data: T }) => {\n        resolve(res.data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n\nexport function put<T>(url: string, data: object = {}) {\n  return new Promise<T>((resolve, reject) => {\n    service.put(url, data)\n      .then((res: { data: T }) => {\n        resolve(res.data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n\nexport function del<T>(url: string, data: object = {}) {\n  return new Promise<T>((resolve, reject) => {\n    service.delete(url, { params: data })\n      .then((res: { data: T }) => {\n        resolve(res.data);\n      })\n      .catch((err) => {\n        reject(err);\n      });\n  });\n}\n\n// eslint-disable-next-line\nexport default {\n  get, post, put, del,\n};","import http from \"./http\"\nimport { Layer, LayerImage } from \"./types\"\n\nconst getDefaultCombination = () => {\n  return http.get<LayerImage[]>('defaultCombination.json')\n}\n\nconst getOrderedLayers = () => {\n  return http.get<Layer[]>('orderedLayers.json')\n}\n\n// eslint-disable-next-line\nexport default {\n  getDefaultCombination,\n  getOrderedLayers,\n}","const consts = {\n    CDN_PREFIX: \"cdn.picrew.me\"\n}\n\nexport default consts","import React, { useEffect, useState } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport mergeImages from 'merge-images';\nimport { Psd } from 'ag-psd';\nimport { saveAs } from 'file-saver';\nimport useWindowDimensions from './hooks';\nimport { Layer, LayerImage } from './types';\nimport services from './services';\nimport consts from './consts';\n\nimport './App.css';\nimport 'react-tabs/style/react-tabs.css';\n\nfunction App() {\n  const [layerComb, setLayerComb] = useState<LayerImage[]>();\n  const [orderedLayers, setOrderedLayers] = useState<Layer[]>();\n  const [outputImage, setOutputImage] = useState<string>();\n  const [outputImageDimension, setOutputImageDimension] = useState<number>();\n  const [itemImageDimension, setItemImageDimension] = useState<number>();\n  const [colorImageDimension, setColorImageDimension] = useState<number>();\n  const [tabImageDimension, setTabImageDimension] = useState<number>();\n  const { width, height } = useWindowDimensions();\n\n  useEffect(() => {\n    const savedComb = JSON.parse(localStorage.getItem(\"layerComb\") || \"null\")\n\n    if (!savedComb) {\n      services.getDefaultCombination()\n        .then(res => {\n          setLayerComb(res)\n        })\n    } else {\n      setLayerComb(savedComb)\n    }\n\n    services.getOrderedLayers()\n      .then(res => {\n        setOrderedLayers(res)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getOutputImageDimension = () => {\n      // width and height are identical, so we only need width\n      const maxWidth = 600\n      const minWidth = 300\n      const calculatedWidth = width > height ? (width * 0.3) : (width * 0.5)\n      const finalWidth = Math.min(maxWidth, calculatedWidth);\n      return finalWidth < minWidth ? minWidth : finalWidth;\n    }\n    const getItemImageDimension = () => {\n      // width and height are identical, so we only need width\n      const maxWidth = 160\n      const calculatedWidth = width > height ? (width * 0.1) : (width * 0.167)\n      const finalWidth = Math.min(maxWidth, calculatedWidth);\n      return finalWidth\n    }\n    const getColorImageDimension = () => {\n      // width and height are identical, so we only need width\n      const maxWidth = 60\n      const calculatedWidth = width > height ? (width * 0.05) : (width * 0.083)\n      const finalWidth = Math.min(maxWidth, calculatedWidth);\n      return finalWidth\n    }\n    const getTabImageDimension = () => {\n      return getColorImageDimension()\n    }\n    \n    setOutputImageDimension(getOutputImageDimension());\n    setItemImageDimension(getItemImageDimension());\n    setColorImageDimension(getColorImageDimension());\n    setTabImageDimension(getTabImageDimension());\n  }, [width, height])\n\n  const handleChangeItem = (layerIdx: number,\n    itmId: number | undefined,\n    cId: number | undefined,\n    url: string | undefined\n  ) => {\n    const layerComb_ = [...(layerComb || [])]\n\n    layerComb_[layerIdx] = {\n      ...layerComb_[layerIdx],\n      itmId: itmId as number,\n      cId: cId as number,\n      url: url as string,\n    }\n\n    localStorage.setItem(\"layerComb\", JSON.stringify(layerComb_))\n\n    setLayerComb(layerComb_);\n  }\n\n  const handleReset = () => {\n    services.getDefaultCombination()\n      .then(res => {\n        setLayerComb(res)\n        localStorage.setItem(\"layerComb\", JSON.stringify(res))\n      })\n  }\n\n  useEffect(() => {\n    const layerList = layerComb?.filter(i => i.url)?.map(i => ({\n      src: `${consts.CDN_PREFIX}${i.url}`,\n      x: i.x,\n      y: i.y\n    })) || []\n\n    mergeImages(layerList)\n      .then(b64 => {\n        setOutputImage(b64)\n      })\n  }, [layerComb])\n\n  const handleDownloadPsd = async () => {\n    const agPsd = await import('ag-psd');\n\n    const psdLayers = await Promise.all(\n      (layerComb || []).map((i, idx) => ({\n        ...i,\n        name: orderedLayers?.[idx].pNm\n      })).filter(i => i.url).map(async (layer, idx) => {\n        const drawImg = (ctx: any, url: string) => {\n\n          return new Promise(resolve => {\n            const image = new Image();\n            image.onload = function () {\n              ctx.drawImage(image, 0, 0);\n              resolve('resolved');\n            };\n            image.src = `${consts.CDN_PREFIX}${url}`;\n          });\n        }\n\n        const canvas2 = new OffscreenCanvas(600, 600);\n        await drawImg(canvas2.getContext('2d'), layer.url)\n\n        return {\n          top: layer.y,\n          left: layer.x,\n          blendMode: 'normal',\n          opacity: 1,\n          name: layer.name,\n          canvas: canvas2\n        }\n      }))\n\n    const psdData: Psd = {\n      width: 600,\n      height: 600,\n      colorMode: 3,\n      channels: 3,\n      bitsPerChannel: 8,\n      children: psdLayers as any\n    }\n\n    const data = agPsd.writePsd(psdData);\n    const blob = new Blob([data]);\n    saveAs(blob, `amachiromaker-output-${Date.now()}.psd`)\n  }\n\n  const handleDownloadPreset = () => {\n    const presetJson = JSON.stringify(layerComb)\n    const presetBlob = new Blob([presetJson], {\n      type: 'text/plain'\n    });\n    saveAs(presetBlob, `amachiromaker-preset-${Date.now()}.json`)\n  }\n\n  const handleLoadPreset = (e: any) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      const data = JSON.parse(reader.result as string)\n      localStorage.setItem(\"layerComb\", reader.result as string)\n      setLayerComb(data)\n      // clear input file to allow user to select same file again\n      e.target.value = '';\n    }\n    reader.readAsText(file);\n  }\n\n  return (\n    <div className=\"App\" style={{ flexDirection: width > height ? \"row\" : \"column\" }}>\n      <div className=\"left-area\">\n        {\n          outputImage?.startsWith(\"data:image/png;base64,\") ? (\n            <>\n              <img className=\"layer-image\" width={outputImageDimension} src={outputImage} title=\"Output Image\" alt=\"Output\" />\n              <div className=\"button-group\">\n                <button className=\"button-1\" onClick={handleReset}>Reset</button>\n                <button className=\"button-2\" onClick={() => { saveAs(outputImage || \"\", `amachiromaker-output-${Date.now()}.png`) }}>Save PNG</button>\n                <button className=\"button-2\" onClick={handleDownloadPsd}>Save PSD</button>\n              </div>\n              <div className=\"button-group\">\n                <input id=\"presetInput\" type=\"file\" style={{ display: \"none\" }} onChange={handleLoadPreset} />\n                <button className=\"button-3\" onClick={() => { document.getElementById(\"presetInput\")?.click() }}>Load Preset</button>\n                <button className=\"button-2\" onClick={handleDownloadPreset}>Download Preset</button>\n              </div>\n            </>\n          ) : (\n            <div className=\"loading-text-container\" style={{ width: outputImageDimension, height: outputImageDimension }}>loading...</div>\n          )\n        }\n      </div>\n\n      <div className=\"config-area\">\n        <Tabs>\n          <TabList>\n            {\n              orderedLayers?.map(i => (\n                <Tab><img className=\"tab-image\" width={tabImageDimension} src={`${consts.CDN_PREFIX}${i.thumbUrl}`} alt=\"\" /></Tab>\n              ))\n            }\n          </TabList>\n          {\n            orderedLayers?.map((i, idx) => (\n              <TabPanel>\n                <div className=\"tab-content\">\n                  <div className=\"item-container\">\n                    {\n                      !!i.isRmv &&\n                      <img\n                        className={layerComb?.[idx]?.itmId === 0 ? \"item-image-selected\" : \"item-image\"}\n                        onClick={() => { handleChangeItem(idx, 0, 0, \"\") }}\n                        width={itemImageDimension}\n                        height={itemImageDimension}\n                        src=\"emptyset.svg\"\n                        alt=\"\"\n                      />\n                    }\n                    {\n                      i.items.map(item => (\n                        <img\n                          className={layerComb?.[idx]?.itmId === item.itmId ? \"item-image-selected\" : \"item-image\"}\n                          src={`${consts.CDN_PREFIX}${item.thumbUrl}`}\n                          width={itemImageDimension}\n                          height={itemImageDimension}\n                          onClick={() => {\n                            const sameColorItem = item.originals.find(i => i.cId === layerComb?.[idx]?.cId)\n                            handleChangeItem(idx, item.itmId, sameColorItem?.cId || item.originals[0].cId, sameColorItem?.url || item.originals[0].url)\n                          }}\n                          alt=\"\"\n                        />\n                      ))\n                    }\n                  </div>\n                  {\n                    !!(Object.keys(i.colors).length > 1 && layerComb?.[idx]?.itmId) && <div className=\"color-container\">\n                      {\n                        i.items.find(j => j.itmId === layerComb?.[idx]?.itmId)?.originals.map(orig => (\n                          <div\n                            className={layerComb?.[idx]?.cId === orig.cId ? \"color-image-selected\" : \"color-image\"}\n                            style={{ background: i.colors[orig.cId], width: colorImageDimension, height: colorImageDimension }}\n                            onClick={() => { handleChangeItem(idx, layerComb?.[idx]?.itmId as number, orig.cId, orig.url) }}\n                          />\n                        ))\n                      }\n                    </div>\n                  }\n                </div>\n              </TabPanel>\n            ))\n          }\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}