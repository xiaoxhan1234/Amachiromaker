{"version":3,"sources":["../D:/Projects/github/ag-psd/src/helpers.ts","../D:/Projects/github/ag-psd/src/psdReader.ts","../node_modules/base64-js/index.js","../D:/Projects/github/ag-psd/src/psdWriter.ts","../D:/Projects/github/ag-psd/src/additionalInfo.ts","../D:/Projects/github/ag-psd/src/descriptor.ts","../D:/Projects/github/ag-psd/src/imageResources.ts","../node_modules/buffer/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../D:/Projects/github/ag-psd/src/effectsHelpers.ts","../D:/Projects/github/ag-psd/src/utf8.ts","../D:/Projects/github/ag-psd/src/engineData.ts","../D:/Projects/github/ag-psd/src/text.ts","../D:/Projects/github/ag-psd/src/abr.ts","../D:/Projects/github/ag-psd/src/csh.ts","../D:/Projects/github/ag-psd/src/psd.ts","../D:/Projects/github/ag-psd/src/index.ts"],"names":["revMap","map","result","Object","keys","forEach","key","MOCK_HANDLERS","RAW_IMAGE_DATA","fromBlendMode","toBlendMode","layerColors","largeAdditionalInfoKeys","prefix","def","rev","decode","val","value","split","Error","encode","ColorSpace","LayerMaskFlags","MaskParams","ChannelID","Compression","channelId","min","max","data","size","width","height","i","buffer","Uint32Array","p","input","output","y","o","x","b","v","offset","array","Uint8Array","length","offsets","large","stride","ol","strideStart","strideEnd","lastIndex","lastIndex2","startOffset","value1","value2","value3","count","countIndex","writeLast","slice","createCanvas","createCanvasFromData","tempCanvas","undefined","createImageData","getContext","document","canvas","createElement","image","Image","src","fromByteArray","drawImage","createCanvasMethod","createCanvasFromDataMethod","createImageDataMethod","supportedColorModes","colorModes","setupGrayscale","readUint8","reader","view","getUint8","peekUint8","readInt16","getInt16","readUint16","getUint16","readInt32","getInt32","readUint32","getUint32","readFloat64","getFloat64","readBytes","byteOffset","readSignature","readShortString","readPascalString","padTo","text","readUnicodeString","readUnicodeStringWithLength","String","fromCharCode","skipBytes","checkSignature","a","signature","toString","readLayerRecord","psd","options","layer","top","left","bottom","right","channelCount","channels","channelID","channelLength","push","id","blendMode","opacity","clipping","flags","transparencyProtected","hidden","readSection","mask","defaultColor","positionRelativeToLayer","disabled","fromVectorData","params","userMaskDensity","userMaskFeather","vectorMaskDensity","vectorMaskFeather","logMissingFeatures","console","log","readLayerMaskData","compositeGrayBlendSource","compositeGraphBlendDestinationRange","ranges","sourceRange","destRange","readLayerBlendingRanges","name","readAdditionalLayerInfo","readLayerChannelImageData","imageData","layerWidth","layerHeight","resetImageData","imageDataRaw","channel","compression","maskWidth","maskHeight","maskData","start","readData","maskDataRaw","useImageData","putImageData","offsetForChannel","targetData","throwForMissingFeatures","colorMode","readDataRaw","readDataRLE","target","sig","u64","indexOf","handler","infoHandlersMap","read","e","pixelData","_width","step","lengths","li","Uint16Array","c","header","j","round","func","skipEmpty","eightBytes","end","DataView","getFloat32","version","bitsPerChannel","opt","resourceHandlersMap","skip","skipThumbnail","imageResources","globalAlpha","layerCount","layers","layerChannels","skipLayerImageData","children","stack","l","type","sectionDivider","opened","unshift","pop","readLayerInfo","globalLayerMaskInfo","overlayColorSpace","colorSpace1","colorSpace2","colorSpace3","colorSpace4","kind","readGlobalLayerMaskInfo","hasChildren","skipCompositeImageData","bytes","Math","ceil","decodeBitmap","readImageData","r","g","h","s","m","k","ta","tb","version2","channelsCount","byteLength","ch","pixelDepth","ctop","cleft","cbottom","cright","pixelDepth2","compressionMode","cdata","w","ox","oy","dst","bounds","exports","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","join","Array","code","num","writeUint8","writer","addSize","setUint8","writeInt16","setInt16","writeUint16","setUint16","writeInt32","setInt32","writeUint32","setUint32","writeFloat64","setFloat64","writeBytes","ensureSize","set","writeZeros","writeSignature","writePascalString","getLargestLayerSize","getLayerDimentions","writeSection","writeTotalLength","writeAdditionalLayerInfo","invalidateTextLayers","psb","has","write","infoHandlers","addChildren","subType","newLength","newBuffer","ArrayBuffer","newBytes","oldBytes","resizeBuffer","createThumbnail","scale","floor","context","temp","isRowEmpty","isColEmpty","setFloat32","layerIds","generateThumbnail","thumbnail","getImageData","hasAlpha","maxBufferSize","tempBuffer","resourceHandlers","layersData","background","layerData","trimImageData","trimmed","trimData","croppedData","srcData","dstData","cropImageData","channelIds","noBackground","writeDataRLE","getLayerChannels","getChannels","clamp","vectorMask","effects","hasMultiEffects","writeLayerMaskData","writeLayerBlendingRanges","writeLayerInfo","info","writeGlobalLayerMaskInfo","color","addHandler","addHandlerAlias","hasKey","readLength64","writeLength64","readBezierKnot","y0","readFixedPointPath32","x0","y1","x1","y2","writeBezierKnot","points","writeFixedPointPath32","readVectorMask","paths","path","selector","boolOp","open","operation","booleanOperations","knots","linked","resolution","clipboard","fillStartsWithAllPixels","leftBytes","transform","readVersionAndDescriptor","warp","readFloat32","replace","index","TextIndex","gridding","textGridding","antiAlias","Annt","AntA","orientation","Ornt","style","warpStyle","warpValue","perspective","warpPerspective","perspectiveOther","warpPerspectiveOther","rotate","warpRotate","EngineData","engineData","decodeEngineData","parseEngineData","textDescriptor","serializeEngineData","encodeEngineData","writeVersionAndDescriptor","encodeWarp","writeFloat32","vectorFill","vectorStroke","descriptor","parseVectorContent","serializeVectorContent","desc","invert","notLink","disable","abs","linkedKnot","unlinkedKnot","vectorOrigination","keyDescriptorList","item","keyShapeInvalidated","keyOriginType","keyOriginResolution","keyOriginShapeBBox","keyOriginShapeBoundingBox","parseUnits","Left","Btom","Rght","rectRadii","keyOriginRRectRadii","topRight","topLeft","bottomLeft","bottomRight","corners","keyOriginBoxCorners","rectangleCornerA","Hrzn","Vrtc","rectangleCornerB","rectangleCornerC","rectangleCornerD","trnf","Trnf","xx","xy","yy","tx","ty","orig","keyOriginIndex","out","radii","unitValueQuadVersion","unitsValue","box","yx","_","parseEffects","serializeEffects","readEffects","writeEffects","writeUnicodeString","nameSource","_psd","blendClippendElements","blendInteriorElements","knockout","protected","transparency","composite","position","artboards","layerColor","layerTime","timestamp","logDevFeatures","unknown","propagate","unifyLayerPosition","unifyLayerStyle","unifyLayerVisibility","strokeEnabled","fillEnabled","lineWidth","strokeStyleLineWidth","lineDashOffset","strokeStyleLineDashOffset","miterLimit","strokeStyleMiterLimit","lineCapType","strokeStyleLineCapType","lineJoinType","strokeStyleLineJoinType","lineAlignment","strokeStyleLineAlignment","scaleLock","strokeStyleScaleLock","strokeAdjust","strokeStyleStrokeAdjust","lineDashSet","strokeStyleLineDashSet","BlnM","strokeStyleBlendMode","parsePercent","strokeStyleOpacity","content","strokeStyleContent","strokeStyleResolution","stroke","strokeStyleVersion","units","unitsPercent","rect","artboardRect","artboard","guideIndices","guideIndeces","presetName","artboardPresetName","parseColor","backgroundType","artboardBackgroundType","serializeColor","usingAlignedRendering","placedLayerTypes","parseWarp","parseUnitsOrNumber","uOrder","vOrder","deformNumRows","deformNumCols","envelopeWarp","customEnvelopeWarp","meshPoints","xs","find","values","ys","quiltSliceX","quiltSliceY","isQuiltWarp","isQuilt","desc2","readRect","writeRect","adjustmentType","adjustment","readLevelsChannel","shadowInput","highlightInput","shadowOutput","highlightOutput","midtoneInput","writeLevelsChannel","readCurveChannel","nodes","writeCurveChannel","n","readHueChannel","d","hue","saturation","lightness","writeHueChannel","readColorBalance","cyanRed","magentaGreen","yellowBlue","writeColorBalance","readMixrChannel","red","green","blue","constant","writeMixrChannel","placedLayerType","warpVersion","placedLayer","placed","Idnt","Type","Wdth","Hght","Rslt","quiltWarp","nonAffineTransform","some","Crop","crop","comp","compInfo","PgNm","totalPages","frameStep","numerator","denominator","duration","frameCount","referencePoint","_Patt","_writer","_target","annotations","major","minor","iconLocation","popupLocation","readColor","author","date","dataLength","readAsciiString","annotation","sound","lengthOffset","writeColor","contentOffset","dataOffset","linkedFiles","fileType","trim","fileCreator","dataSize","fileOpenDescriptor","file","creator","year","month","day","hour","minute","seconds","wholeSeconds","ms","time","Date","fileSize","childDocumentID","assetModTime","assetLockedState","skipLinkedFilesData","sizeOffset","writeUnicodeStringWithPadding","substr","_lnkE","_psds","pathList","brightness","contrast","meanValue","labColorOnly","useLegacy","rgb","defaultChannel","exposure","gamma","vibrance","Strt","master","reds","yellows","greens","cyans","blues","magentas","shadows","midtones","highlights","preserveLuminosity","Yllw","Mgnt","useTint","presetKind","bwPresetKind","presetFileName","blackAndWhitePresetFileName","tintColor","density","monochrome","gray","colorLookupType","createEnum","abstractProfile","deviceLinkProfile","LUTFormatType","look","cube","colorLookupOrder","bgr","lookupType","Dthr","dither","profile","LUTFormat","lutFormat","dataOrder","tableOrder","LUT3DFileData","lut3DFileData","LUT3DFileName","lut3DFileName","levels","level","grdmColorModels","readSelectiveColors","writeSelectiveColors","cmyk","parseFxObject","fx","enabled","enab","FStl","Styl","fillType","FrFl","PntT","Opct","present","showInDialog","overprint","Grad","gradient","parseGradientContent","Ptrn","pattern","parsePatternContent","serializeFxObject","FrFX","serializeGradientContent","serializePatternContent","masterFXSwitch","DrSh","dropShadow","parseEffectObject","dropShadowMulti","IrSh","innerShadow","innerShadowMulti","OrGl","outerGlow","IrGl","innerGlow","ebbl","bevel","SoFi","solidFill","solidFillMulti","patternFill","patternOverlay","GrFl","gradientOverlay","gradientFillMulti","ChFX","satin","frameFXMulti","multi","isArray","serializeEffectObject","numModifyingFX","parseGradient","grad","GrdF","Intr","smoothness","colorStops","Clrs","location","Lctn","midpoint","Mdpn","opacityStops","Trns","roughness","Smth","colorModel","ClrS","randomSeed","RndS","restrictColors","VctC","addTransparency","ShTr","serializeGradient","GrdT","Rvrs","reverse","Angl","angle","parseAngle","Algn","align","Ofst","Lnkd","phase","unitsAngle","parsePercentOrAngle","Brgh","Blck","Lmnc","obj","reportErrors","useGlobalLight","antialiased","highlightColor","shadowColor","highlightBlendMode","shadowBlendMode","BESl","direction","BESs","technique","bvlT","BETE","source","IGSr","highlightOpacity","shadowOpacity","altitude","soften","strength","noise","range","choke","jitter","distance","contour","curve","objName","uglg","Invr","hglC","sdwC","hglM","sdwM","bvlS","bvlD","GlwT","glwS","hglO","sdwO","lagl","Lald","Sftn","srgR","blur","Nose","Inpr","Ckmt","ShdN","Dstn","gradientType","stopsCount","opacityStopsCount","interpolation","mode","whites","neutrals","blacks","Vrsn","curvesPresetKind","curvesPresetFileName","mixerPresetKind","mixerPresetFileName","Cntr","means","auto","Auto","filterMask","colorSpace","autoExpandOffset","horizontal","vertical","origin","autoExpandEnabled","autoNestEnabled","autoPositionEnabled","shrinkwrapOnSaveEnabled","docDefaultNewArtboardBackgroundColor","docDefaultNewArtboardBackgroundType","artb","compositorUsed","description","reason","engine","Engn","enableCompCore","enableCompCoreGPU","compCoreSupport","compCoreGPUSupport","cinf","fix","_extn","fillOpacity","transparencyShapesLayer","unitsMap","unitsMapRev","logErrors","makeType","classID","fieldToExtType","printProofSetup","MpgS","TrnS","psVersion","generatorSettings","crema","fieldToArrayExtType","typeToField","fieldToArrayType","fieldToType","field","getTypeByKey","root","readAsciiStringOrClassId","writeAsciiStringOrClassId","readDescriptorStructure","object","readClassStructure","itemsCount","readOSType","writeDescriptorStructure","classId","extType","writeOSType","items","keyID","typeID","readReferenceStructure","low","high","type1","valuesCount","readInt32LE","charsCount","ObArTypes","_key","test","enumValue","writeClassStructure","writeReferenceStructure","JSON","stringify","_type","expectedUnits","none","sharp","crisp","strong","smooth","platform","platformLCD","arc","arcLower","arcUpper","arch","bulge","shellLower","shellUpper","flag","wave","fish","rise","fisheye","inflate","squeeze","twist","custom","up","down","softer","precise","edge","center","linear","radial","reflected","diamond","hsb","lab","outside","inside","butt","square","miter","RESOLUTION_UNITS","MEASUREMENT_UNITS","hex","charToNibble","readUtf8String","decodeString","writeUtf8String","encodeString","_ir1028","captionDigest","byte","xmpMetadata","Inte","printInformation","printerName","renderingIntent","PstS","printerManagesColors","printerProfile","MpBl","blackPointCompensation","printSixteenBit","hardProof","proofSetup","builtin","Bltn","paperWhite","_ir1083","resolutionInfo","horizontalResolution","readFixedPoint32","horizontalResolutionUnit","widthUnit","verticalResolution","verticalResolutionUnit","heightUnit","writeFixedPoint32","printScaleStyles","printScale","alphaChannelNames","_ir1077","alphaIdentifiers","backgroundColor","globalAngle","globalAltitude","printFlags","labels","cropMarks","colorBars","registrationMarks","negative","flip","interpolate","caption","_ir10000","_ir1013","_ir1016","layerState","layersGroup","layerGroupsEnabledId","layerSelectionIds","gridAndGuidesInformation","grid","guides","urlsList","_ir1050","pixelAspectRatio","aspect","iccUntaggedProfile","_ir1039","idsSeedNumber","thumbnailRaw","format","bitsPerPixel","planes","useRawThumbnail","toDataURL","widthBytes","totalSize","sizeAfterCompression","versionInfo","hasRealMergedData","writerName","readerName","fileVersion","_ir1058","imageReadyVariables","imageReadyDataSets","pathSelectionState","_left","_ir1025","FrmD","dispose","_ir4000","frames","FrIn","FrID","delay","FrDl","FrDs","animations","FSts","FsID","FsFr","repeats","LCnt","_ir4001","base64","require","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","prototype","arg","encodingOrOffset","this","allocUnsafe","from","TypeError","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","isBuffer","checked","copy","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","hi","lo","utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","stringtrim","base64clean","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","module","bevelStyles","readBlendMode","writeBlendMode","readFixedPoint8","writeFixedPoint8","writeShadowInfo","shadow","effectsCount","visible","blockSize","shadowInfo","charLengthInBytes","stringLengthInBytes","extra","writeCharacter","encodeStringTo","continuationByte","byte1","toUpperCase","isWhitespace","char","isNumber","skipWhitespace","getTextByte","getText","pushContainer","pushValue","pushProperty","parseFloat","floatKeys","intArrays","condensed","indent","writeString","writeIndent","writeProperty","writeValue","serializeFloat","toFixed","serializeNumber","serializeInt","getKeys","splice","writeStringByte","inProperty","writePrefix","charAt","every","intArray","defaultFont","script","synthetic","defaultParagraphStyle","justification","firstLineIndent","startIndent","endIndent","spaceBefore","spaceAfter","autoHyphenate","hyphenatedWordSize","preHyphen","postHyphen","consecutiveHyphens","zone","wordSpacing","letterSpacing","glyphSpacing","autoLeading","leadingType","hanging","burasagari","kinsokuOrder","everyLineComposer","defaultStyle","font","fontSize","fauxBold","fauxItalic","leading","horizontalScale","verticalScale","tracking","autoKerning","kerning","baselineShift","fontCaps","fontBaseline","underline","strikethrough","ligatures","dLigatures","baselineDirection","tsume","styleRunAlignment","language","noBreak","fillColor","strokeColor","fillFlag","strokeFlag","fillFirst","yUnderline","outlineWidth","characterDirection","hindiNumbers","kashida","diacriticPos","defaultGridInfo","isOn","show","leadingFillColor","alignLineHeightToGridFlags","paragraphStyleKeys","styleKeys","antialias","upperFirst","decodeColor","Values","encodeColor","arraysEqual","objectsEqual","findOrAddFont","fonts","decodeObject","Key","encodeObject","decodeParagraphStyle","decodeStyle","encodeParagraphStyle","encodeStyle","deduplicateValues","base","runs","engineDict","EngineDict","resourceDict","ResourceDict","FontSet","f","Name","Script","FontType","Synthetic","Editor","Text","removedCharacters","AntiAlias","useFractionalGlyphWidths","UseFractionalGlyphWidths","superscriptSize","SuperscriptSize","superscriptPosition","SuperscriptPosition","subscriptSize","SubscriptSize","subscriptPosition","SubscriptPosition","smallCapSize","SmallCapSize","photoshop","Rendered","Shapes","Children","Cookie","Photoshop","shapeType","ShapeType","PointBase","pointBase","BoxBounds","boxBounds","paragraphRun","ParagraphRun","paragraphStyle","paragraphStyleRuns","RunArray","RunLengthArray","ParagraphSheet","Properties","counter","styleRun","StyleRun","styleRuns","StyleSheet","StyleSheetData","defFont","paragraphRunArray","paragraphRunLengthArray","paragraphRuns","runLength","DefaultStyleSheet","Adjustments","Axis","XY","last","styleSheetData","styleRunArray","styleRunLengthArray","leftLength","gridInfo","WritingDirection","Procession","Base","TransformPoint0","TransformPoint1","TransformPoint2","defaultResources","KinsokuSet","NoStart","NoEnd","Keep","Hanging","MojiKumiSet","InternalName","TheNormalStyleSheet","TheNormalParagraphSheet","ParagraphSheetSet","StyleSheetSet","DefaultRunData","IsJoinable","GridInfo","GridIsOn","ShowGrid","GridSize","GridLeading","GridColor","GridLeadingFillColor","AlignLineHeightToGridFlags","Version","Lines","DocumentResources","dynamicsControl","parseDynamics","control","bVTy","steps","fStp","minimum","parseBrushShape","shape","parseUnitsToNumber","Dmtr","roundness","Rndn","spacingOn","spacing","Spcn","flipX","flipY","Hrdn","hardness","sampledData","createReader","samples","brushes","patterns","minorVersion","brushLength","brushEnd","depth","alpha","Brsh","brush","wetEdges","Wtdg","useBrushSize","interpretation","protectTexture","useTipDynamics","shapeDynamics","tiltScale","sizeDynamics","szVr","angleDynamics","roundnessDynamics","brushProjection","minimumDiameter","minimumRoundness","useScatter","scatter","bothAxes","countDynamics","scatterDynamics","useTexture","texture","Txtr","textureBlendMode","textureDepth","depthMinimum","minimumDepth","depthDynamics","textureDepthDynamics","textureScale","InvT","textureBrightness","textureContrast","db","dualBrush","useDualBrush","Flip","useColorDynamics","colorDynamics","foregroundBackground","clVr","purity","perTip","colorDynamicsPerTip","usePaintDynamics","transfer","flowDynamics","prVr","opacityDynamics","opVr","wetnessDynamics","wtVr","mixDynamics","mxVr","useBrushPose","brushPose","overrideAngle","overridePoseAngle","overrideTiltX","overridePoseTiltX","overrideTiltY","overridePoseTiltY","overridePressure","overridePosePressure","pressure","brushPosePressure","tiltX","brushPoseTiltX","tiltY","brushPoseTiltY","brushPoseAngle","to","toolOptions","brushPreset","flow","Smoo","smoothing","smoothingValue","smoothingRadiusMode","smoothingCatchup","smoothingCatchupAtEnd","smoothingZoomCompensation","pressureSmoothing","usePressureOverridesSize","usePressureOverridesOpacity","readPattern","hierarchy","csh","shapes","ColorMode","SectionDividerType","initializeCanvas","writePsdUint8Array","createWriter","writePsd","getWriterBufferNoCopy","byteArrayToBase64","readPsd","getWriterBuffer"],"mappings":";0iBAAA,YAuDA,SAAgBA,EAAOC,GACtB,IAAMC,EAAe,GAErB,OADAC,OAAOC,KAAKH,GAAKI,SAAQ,SAAAC,GAAO,OAAAJ,EAAOD,EAAIK,IAAX,KACzBJ,EAvDK,EAAAK,eAAgB,EAChB,EAAAC,gBAAiB,EAEjB,EAAAC,cAA2C,GAC3C,EAAAC,YAA4C,CACxD,KAAQ,eACR,KAAQ,SACR,KAAQ,WACR,KAAQ,SACR,OAAQ,WACR,KAAQ,aACR,KAAQ,cACR,KAAQ,eACR,KAAQ,UACR,KAAQ,SACR,OAAQ,cACR,KAAQ,eACR,KAAQ,gBACR,KAAQ,UACR,KAAQ,aACR,KAAQ,aACR,KAAQ,cACR,KAAQ,eACR,KAAQ,YACR,KAAQ,WACR,KAAQ,aACR,KAAQ,YACR,KAAQ,WACR,KAAQ,SACR,OAAQ,MACR,OAAQ,aACR,KAAQ,QACR,OAAQ,cAGTP,OAAOC,KAAK,EAAAM,aAAaL,SAAQ,SAAAC,GAAO,SAAAG,cAAc,EAAAC,YAAYJ,IAA1B,KAE3B,EAAAK,YAA4B,CACxC,OAAQ,MAAO,SAAU,SAAU,QAAS,OAAQ,SAAU,QAGlD,EAAAC,wBAA0B,CAEtC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAEhG,QAOD,WAMA,sBAA8BC,EAAgBC,EAAab,GAC1D,IAAMc,EAAMf,EAAOC,GAUnB,MAAO,CAAEe,OATM,SAACC,GACf,IAAMC,EAAQD,EAAIE,MAAM,KAAK,GAC7B,GAAID,IAAUH,EAAIG,GAAQ,MAAM,IAAIE,MAAM,iCAAiCH,EAAG,KAC9E,OAAQF,EAAIG,IAAkBJ,GAMdO,OAJF,SAACJ,GACf,GAAIA,IAAQhB,EAAIgB,GAAa,MAAM,IAAIG,MAAM,4BAA4BH,EAAG,KAC5E,OAAUJ,EAAM,KAAIZ,EAAIgB,IAAehB,EAAIa,OAK7C,SAAkBQ,GACjB,iBACA,iBACA,mBACA,iBACA,6BALD,CAAkB,EAAAA,aAAA,EAAAA,WAAU,KAQ5B,SAAkBC,GACjB,yDACA,6CACA,iEACA,yEACA,oEALD,CAAkB,EAAAA,iBAAA,EAAAA,eAAc,KAQhC,SAAkBC,GACjB,yCACA,yCACA,6CACA,6CAJD,CAAkB,EAAAA,aAAA,EAAAA,WAAU,KAO5B,SAAkBC,GACjB,iBACA,qBACA,mBACA,oCACA,4BACA,oCAND,CAAkB,EAAAA,YAAA,EAAAA,UAAS,KAS3B,SAAkBC,GACjB,yBACA,qCACA,mDACA,6CAJD,CAAkB,EAAAA,cAAA,EAAAA,YAAW,KAuC7B,4BAAiCC,GAChC,OAAQA,GACP,OAAoB,OAAO,EAC3B,OAAsB,OAAO,EAC7B,OAAqB,OAAO,EAC5B,OAA6B,OAAO,EACpC,QAAS,OAAOA,EAAY,IAI9B,iBAAsBT,EAAeU,EAAaC,GACjD,OAAOX,EAAQU,EAAMA,EAAOV,EAAQW,EAAMA,EAAMX,GAGjD,oBAAyBY,GAGxB,IAFA,IAAMC,EAAOD,EAAKE,MAAQF,EAAKG,OAAS,EAE/BC,EAAI,EAAGA,EAAIH,EAAMG,GAAK,EAC9B,GAAqB,MAAjBJ,EAAKA,KAAKI,GACb,OAAO,EAIT,OAAO,GAGR,0BAA+B,GAI9B,I,IAJgCF,EAAK,QAAEC,EAAM,SAAEH,EAAI,OAC7CC,EAAQC,EAAQC,EAAU,EAC1BE,EAAS,IAAIC,YAAYN,EAAKK,QAE3BE,EAAI,EAAGA,EAAIN,EAAMM,EAAKA,EAAI,EAAK,EACvCF,EAAOE,GAAK,YAId,wBAA6BC,EAAmBC,EAAoBP,EAAeC,GAClF,IAAK,IAAIO,EAAI,EAAGH,EAAI,EAAGI,EAAI,EAAGD,EAAIP,EAAQO,IACzC,IAAK,IAAIE,EAAI,EAAGA,EAAIV,GAGnB,IAFA,IAAIW,EAAIL,EAAMG,KAELP,EAAI,EAAGA,EAAI,GAAKQ,EAAIV,EAAOE,IAAKQ,IAAK,CAC7C,IAAME,EAAQ,IAAJD,EAAW,EAAI,IACzBA,IAAS,EACTJ,EAAOF,KAAOO,EACdL,EAAOF,KAAOO,EACdL,EAAOF,KAAOO,EACdL,EAAOF,KAAO,MAMlB,wBAA6BP,EAAiBe,EAAgBb,EAAeC,GAC5E,GAAKD,GAAUC,EAAf,CAKA,IAFA,IAAMa,EAAQ,IAAIC,WAAWf,EAAQC,GAE5BC,EAAI,EAAGA,EAAIY,EAAME,OAAQd,IACjCY,EAAMZ,GAAKJ,EAAKA,KAAS,EAAJI,EAAQW,GAG9B,OAAOC,IAGR,wBACCX,EAAoB,EAAqBH,EAAeC,EAAgBgB,EACxEC,G,IADsBpB,EAAI,OAG1B,GAAKE,GAAUC,EAAf,CAOA,IALA,IAAMkB,EAAU,EAAInB,EAAS,EAEzBoB,EAAK,EACLX,EAAKQ,EAAQD,QAAUE,EAAQ,EAAI,GAAKjB,EAAU,EAEjC,MAAAgB,EAAA,eACpB,IADI,IAAMJ,EAAM,KACPL,EAAI,EAAGH,EAAa,EAATQ,EAAYL,EAAIP,EAAQO,IAAK,CAChD,IAAMa,EAAeb,EAAIW,EAAU,EAC7BG,EAAaD,EAAcF,EAAU,EACrCI,EAAaD,EAAYT,EAAS,EAAK,EACvCW,EAAcD,EAAY,EAAK,EAC/BE,EAAchB,EAEpB,IAAKJ,EAAKgB,EAAcR,EAAU,EAAGR,EAAIiB,EAAWjB,EAAKA,EAAI,EAAK,EACjE,GAAIA,EAAImB,EAAY,CACnB,IAAIE,EAAS5B,EAAKO,GAEdsB,EAAS7B,EADbO,EAAKA,EAAI,EAAK,GAGVuB,EAAS9B,EADbO,EAAKA,EAAI,EAAK,GAGd,GAAIqB,IAAWC,GAAUD,IAAWE,EAAQ,CAG3C,IAFA,IAAIC,EAAQ,EAELA,EAAQ,KAAOxB,EAAIkB,GAAazB,EAAMO,EAAI,EAAK,KAAOqB,GAC5DG,EAASA,EAAQ,EAAK,EACtBxB,EAAKA,EAAI,EAAK,EAGfF,EAAOM,KAAO,EAAIoB,EAClB1B,EAAOM,KAAOiB,MACR,CACN,IAAMI,EAAarB,EACfsB,GAAY,EACZF,EAAQ,EAIZ,IAHA1B,EAAOM,KAAO,EACdN,EAAOM,KAAOiB,EAEPrB,EAAIkB,GAAaM,EAAQ,KAAK,CAMpC,GAJAH,EAASC,EACTA,EAASC,EACTA,EAAS9B,EAHTO,EAAKA,EAAI,EAAK,GAKVqB,IAAWC,GAAUD,IAAWE,EAAQ,CAC3CvB,EAAKA,EAAI,GAAM,EACf0B,GAAY,EACZ,MAEAF,IACA1B,EAAOM,KAAOiB,EAIZK,IACCF,EAAQ,KACX1B,EAAOM,KAAOkB,EACdxB,EAAOM,KAAOmB,EACdC,GAAS,GACCA,EAAQ,KAClB1B,EAAOM,KAAOkB,EACdE,IACAxB,EAAKA,EAAI,EAAK,GAEdA,EAAKA,EAAI,EAAK,GAIhBF,EAAO2B,GAAcD,EAAQ,QAEpBxB,IAAMkB,GAChBpB,EAAOM,KAAO,EACdN,EAAOM,KAAOX,EAAKO,KAEnBF,EAAOM,KAAO,EACdN,EAAOM,KAAOX,EAAKO,GACnBA,EAAKA,EAAI,EAAK,EACdF,EAAOM,KAAOX,EAAKO,IAIrB,IAAM,EAASI,EAAIgB,EAEfP,IACHf,EAAOiB,KAAS,GAAU,GAAM,IAChCjB,EAAOiB,KAAS,GAAU,GAAM,KAGjCjB,EAAOiB,KAAS,GAAU,EAAK,IAC/BjB,EAAOiB,KAAiB,IAAT,EAIjB,OAAOjB,EAAO6B,MAAM,EAAGvB,KAGb,EAAAwB,aAAqE,WAC/E,MAAM,IAAI7C,MAAM,sFAGN,EAAA8C,qBAAgE,WAC1E,MAAM,IAAI9C,MAAM,8FAGjB,IAAI+C,OAA4CC,EAErC,EAAAC,gBAAgE,SAACrC,EAAOC,GAElF,OADKkC,IAAYA,EAAa,EAAAF,aAAa,EAAG,IACvCE,EAAWG,WAAW,MAAOD,gBAAgBrC,EAAOC,IAGpC,qBAAbsC,WACV,EAAAN,aAAe,SAACjC,EAAOC,GACtB,IAAMuC,EAASD,SAASE,cAAc,UAGtC,OAFAD,EAAOxC,MAAQA,EACfwC,EAAOvC,OAASA,EACTuC,GAGR,EAAAN,qBAAuB,SAACpC,GACvB,IAAM4C,EAAQ,IAAIC,MAClBD,EAAME,IAAM,0BAA4B,EAAAC,cAAc/C,GACtD,IAAM0C,EAASD,SAASE,cAAc,UAItC,OAHAD,EAAOxC,MAAQ0C,EAAM1C,MACrBwC,EAAOvC,OAASyC,EAAMzC,OACtBuC,EAAOF,WAAW,MAAOQ,UAAUJ,EAAO,EAAG,GACtCF,IAIT,4BACCO,EACAC,EACAC,GAEA,EAAAhB,aAAec,EACf,EAAAb,qBAAuBc,GAA8B,EAAAd,qBACrD,EAAAG,gBAAkBY,GAAyB,EAAAZ,kB,mtBC7V5C,YAIA,QACA,QAWa,EAAAa,oBAAsB,CAAC,EAAD,KACnC,IAAMC,EAAa,CAAC,SAAU,YAAa,UAAW,MAAO,OAAQ,eAAgB,UAAW,OAEhG,SAASC,EAAetD,GAGvB,IAFA,IAAMC,EAAOD,EAAKE,MAAQF,EAAKG,OAAS,EAE/BC,EAAI,EAAGA,EAAIH,EAAMG,GAAK,EAC9BJ,EAAKA,KAAKI,EAAI,GAAKJ,EAAKA,KAAKI,GAC7BJ,EAAKA,KAAKI,EAAI,GAAKJ,EAAKA,KAAKI,GAc/B,SAAgBmD,EAAUC,GAEzB,OADAA,EAAOzC,QAAU,EACVyC,EAAOC,KAAKC,SAASF,EAAOzC,OAAS,GAG7C,SAAgB4C,EAAUH,GACzB,OAAOA,EAAOC,KAAKC,SAASF,EAAOzC,QAGpC,SAAgB6C,EAAUJ,GAEzB,OADAA,EAAOzC,QAAU,EACVyC,EAAOC,KAAKI,SAASL,EAAOzC,OAAS,GAAG,GAGhD,SAAgB+C,EAAWN,GAE1B,OADAA,EAAOzC,QAAU,EACVyC,EAAOC,KAAKM,UAAUP,EAAOzC,OAAS,GAAG,GAGjD,SAAgBiD,EAAUR,GAEzB,OADAA,EAAOzC,QAAU,EACVyC,EAAOC,KAAKQ,SAAST,EAAOzC,OAAS,GAAG,GAQhD,SAAgBmD,EAAWV,GAE1B,OADAA,EAAOzC,QAAU,EACVyC,EAAOC,KAAKU,UAAUX,EAAOzC,OAAS,GAAG,GAQjD,SAAgBqD,EAAYZ,GAE3B,OADAA,EAAOzC,QAAU,EACVyC,EAAOC,KAAKY,WAAWb,EAAOzC,OAAS,GAAG,GAalD,SAAgBuD,EAAUd,EAAmBtC,GAE5C,OADAsC,EAAOzC,QAAUG,EACV,IAAID,WAAWuC,EAAOC,KAAKpD,OAAQmD,EAAOC,KAAKc,WAAaf,EAAOzC,OAASG,EAAQA,GAG5F,SAAgBsD,EAAchB,GAC7B,OAAOiB,EAAgBjB,EAAQ,GAGhC,SAAgBkB,EAAiBlB,EAAmBmB,GAInD,IAHA,IAAIzD,EAASqC,EAAUC,GACjBoB,EAAO1D,EAASuD,EAAgBjB,EAAQtC,GAAU,KAE/CA,EAASyD,GACjBnB,EAAOzC,SAGR,OAAO6D,EAGR,SAAgBC,EAAkBrB,GAEjC,OAAOsB,EAA4BtB,EADpBU,EAAWV,IAI3B,SAAgBsB,EAA4BtB,EAAmBtC,GAG9D,IAFA,IAAI0D,EAAO,GAEJ1D,KAAU,CAChB,IAAM9B,EAAQ0E,EAAWN,IAErBpE,GAAS8B,EAAS,KACrB0D,GAAQG,OAAOC,aAAa5F,IAI9B,OAAOwF,EAaR,SAAgBK,EAAUzB,EAAmBzB,GAC5CyB,EAAOzC,QAAUgB,EAGlB,SAAgBmD,EAAe1B,EAAmB2B,EAAWtE,GAC5D,IAAME,EAASyC,EAAOzC,OAChBqE,EAAYZ,EAAchB,GAEhC,GAAI4B,IAAcD,GAAKC,IAAcvE,EACpC,MAAM,IAAIvB,MAAM,uBAAuB8F,EAAS,UAAUrE,EAAOsE,SAAS,KAI5E,SAASZ,EAAgBjB,EAAmBtC,GAI3C,IAHA,IAAMb,EAASiE,EAAUd,EAAQtC,GAC7B9C,EAAS,GAEJgC,EAAI,EAAGA,EAAIC,EAAOa,OAAQd,IAClChC,GAAU2G,OAAOC,aAAa3E,EAAOD,IAGtC,OAAOhC,EAiKR,SAASkH,EAAgB9B,EAAmB+B,EAAUC,GACrD,IAAMC,EAAe,GACrBA,EAAMC,IAAM1B,EAAUR,GACtBiC,EAAME,KAAO3B,EAAUR,GACvBiC,EAAMG,OAAS5B,EAAUR,GACzBiC,EAAMI,MAAQ7B,EAAUR,GAKxB,IAHA,IAAMsC,EAAehC,EAAWN,GAC1BuC,EAA0B,GAEvB3F,EAAI,EAAGA,EAAI0F,EAAc1F,IAAK,CACtC,IAAI4F,EAAYpC,EAAUJ,GACtByC,EAAgB/B,EAAWV,GAE/B,GAAIgC,EAAQpE,MAAO,CAClB,GAAsB,IAAlB6E,EAAqB,MAAM,IAAI3G,MAAM,2CACzC2G,EAAgB/B,EAAWV,GAG5BuC,EAASG,KAAK,CAAEC,GAAIH,EAAW9E,OAAQ+E,IAGxCf,EAAe1B,EAAQ,QACvB,IAAM4C,EAAY5B,EAAchB,GAChC,IAAK,EAAA5E,YAAYwH,GAAY,MAAM,IAAI9G,MAAM,wBAAwB8G,EAAS,KAC9EX,EAAMW,UAAY,EAAAxH,YAAYwH,GAE9BX,EAAMY,QAAU9C,EAAUC,GAAU,IACpCiC,EAAMa,SAAiC,IAAtB/C,EAAUC,GAE3B,IAAM+C,EAAQhD,EAAUC,GAqBxB,OApBAiC,EAAMe,sBAA2C,KAAV,EAARD,GAC/Bd,EAAMgB,OAA4B,KAAV,EAARF,GAKhBtB,EAAUzB,EAAQ,GAElBkD,EAAYlD,EAAQ,GAAG,SAAAmC,GACtB,IAAMgB,EAcR,SAA2BnD,EAAmBgC,GAC7C,OAAOkB,EAAuClD,EAAQ,GAAG,SAAAmC,GACxD,GAAKA,IAAL,CAEA,IAAMgB,EAAsB,GAC5BA,EAAKjB,IAAM1B,EAAUR,GACrBmD,EAAKhB,KAAO3B,EAAUR,GACtBmD,EAAKf,OAAS5B,EAAUR,GACxBmD,EAAKd,MAAQ7B,EAAUR,GACvBmD,EAAKC,aAAerD,EAAUC,GAE9B,IAAM+C,EAAQhD,EAAUC,GAKxB,GAJAmD,EAAKE,wBAA+E,KAA5C,EAARN,GAChCI,EAAKG,SAA0D,KAAtC,EAARP,GACjBI,EAAKI,eAA8E,KAApD,EAARR,GAEX,GAARA,EAAqD,CACxD,IAAMS,EAASzD,EAAUC,GACZ,EAATwD,IAAqCL,EAAKM,gBAAkB1D,EAAUC,GAAU,KACvE,EAATwD,IAAqCL,EAAKO,gBAAkB9C,EAAYZ,IAC/D,EAATwD,IAAuCL,EAAKQ,kBAAoB5D,EAAUC,GAAU,KAC3E,EAATwD,IAAuCL,EAAKS,kBAAoBhD,EAAYZ,IAejF,OAZImC,IAAS,IACZH,EAAQ6B,oBAAsBC,QAAQC,IAAI,+BAEpBhE,EAAUC,GACGD,EAAUC,GAC5BQ,EAAUR,GACTQ,EAAUR,GACRQ,EAAUR,GACXQ,EAAUR,IAG9ByB,EAAUzB,EAAQmC,KACXgB,MAlDMa,CAAkBhE,EAAQgC,GAMvC,IALImB,IAAMlB,EAAMkB,KAAOA,GAqDzB,SAAiCnD,GACzBkD,EAAYlD,EAAQ,GAAG,SAAAmC,GAK7B,IAJA,IAAM8B,EAA2BvD,EAAWV,GACtCkE,EAAsCxD,EAAWV,GACjDmE,EAAS,GAERhC,KAAQ,CACd,IAAMiC,EAAc1D,EAAWV,GACzBqE,EAAY3D,EAAWV,GAC7BmE,EAAOzB,KAAK,CAAE0B,YAAW,EAAEC,UAAS,IAGrC,MAAO,CAAEJ,yBAAwB,EAAEC,oCAAmC,EAAEC,OAAM,MA/DnDG,CAAwBtE,GACnDiC,EAAMsC,KAAOrD,EAAiBlB,EAAQ,GAE/BmC,KACNqC,EAAwBxE,EAAQiC,EAAOF,EAAKC,MAIvC,CAAEC,MAAK,EAAEM,SAAQ,GA2DzB,SAASkC,EACRzE,EAAmB+B,EAAUE,EAAcM,EAAyBP,GAEpE,IAGI0C,EAHEC,GAAc1C,EAAMI,OAAS,IAAMJ,EAAME,MAAQ,GACjDyC,GAAe3C,EAAMG,QAAU,IAAMH,EAAMC,KAAO,GAIpDyC,GAAcC,IACjBF,EAAY,EAAA3F,gBAAgB4F,EAAYC,GACxC,EAAAC,eAAeH,IAGZ,EAAAxJ,iBACF+G,EAAc6C,aAAe,IAG/B,IAAsB,UAAAvC,EAAA,eAAU,CAA3B,IAAMwC,EAAO,KACXC,EAAc1E,EAAWN,GAE/B,IAAc,IAAV+E,EAAQpC,GAA2B,CACtC,IAAMQ,EAAOlB,EAAMkB,KAEnB,IAAKA,EAAM,MAAM,IAAIrH,MAAM,2BAE3B,IAAMmJ,GAAa9B,EAAKd,OAAS,IAAMc,EAAKhB,MAAQ,GAC9C+C,GAAc/B,EAAKf,QAAU,IAAMe,EAAKjB,KAAO,GAErD,GAAI+C,GAAaC,EAAY,CAC5B,IAAMC,EAAW,EAAApG,gBAAgBkG,EAAWC,GAC5C,EAAAL,eAAeM,GAEf,IAAMC,EAAQpF,EAAOzC,OACrB8H,EAASrF,EAAQmF,EAAUH,EAAaC,EAAWC,EAAY,EAAGlD,EAAQpE,OAEtE,EAAA1C,iBACF+G,EAAcqD,YAAc,IAAI7H,WAAWuC,EAAOC,KAAKpD,OAAQmD,EAAOC,KAAKc,WAAaqE,EAAOpF,EAAOzC,OAAS6H,IAGjHtF,EAAeqF,GAEXnD,EAAQuD,aACXpC,EAAKuB,UAAYS,GAEjBhC,EAAKjE,OAAS,EAAAP,aAAasG,EAAWC,GACtC/B,EAAKjE,OAAOF,WAAW,MAAOwG,aAAaL,EAAU,EAAG,SAGpD,CACN,IAAM5H,EAAS,EAAAkI,iBAAiBV,EAAQpC,IACpC+C,EAAahB,EAEjB,GAAInH,EAAS,IACZmI,OAAa5G,EAETkD,EAAQ2D,yBACX,MAAM,IAAI7J,MAAM,0BAA0BiJ,EAAQpC,IAI9CyC,EAAQpF,EAAOzC,OACrB8H,EAASrF,EAAQ0F,EAAYV,EAAaL,EAAYC,EAAarH,EAAQyE,EAAQpE,OAE/E,EAAA1C,iBACF+G,EAAc6C,aAAaC,EAAQpC,IAAM,IAAIlF,WAAWuC,EAAOC,KAAKpD,OAAQmD,EAAOC,KAAKc,WAAaqE,EAAOpF,EAAOzC,OAAS6H,IAG1HM,GAA2B,IAAb3D,EAAI6D,WACrB9F,EAAe4F,IAKdhB,IACC1C,EAAQuD,aACXtD,EAAMyC,UAAYA,GAElBzC,EAAM/C,OAAS,EAAAP,aAAagG,EAAYC,GACxC3C,EAAM/C,OAAOF,WAAW,MAAOwG,aAAad,EAAW,EAAG,KAK7D,SAASW,EACRrF,EAAmBxD,EAA6BwI,EAA0BtI,EAAeC,EACzFY,EAAgBK,GAEhB,GAAoB,IAAhBoH,EACHa,EAAY7F,EAAQxD,EAAMe,EAAQb,EAAOC,OACnC,IAAoB,IAAhBqI,EAGV,MAAM,IAAIlJ,MAAM,mCAAmCkJ,GAFnDc,EAAY9F,EAAQxD,EAAME,EAAOC,EAAQ,EAAG,CAACY,GAASK,IAsBxD,SAAS4G,EAAwBxE,EAAmB+F,EAA6BhE,EAAUC,GAC1F,IAAMgE,EAAMhF,EAAchB,GAC1B,GAAY,SAARgG,GAA0B,SAARA,EAAgB,MAAM,IAAIlK,MAAM,uBAAuBkK,EAAG,WAAWhG,EAAOzC,OAAS,GAAGsE,SAAS,KACvH,IAAM7G,EAAMgG,EAAchB,GAGpBiG,EAAc,SAARD,GAAmBhE,EAAQpE,QAAmD,IAA1C,EAAAtC,wBAAwB4K,QAAQlL,GAEhFkI,EAAYlD,EAAQ,GAAG,SAAAmC,GACtB,IAAMgE,EAAU,EAAAC,gBAAgBpL,GAEhC,GAAImL,EACH,IACCA,EAAQE,KAAKrG,EAAQ+F,EAAQ5D,EAAMJ,EAAKC,GACvC,MAAOsE,GACR,GAAItE,EAAQ2D,wBAAyB,MAAMW,OAG5CtE,EAAQ6B,oBAAsBC,QAAQC,IAAI,8BAA8B/I,GACxEyG,EAAUzB,EAAQmC,KAGfA,MACHH,EAAQ6B,oBAAsBC,QAAQC,IAAI,UAAU5B,IAAM,oCAAoCnH,GAC9FyG,EAAUzB,EAAQmC,SAEjB,EAAO8D,GAkEX,SAASJ,EAAY7F,EAAmBuG,EAAkChJ,EAAgBb,EAAeC,GACxG,IAAMF,EAAOC,EAAQC,EACfE,EAASiE,EAAUd,EAAQvD,GAEjC,GAAI8J,GAAahJ,EAAS,EAGzB,IAFA,IAAMf,EAAO+J,EAAU/J,KAEdI,EAAI,EAAGG,EAAa,EAATQ,EAAYX,EAAIH,EAAMG,IAAKG,EAAKA,EAAI,EAAK,EAC5DP,EAAKO,GAAKF,EAAOD,GAKpB,SAAgBkJ,EACf9F,EAAmBuG,EAAkCC,EAAgB7J,EAAgB8J,EAAc9I,EACnGC,GAEA,IACI8I,EADElK,EAAO+J,GAAaA,EAAU/J,KAGpC,GAAIoB,EAAO,CACV8I,EAAU,IAAI5J,YAAYa,EAAQD,OAASf,GAE3C,IAAK,IAAIQ,EAAI,EAAGwJ,EAAK,EAAGxJ,EAAIQ,EAAQD,OAAQP,IAC3C,IAAK,IAAID,EAAI,EAAGA,EAAIP,EAAQO,IAAKyJ,IAChCD,EAAQC,GAAMjG,EAAWV,OAGrB,CACN0G,EAAU,IAAIE,YAAYjJ,EAAQD,OAASf,GAE3C,IAASQ,EAAI,EAAGwJ,EAAK,EAAGxJ,EAAIQ,EAAQD,OAAQP,IAC3C,IAASD,EAAI,EAAGA,EAAIP,EAAQO,IAAKyJ,IAChCD,EAAQC,GAAMrG,EAAWN,GAKvB,IAAI6G,EAAI,EAAb,IAAgBF,EAAK,EAAGE,EAAIlJ,EAAQD,OAAQmJ,IAAK,CAChD,IAAMtJ,EAAsB,EAAbI,EAAQkJ,GAGvB,IAAKrK,IAFSqK,EAAI,GAAKtJ,EAAS,GAG/B,IAASL,EAAI,EAAGA,EAAIP,EAAQO,IAAKyJ,IAChClF,EAAUzB,EAAQ0G,EAAQC,QAGtB,CAAIzJ,EAAI,EAAb,IAAK,IAAWH,EAAa,EAATQ,EAAYL,EAAIP,EAAQO,IAAKyJ,IAIhD,IAHA,IAAM,EAASD,EAAQC,GACjB9J,EAASiE,EAAUd,EAAQ,GAExBpD,EAAI,EAAGA,EAAI,EAAQA,IAAK,CAChC,IAAIkK,EAASjK,EAAOD,GAEpB,GAAIkK,EAAS,IAAK,CACjB,IAAMlL,EAAQiB,IAASD,GACvBkK,EAAU,IAAMA,EAAU,EAE1B,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,EAAKA,EAAI,EAAK,EAC1CvK,EAAKO,GAAKnB,EACVmB,EAAKA,EAAI0J,EAAQ,OAEZ,GAAIK,EAAS,IACnB,IAASC,EAAI,EAAGA,GAAKD,EAAQC,EAAKA,EAAI,EAAK,EAC1CvK,EAAKO,GAAKF,IAASD,GACnBG,EAAKA,EAAI0J,EAAQ,EAMnB,GAAI7J,GAAK,EACR,MAAM,IAAId,MAAM,0CAA0Cc,EAAC,IAAI,MAQrE,SAAgBsG,EACflD,EAAmBgH,EAAeC,EAAiCC,EAAkBC,QAAlB,IAAAD,OAAA,QAAkB,IAAAC,OAAA,GAErF,IAAIzJ,EAASgD,EAAWV,GAExB,GAAImH,EAAY,CACf,GAAe,IAAXzJ,EAAc,MAAM,IAAI5B,MAAM,2CAClC4B,EAASgD,EAAWV,GAGrB,KAAItC,GAAU,GAAKwJ,GAAnB,CAEA,IAAIE,EAAMpH,EAAOzC,OAASG,EACpB9C,EAASqM,GAAK,WAAM,OAAAG,EAAMpH,EAAN,UAE1B,GAAIA,EAAOzC,OAAS6J,EACnB,MAAM,IAAItL,MAAM,2BAEjB,GAAIkE,EAAOzC,SAAW6J,EACrB,MAAM,IAAItL,MAAM,yBAAwBsL,EAAMpH,EAAOzC,QAAM,eAAeyC,EAAOzC,OAAOsE,SAAS,KAElG,KAAOuF,EAAMJ,GAAOI,IAGpB,OADApH,EAAOzC,OAAS6J,EACTxM,GApsBR,wBAA6BiC,EAAqBU,EAAiBG,GAElE,MAAO,CAAEuC,KADI,IAAIoH,SAASxK,EAAQU,EAAQG,GAC3BH,OAAQ,IAGxB,cAKA,cAIA,cAKA,eAKA,cAKA,uBAA4ByC,GAE3B,OADAA,EAAOzC,QAAU,EACVyC,EAAOC,KAAKQ,SAAST,EAAOzC,OAAS,GAAG,IAGhD,eAKA,uBAA4ByC,GAE3B,OADAA,EAAOzC,QAAU,EACVyC,EAAOC,KAAKqH,WAAWtH,EAAOzC,OAAS,GAAG,IAGlD,gBAMA,4BAAiCyC,GAChC,OAAOQ,EAAUR,GAAV,OAIR,gCAAqCA,GACpC,OAAOQ,EAAUR,IAAW,GAAK,KAGlC,cAKA,kBAIA,qBAWA,sBAKA,gCAcA,2BAAgCA,EAAmBtC,GAGlD,IAFA,IAAI0D,EAAO,GAEJ1D,KACN0D,GAAQG,OAAOC,aAAazB,EAAUC,IAGvC,OAAOoB,GAGR,cAIA,mBAoBA,mBAAwBpB,EAAmBgC,G,WAAA,IAAAA,MAAA,IAE1CN,EAAe1B,EAAQ,QACvB,IAAMuH,EAAUjH,EAAWN,GAC3B,GAAgB,IAAZuH,GAA6B,IAAZA,EAAe,MAAM,IAAIzL,MAAM,6BAA6ByL,GAEjF9F,EAAUzB,EAAQ,GAClB,IAAMuC,EAAWjC,EAAWN,GACtBrD,EAAS+D,EAAWV,GACpBtD,EAAQgE,EAAWV,GACnBwH,EAAiBlH,EAAWN,GAC5B4F,EAAYtF,EAAWN,GAE7B,IAAgD,IAA5C,EAAAJ,oBAAoBsG,QAAQN,GAC/B,MAAM,IAAI9J,MAAM,8BAAkD,QAArB,EAAA+D,EAAW+F,UAAU,QAAIA,IAEvE,IAAM7D,EAAW,CAAErF,MAAK,EAAEC,OAAM,EAAE4F,SAAQ,EAAEiF,eAAc,EAAE5B,UAAS,GAC/D6B,EAAG,OAAwBzF,GAAO,CAAEpE,MAAmB,IAAZ2J,IAGjDrE,EAAYlD,EAAQ,GAAG,SAAAmC,GACtB,GAAIsF,EAAI9B,wBAAyB,MAAM,IAAI7J,MAAM,iCACjD2F,EAAUzB,EAAQmC,QAInBe,EAAYlD,EAAQ,GAAG,SAAAmC,GACtB,I,iBACC,IAAM6D,EAAMhF,EAAchB,GAE1B,GAAY,SAARgG,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,EAC3E,MAAM,IAAIlK,MAAM,uBAAuBkK,EAAG,WAAWhG,EAAOzC,OAAS,GAAGsE,SAAS,KAGlF,IAAMc,EAAKrC,EAAWN,GACtBkB,EAAiBlB,EAAQ,GAEzBkD,EAAYlD,EAAQ,GAAG,SAAAmC,GACtB,IAAMgE,EAAU,EAAAuB,oBAAoB/E,GAC9BgF,EAAc,OAAPhF,KAAiB8E,EAAIG,cAMlC,GAJK7F,EAAI8F,iBACR9F,EAAI8F,eAAiB,IAGlB1B,IAAYwB,EACf,IACCxB,EAAQE,KAAKrG,EAAQ+B,EAAI8F,eAAgB1F,EAAMsF,GAC9C,MAAOnB,GACR,GAAImB,EAAI9B,wBAAyB,MAAMW,EACvC7E,EAAUzB,EAAQmC,UAInBV,EAAUzB,EAAQmC,SA3BdA,K,OAkCR,IAAI2F,GAAc,EAElB5E,EAAYlD,EAAQ,GAAG,SAAAmC,GAItB,GAHA2F,EAsCF,SAAuB9H,EAAmB+B,EAAUC,GACnD,IAAI8F,GAAc,EAoDlB,OAlDA5E,EAAYlD,EAAQ,GAAG,SAAAmC,GACtB,IAAI4F,EAAa3H,EAAUJ,GAEvB+H,EAAa,IAChBD,GAAc,EACdC,GAAcA,GAMf,IAHA,IAAMC,EAAkB,GAClBC,EAAiC,GAE9BrL,EAAI,EAAGA,EAAImL,EAAYnL,IAAK,CAC9B,MAAsBkF,EAAgB9B,EAAQ+B,EAAKC,GAAjDC,EAAK,QAAEM,EAAQ,WACvByF,EAAOtF,KAAKT,GACZgG,EAAcvF,KAAKH,GAGpB,IAAKP,EAAQkG,mBACZ,IAAStL,EAAI,EAAGA,EAAImL,EAAYnL,IAC/B6H,EAA0BzE,EAAQ+B,EAAKiG,EAAOpL,GAAIqL,EAAcrL,GAAIoF,GAItEP,EAAUzB,EAAQmC,KAEbJ,EAAIoG,WAAUpG,EAAIoG,SAAW,IAElC,IAAMC,EAAyB,CAACrG,GAEhC,IAASnF,EAAIoL,EAAOtK,OAAS,EAAGd,GAAK,EAAGA,IAAK,CAC5C,IAAMyL,EAAIL,EAAOpL,GACX0L,EAAOD,EAAEE,eAAiBF,EAAEE,eAAeD,KAAM,EAE1C,IAATA,GAAmD,IAATA,GAC7CD,EAAEG,OAAkB,IAATF,EACXD,EAAEF,SAAW,GACbC,EAAMA,EAAM1K,OAAS,GAAGyK,SAAUM,QAAQJ,GAC1CD,EAAM1F,KAAK2F,IACQ,IAATC,EACVF,EAAMM,MAMNN,EAAMA,EAAM1K,OAAS,GAAGyK,SAAUM,QAAQJ,WAG1CvJ,EAAWkD,EAAQpE,OAEfkK,EA3FQa,CAAc3I,EAAQ+B,EAAK0F,GAGrCtF,IAAS,EAAG,CACf,IAAMyG,EAwST,SAAiC5I,GAChC,OAAOkD,EAA6ClD,EAAQ,GAAG,SAAAmC,GAC9D,GAAKA,IAAL,CAEA,IAAM0G,EAAoBvI,EAAWN,GAC/B8I,EAAcxI,EAAWN,GACzB+I,EAAczI,EAAWN,GACzBgJ,EAAc1I,EAAWN,GACzBiJ,EAAc3I,EAAWN,GACzB6C,EAAUvC,EAAWN,GAAU,IAC/BkJ,EAAOnJ,EAAUC,GAEvB,OADAyB,EAAUzB,EAAQmC,KACX,CAAE0G,kBAAiB,EAAEC,YAAW,EAAEC,YAAW,EAAEC,YAAW,EAAEC,YAAW,EAAEpG,QAAO,EAAEqG,KAAI,OApThEC,CAAwBnJ,GAChD4I,IAAqB7G,EAAI6G,oBAAsBA,QAInDnH,EAAUzB,EAAQmC,KAGnB,KAAOA,IAAS,GAAG,CAElB,KAAOA,KAAgC,IAAtBhC,EAAUH,IAE1ByB,EAAUzB,EAAQ,GAGfmC,KAAU,GACbqC,EAAwBxE,EAAQ+B,EAAKA,EAAK0F,GAG1ChG,EAAUzB,EAAQmC,aAGlBrD,EAAW2I,EAAI7J,OAElB,IAAMwL,EAAcrH,EAAIoG,UAAYpG,EAAIoG,SAASzK,OAOjD,OANsB+J,EAAI4B,yBAA2B5B,EAAIS,oBAAsBkB,IA4ThF,SAAuBpJ,EAAmB+B,EAAU+F,EAAsB9F,GACzE,IAAMgD,EAAc1E,EAAWN,GAE/B,IAAqD,IAAjD,EAAAJ,oBAAoBsG,QAAQnE,EAAI6D,WACnC,MAAM,IAAI9J,MAAM,6BAA6BiG,EAAI6D,WAElD,GAAoB,IAAhBZ,GAAuD,IAAhBA,EAC1C,MAAM,IAAIlJ,MAAM,mCAAmCkJ,GAEpD,IAAMN,EAAY,EAAA3F,gBAAgBgD,EAAIrF,MAAOqF,EAAIpF,QAGjD,GAFA,EAAAkI,eAAeH,GAEE,IAAb3C,EAAI6D,UAAgC,CACvC,IAAI0D,OAAK,EAET,GAAoB,IAAhBtE,EACHsE,EAAQxI,EAAUd,EAAQuJ,KAAKC,KAAKzH,EAAIrF,MAAQ,GAAKqF,EAAIpF,YACnD,IAAoB,IAAhBqI,EAIV,MAAM,IAAIlJ,MAAM,qCAAqCkJ,GAFrDc,EAAY9F,EAAQ,CAAExD,KADtB8M,EAAQ,IAAI7L,WAAWsE,EAAIrF,MAAQqF,EAAIpF,QACJD,MAAOqF,EAAIrF,MAAOC,OAAQoF,EAAIpF,QAAUoF,EAAIrF,MAAOqF,EAAIpF,OAAQ,EAAG,CAAC,GAAIqF,EAAQpE,OAKnH,EAAA6L,aAAaH,EAAO5E,EAAUlI,KAAMuF,EAAIrF,MAAOqF,EAAIpF,YAC7C,CACN,IAAM4F,EAAwB,IAAbR,EAAI6D,UAAoC,CAAC,GAAK,CAAC,EAAG,EAAG,GAEtE,GAAI7D,EAAIQ,UAAYR,EAAIQ,SAAW,EAClC,IAAK,IAAI3F,EAAI,EAAGA,EAAImF,EAAIQ,SAAU3F,IAEjC2F,EAASG,KAAK9F,QAELkL,GACVvF,EAASG,KAAK,GAGf,GAAoB,IAAhBsC,EACH,IAASpI,EAAI,EAAGA,EAAI2F,EAAS7E,OAAQd,IACpCiJ,EAAY7F,EAAQ0E,EAAWnC,EAAS3F,GAAImF,EAAIrF,MAAOqF,EAAIpF,aAEtD,GAAoB,IAAhBqI,EAA2C,CACrD,IAAMI,EAAQpF,EAAOzC,OACrBuI,EAAY9F,EAAQ0E,EAAW3C,EAAIrF,MAAOqF,EAAIpF,OAAQ,EAAG4F,EAAUP,EAAQpE,OAEvE,EAAA1C,iBACF6G,EAAY+C,aAAe,IAAIrH,WAAWuC,EAAOC,KAAKpD,OAAQmD,EAAOC,KAAKc,WAAaqE,EAAOpF,EAAOzC,OAAS6H,IAIhG,IAAbrD,EAAI6D,WACP9F,EAAe4E,GAIb1C,EAAQuD,aACXxD,EAAI2C,UAAYA,GAEhB3C,EAAI7C,OAAS,EAAAP,aAAaoD,EAAIrF,MAAOqF,EAAIpF,QACzCoF,EAAI7C,OAAOF,WAAW,MAAOwG,aAAad,EAAW,EAAG,IApXxDgF,CAAc1J,EAAQ+B,EAAK+F,EAAaL,GAGlC1F,GAkYR,gBAmEA,gBA2BA,qBAA0B/B,GAGzB,OAFmBM,EAAWN,IAG7B,OACC,IAAM2J,EAAIrJ,EAAWN,GAAU,IACzB4J,EAAItJ,EAAWN,GAAU,IACzB3C,EAAIiD,EAAWN,GAAU,IAE/B,OADAyB,EAAUzB,EAAQ,GACX,CAAE2J,EAAC,EAAEC,EAAC,EAAEvM,EAAC,GAEjB,OACC,IAAMwM,EAAIvJ,EAAWN,GAAU,MACzB8J,EAAIxJ,EAAWN,GAAU,MACzB3C,EAAIiD,EAAWN,GAAU,MAE/B,OADAyB,EAAUzB,EAAQ,GACX,CAAE6J,EAAC,EAAEC,EAAC,EAAEzM,EAAC,GAEjB,OAKC,MAAO,CAAEwJ,EAJCvG,EAAWN,GAAU,IAInB+J,EAHFzJ,EAAWN,GAAU,IAGhB9C,EAFLoD,EAAWN,GAAU,IAEbgK,EADZA,EAAI1J,EAAWN,GAAU,KAGhC,OACC,IAAMqI,EAAIjI,EAAUJ,GAAU,IACxBiK,EAAK7J,EAAUJ,GACfkK,EAAK9J,EAAUJ,GACf2B,EAAIsI,EAAK,EAAKA,EAAK,MAAUA,EAAK,MAClC5M,EAAI6M,EAAK,EAAKA,EAAK,MAAUA,EAAK,MAExC,OADAzI,EAAUzB,EAAQ,GACX,CAAEqI,EAAC,EAAE1G,EAAC,EAAEtE,EAAC,GAEjB,OACC,IAAM2M,EAAyB,IAArB1J,EAAWN,GAAgB,IAErC,OADAyB,EAAUzB,EAAQ,GACX,CAAEgK,EAAC,GAEX,QACC,MAAM,IAAIlO,MAAM,yBAInB,uBAA4BkE,GAC3BU,EAAWV,GACX,IAAMuH,EAAU7G,EAAWV,GAC3B,GAAgB,IAAZuH,EAAe,MAAM,IAAIzL,MAAM,4BAA4ByL,GAE/D,IAAM3B,EAAYlF,EAAWV,GACvB5C,EAAIgD,EAAUJ,GACd9C,EAAIkD,EAAUJ,GAGpB,GAAkB,IAAd4F,GAA6C,IAAdA,EAAmC,MAAM,IAAI9J,MAAM,kCAEtF,IAAMyI,EAAOlD,EAAkBrB,GACzB2C,EAAKzB,EAAiBlB,EAAQ,GAK9BmK,EAAWzJ,EAAWV,GAC5B,GAAiB,IAAbmK,EAAgB,MAAM,IAAIrO,MAAM,iCAAiCqO,GAErEzJ,EAAWV,GAUX,IATA,IAAMkC,EAAMxB,EAAWV,GACjBmC,EAAOzB,EAAWV,GAClBoC,EAAS1B,EAAWV,GACpBqC,EAAQ3B,EAAWV,GACnBoK,EAAgB1J,EAAWV,GAC3BtD,EAAQ2F,EAAQF,EAChBxF,EAASyF,EAASF,EAClB1F,EAAO,IAAIiB,WAAWf,EAAQC,EAAS,GAEpCC,EAAI,EAAGA,EAAIJ,EAAK6N,WAAYzN,GAAK,EACzCJ,EAAKI,GAAK,IAGFA,EAAI,EAAb,IAAK,IAAW0N,EAAK,EAAG1N,EAAKwN,EAAgB,EAAIxN,IAAK,CAGrD,GAFY8D,EAAWV,GAEd,CACR,IAAM,EAASU,EAAWV,GACpBuK,EAAa7J,EAAWV,GACxBwK,EAAO9J,EAAWV,GAClByK,EAAQ/J,EAAWV,GACnB0K,EAAUhK,EAAWV,GACrB2K,EAASjK,EAAWV,GACpB4K,EAActK,EAAWN,GACzB6K,EAAkB9K,EAAUC,GAE5B8K,EAAQhK,EAAUd,EADL,EAAS,IAG5B,GAAmB,IAAfuK,GAAoC,IAAhBK,EAAmB,MAAM,IAAI9O,MAAM,gDAE3D,IAAMiP,EAAIJ,EAASF,EACbZ,EAAIa,EAAUF,EACdQ,EAAKP,EAAQtI,EACb8I,EAAKT,EAAOtI,EAElB,GAAwB,IAApB2I,EAuBG,MAAwB,IAApBA,EAOJ,IAAI/O,MAAM,wCAEV,IAAIA,MAAM,oCA/BhB,GAAkB,IAAd8J,GAA+B0E,EAAK,EACvC,IAAK,IAAI,EAAI,EAAG,EAAIT,EAAG,IACtB,IAAK,IAAI,EAAI,EAAG,EAAIkB,EAAG,IAAK,CAC3B,IAAMzL,EAAM,EAAI,EAAIyL,EAEpBvO,GADM0O,EAAoC,GAA7BF,EAAK,GAAK,EAAIC,GAAMvO,IACtB4N,GAAMQ,EAAMxL,GAK1B,GAAkB,IAAdsG,GAAqC0E,EAAK,EAC7C,IAAK,IAAI,EAAI,EAAG,EAAIT,EAAG,IACtB,IAAK,IAAI,EAAI,EAAG,EAAIkB,EAAG,IAAK,CAC3B,IACMG,EAAoC,GAA7BF,EAAK,GAAK,EAAIC,GAAMvO,GAC3Bd,EAAQkP,EAFRxL,EAAM,EAAI,EAAIyL,GAGpBvO,EAAK0O,EAAM,GAAKtP,EAChBY,EAAK0O,EAAM,GAAKtP,EAChBY,EAAK0O,EAAM,GAAKtP,EAgBpB0O,KAMF,MAAO,CAAE3H,GAAE,EAAE4B,KAAI,EAAEnH,EAAC,EAAEF,EAAC,EAAEiO,OAAQ,CAAE/N,EAAG+E,EAAMjF,EAAGgF,EAAK6I,EAAGrO,EAAOmN,EAAGlN,GAAUH,KAAI,K,gCCz3BhF4O,EAAQf,WAuCR,SAAqBgB,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,GA1ClDL,EAAQM,YAiDR,SAAsBL,GACpB,IAAIM,EAcA/O,EAbA0O,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBM,EAAM,IAAIC,EAVhB,SAAsBR,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,EAS9BK,CAAYT,EAAKG,EAAUC,IAEzCM,EAAU,EAGVC,EAAMP,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAK5O,EAAI,EAAGA,EAAIoP,EAAKpP,GAAK,EACxB+O,EACGM,EAAUZ,EAAIa,WAAWtP,KAAO,GAChCqP,EAAUZ,EAAIa,WAAWtP,EAAI,KAAO,GACpCqP,EAAUZ,EAAIa,WAAWtP,EAAI,KAAO,EACrCqP,EAAUZ,EAAIa,WAAWtP,EAAI,IAC/BgP,EAAIG,KAAcJ,GAAO,GAAM,IAC/BC,EAAIG,KAAcJ,GAAO,EAAK,IAC9BC,EAAIG,KAAmB,IAANJ,EAGK,IAApBF,IACFE,EACGM,EAAUZ,EAAIa,WAAWtP,KAAO,EAChCqP,EAAUZ,EAAIa,WAAWtP,EAAI,KAAO,EACvCgP,EAAIG,KAAmB,IAANJ,GAGK,IAApBF,IACFE,EACGM,EAAUZ,EAAIa,WAAWtP,KAAO,GAChCqP,EAAUZ,EAAIa,WAAWtP,EAAI,KAAO,EACpCqP,EAAUZ,EAAIa,WAAWtP,EAAI,KAAO,EACvCgP,EAAIG,KAAcJ,GAAO,EAAK,IAC9BC,EAAIG,KAAmB,IAANJ,GAGnB,OAAOC,GA3FTR,EAAQ7L,cAkHR,SAAwB4M,GAQtB,IAPA,IAAIR,EACAK,EAAMG,EAAMzO,OACZ0O,EAAaJ,EAAM,EACnBK,EAAQ,GACRC,EAAiB,MAGZ1P,EAAI,EAAG2P,EAAOP,EAAMI,EAAYxP,EAAI2P,EAAM3P,GAAK0P,EACtDD,EAAM3J,KAAK8J,EAAYL,EAAOvP,EAAIA,EAAI0P,EAAkBC,EAAOA,EAAQ3P,EAAI0P,IAI1D,IAAfF,GACFT,EAAMQ,EAAMH,EAAM,GAClBK,EAAM3J,KACJ+J,EAAOd,GAAO,GACdc,EAAQd,GAAO,EAAK,IACpB,OAEsB,IAAfS,IACTT,GAAOQ,EAAMH,EAAM,IAAM,GAAKG,EAAMH,EAAM,GAC1CK,EAAM3J,KACJ+J,EAAOd,GAAO,IACdc,EAAQd,GAAO,EAAK,IACpBc,EAAQd,GAAO,EAAK,IACpB,MAIJ,OAAOU,EAAMK,KAAK,KAzIpB,IALA,IAAID,EAAS,GACTR,EAAY,GACZJ,EAA4B,qBAAfpO,WAA6BA,WAAakP,MAEvDC,EAAO,mEACFhQ,EAAI,EAAGoP,EAAMY,EAAKlP,OAAQd,EAAIoP,IAAOpP,EAC5C6P,EAAO7P,GAAKgQ,EAAKhQ,GACjBqP,EAAUW,EAAKV,WAAWtP,IAAMA,EAQlC,SAAS2O,EAASF,GAChB,IAAIW,EAAMX,EAAI3N,OAEd,GAAIsO,EAAM,EAAI,EACZ,MAAM,IAAIlQ,MAAM,kDAKlB,IAAI0P,EAAWH,EAAInF,QAAQ,KAO3B,OANkB,IAAdsF,IAAiBA,EAAWQ,GAMzB,CAACR,EAJcA,IAAaQ,EAC/B,EACA,EAAKR,EAAW,GAsEtB,SAASgB,EAAaL,EAAO/G,EAAOgC,GAGlC,IAFA,IAAIuE,EARoBkB,EASpB5P,EAAS,GACJL,EAAIwI,EAAOxI,EAAIwK,EAAKxK,GAAK,EAChC+O,GACIQ,EAAMvP,IAAM,GAAM,WAClBuP,EAAMvP,EAAI,IAAM,EAAK,QACP,IAAfuP,EAAMvP,EAAI,IACbK,EAAOyF,KAdF+J,GADiBI,EAeMlB,IAdT,GAAK,IACxBc,EAAOI,GAAO,GAAK,IACnBJ,EAAOI,GAAO,EAAI,IAClBJ,EAAa,GAANI,IAaT,OAAO5P,EAAOyP,KAAK,IAjGrBT,EAAU,IAAIC,WAAW,IAAM,GAC/BD,EAAU,IAAIC,WAAW,IAAM,I,iqBClB/B,YAKA,QACA,QAuBA,SAAgBY,EAAWC,EAAmBnR,GAC7C,IAAM2B,EAASyP,EAAQD,EAAQ,GAC/BA,EAAO9M,KAAKgN,SAAS1P,EAAQ3B,GAG9B,SAAgBsR,EAAWH,EAAmBnR,GAC7C,IAAM2B,EAASyP,EAAQD,EAAQ,GAC/BA,EAAO9M,KAAKkN,SAAS5P,EAAQ3B,GAAO,GAGrC,SAAgBwR,EAAYL,EAAmBnR,GAC9C,IAAM2B,EAASyP,EAAQD,EAAQ,GAC/BA,EAAO9M,KAAKoN,UAAU9P,EAAQ3B,GAAO,GAGtC,SAAgB0R,EAAWP,EAAmBnR,GAC7C,IAAM2B,EAASyP,EAAQD,EAAQ,GAC/BA,EAAO9M,KAAKsN,SAAShQ,EAAQ3B,GAAO,GAGrC,SAAgB4R,EAAYT,EAAmBnR,GAC9C,IAAM2B,EAASyP,EAAQD,EAAQ,GAC/BA,EAAO9M,KAAKwN,UAAUlQ,EAAQ3B,GAAO,GAQtC,SAAgB8R,EAAaX,EAAmBnR,GAC/C,IAAM2B,EAASyP,EAAQD,EAAQ,GAC/BA,EAAO9M,KAAK0N,WAAWpQ,EAAQ3B,GAAO,GAavC,SAAgBgS,EAAWb,EAAmBlQ,GACzCA,IACHgR,EAAWd,EAAQA,EAAOxP,OAASV,EAAOa,QAC5B,IAAID,WAAWsP,EAAOlQ,QAC9BiR,IAAIjR,EAAQkQ,EAAOxP,QACzBwP,EAAOxP,QAAUV,EAAOa,QAI1B,SAAgBqQ,EAAWhB,EAAmBxO,GAC7C,IAAK,IAAI3B,EAAI,EAAGA,EAAI2B,EAAO3B,IAC1BkQ,EAAWC,EAAQ,GAIrB,SAAgBiB,EAAejB,EAAmBnL,GACjD,GAAyB,IAArBA,EAAUlE,OAAc,MAAM,IAAI5B,MAAM,uBAAuB8F,EAAS,KAE5E,IAAK,IAAIhF,EAAI,EAAGA,EAAI,EAAGA,IACtBkQ,EAAWC,EAAQnL,EAAUsK,WAAWtP,IAI1C,SAAgBqR,EAAkBlB,EAAmB3L,EAAcD,GAClE,IAAIzD,EAAS0D,EAAK1D,OAClBoP,EAAWC,EAAQrP,GAEnB,IAAK,IAAId,EAAI,EAAGA,EAAIc,EAAQd,IAAK,CAChC,IAAMgQ,EAAOxL,EAAK8K,WAAWtP,GAC7BkQ,EAAWC,EAAQH,EAAO,IAAMA,EAAO,IAAIV,WAAW,IAGvD,OAASxO,EAASyD,GACjB2L,EAAWC,EAAQ,GAsBrB,SAASmB,EAAoBlG,QAAA,IAAAA,MAAA,IAG5B,IAFA,IAAIzL,EAAM,EAEU,MAAAyL,EAAA,eAAQ,CAAvB,IAAM/F,EAAK,KACf,GAAIA,EAAM/C,QAAU+C,EAAMyC,UAAW,CAC9B,MAAoByJ,EAAmBlM,GAArCvF,EAAK,QAAEC,EAAM,SACrBJ,EAAMgN,KAAKhN,IAAIA,EAAK,EAAII,EAAS,EAAID,EAAQC,GAG1CsF,EAAMkG,WACT5L,EAAMgN,KAAKhN,IAAIA,EAAK2R,EAAoBjM,EAAMkG,YAIhD,OAAO5L,EAGR,SAAgB6R,EAAarB,EAAmB/F,EAAeC,EAAkBoH,EAA0BzQ,QAA1B,IAAAyQ,OAAA,QAA0B,IAAAzQ,OAAA,GACtGA,GAAO4P,EAAYT,EAAQ,GAE/B,IAAMxP,EAASwP,EAAOxP,OACtBiQ,EAAYT,EAAQ,GAEpB9F,IAKA,IAHA,IAAIvJ,EAASqP,EAAOxP,OAASA,EAAS,EAClCyO,EAAMtO,EAEFsO,EAAMhF,IAAW,GACxB8F,EAAWC,EAAQ,GACnBf,IAGGqC,IACH3Q,EAASsO,GAGVe,EAAO9M,KAAKwN,UAAUlQ,EAAQG,GAAQ,GA2NvC,SAAS4Q,EAAyBvB,EAAmBhH,EAA6BhE,EAAUC,GAC3F,I,eAAWmE,GACV,IAAInL,EAAMmL,EAAQnL,IAElB,GAAY,SAARA,GAAkBgH,EAAQuM,qB,MAA+B,WAG7D,GAFY,SAARvT,GAAkBgH,EAAQwM,MAAKxT,EAAM,QAErCmL,EAAQsI,IAAI1I,GAAS,CACxB,IAAMnI,EAAQoE,EAAQwM,MAAiD,IAA1C,EAAAlT,wBAAwB4K,QAAQlL,GAE7DgT,EAAejB,EAAQnP,EAAQ,OAAS,QACxCoQ,EAAejB,EAAQ/R,GAMvBoT,EAAarB,EAJa,SAAR/R,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,GACjF,SAARA,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,GAClF,SAARA,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,EAExC,EAAI,GAAG,WACvCmL,EAAQuI,MAAM3B,EAAQhH,EAAQhE,EAAKC,KACzB,SAARhH,GAA0B,SAARA,GAA0B,SAARA,EAAgB4C,KAlBnC,QAAA+Q,aAAA,eAAY,C,EAAhB,OAuBnB,SAASC,EAAY5G,EAAiBG,GACrC,GAAKA,EAEL,IAAgB,UAAAA,EAAA,eAAU,CAArB,IAAMtB,EAAC,KACX,GAAIA,EAAEsB,UAAYtB,EAAE3H,OAAQ,MAAM,IAAIpD,MAAM,sEAC5C,GAAI+K,EAAEsB,UAAYtB,EAAEnC,UAAW,MAAM,IAAI5I,MAAM,yEAE3C+K,EAAEsB,UACLH,EAAOtF,KAAK,CACX6B,KAAM,iBACNgE,eAAgB,CACfD,KAAM,KAURsG,EAAY5G,EAAQnB,EAAEsB,UACtBH,EAAOtF,KAAI,GACV6F,eAAgB,CACfD,MAAmB,IAAbzB,EAAE2B,OAAkB,EAAkC,EAC5DxN,IAAK,EAAAG,cAAc0L,EAAEjE,YAAe,OACpCiM,QAAS,IAEPhI,KAGJmB,EAAOtF,KAAI,KAAMmE,KAoBpB,SAASgH,EAAWd,EAAmBtQ,GAClCA,EAAOsQ,EAAOlQ,OAAOwN,YAhB1B,SAAsB0C,EAAmBtQ,GACxC,IAAIqS,EAAY/B,EAAOlQ,OAAOwN,WAE9B,GACCyE,GAAa,QACLrS,EAAOqS,GAEhB,IAAMC,EAAY,IAAIC,YAAYF,GAC5BG,EAAW,IAAIxR,WAAWsR,GAC1BG,EAAW,IAAIzR,WAAWsP,EAAOlQ,QACvCoS,EAASnB,IAAIoB,GACbnC,EAAOlQ,OAASkS,EAChBhC,EAAO9M,KAAO,IAAIoH,SAAS0F,EAAOlQ,QAKjCsS,CAAapC,EAAQtQ,GAIvB,SAASuQ,EAAQD,EAAmBtQ,GACnC,IAAMc,EAASwP,EAAOxP,OAEtB,OADAsQ,EAAWd,EAAQA,EAAOxP,QAAUd,GAC7Bc,EAGR,SAAS6R,EAAgBrN,GACxB,IAAM7C,EAAS,EAAAP,aAAa,GAAI,IAC5B0Q,EAAQ,EAERtN,EAAIrF,MAAQqF,EAAIpF,QACnBuC,EAAOxC,MAAQ,IACfwC,EAAOvC,OAAS4M,KAAK+F,MAAMvN,EAAIpF,QAAUuC,EAAOxC,MAAQqF,EAAIrF,QAC5D2S,EAAQnQ,EAAOxC,MAAQqF,EAAIrF,QAE3BwC,EAAOvC,OAAS,IAChBuC,EAAOxC,MAAQ6M,KAAK+F,MAAMvN,EAAIrF,OAASwC,EAAOvC,OAASoF,EAAIpF,SAC3D0S,EAAQnQ,EAAOvC,OAASoF,EAAIpF,QAG7B,IAAM4S,EAAUrQ,EAAOF,WAAW,MAGlC,GAFAuQ,EAAQF,MAAMA,EAAOA,GAEjBtN,EAAI2C,UAAW,CAClB,IAAM8K,EAAO,EAAA7Q,aAAaoD,EAAI2C,UAAUhI,MAAOqF,EAAI2C,UAAU/H,QAC7D6S,EAAKxQ,WAAW,MAAOwG,aAAazD,EAAI2C,UAAW,EAAG,GACtD6K,EAAQ/P,UAAUgQ,EAAM,EAAG,QACjBzN,EAAI7C,QACdqQ,EAAQ/P,UAAUuC,EAAI7C,OAAQ,EAAG,GAGlC,OAAOA,EAkDR,SAASiP,EAAmB,G,IAAEjP,EAAM,SACnC,OAD8C,aAC1BA,GAAU,CAAExC,MAAO,EAAGC,OAAQ,GAmGnD,SAAS8S,EAAW,EAA4BvS,EAAWiF,EAAcE,GAIxE,I,IAJqB7F,EAAI,OACnB4I,EAA8B,GAApBlI,EADgB,QACJiF,GAAY,EAAK,EACvCiF,EAAOhC,EAAyB,GAAhB/C,EAAQF,GAAa,EAElCvF,EAAIwI,EAAOxI,EAAIwK,EAAKxK,EAAKA,EAAI,EAAK,EAC1C,GAAgB,IAAZJ,EAAKI,GACR,OAAO,EAIT,OAAO,EAGR,SAAS8S,EAAW,EAA4BtS,EAAW8E,EAAaE,GAIvE,I,IAJqB5F,EAAI,OACnBqB,EAAkB,EADQ,QACH,EAGpBX,EAAIgF,EAAKtF,EAFHsF,EAAMrE,EAAa,EAAJT,EAAQ,EAAK,EAEdF,EAAIkF,EAAQlF,IAAKN,EAAKA,EAAIiB,EAAU,EAChE,GAAgB,IAAZrB,EAAKI,GACR,OAAO,EAIT,OAAO,EAhpBR,wBAA6BH,QAAA,IAAAA,MAAA,MAC5B,IAAMI,EAAS,IAAImS,YAAYvS,GAG/B,MAAO,CAAEI,OAAM,EAAEoD,KAFJ,IAAIoH,SAASxK,GAEHU,OADR,IAIhB,2BAAgCwP,GAC/B,OAAOA,EAAOlQ,OAAO6B,MAAM,EAAGqO,EAAOxP,SAGtC,iCAAsCwP,GACrC,OAAO,IAAItP,WAAWsP,EAAOlQ,OAAQ,EAAGkQ,EAAOxP,SAGhD,eAKA,eAKA,gBAKA,eAKA,gBAKA,wBAA6BwP,EAAmBnR,GAC/C,IAAM2B,EAASyP,EAAQD,EAAQ,GAC/BA,EAAO9M,KAAK0P,WAAWpS,EAAQ3B,GAAO,IAGvC,iBAMA,6BAAkCmR,EAAmBnR,GACpD0R,EAAWP,EAAgB,MAARnR,IAIpB,iCAAsCmR,EAAmBnR,GACxD0R,EAAWP,EAAQnR,GAAS,GAAK,MAGlC,eASA,eAMA,mBAQA,sBAcA,8BAAmCmR,EAAmB3L,GACrDoM,EAAYT,EAAQ3L,EAAK1D,QAEzB,IAAK,IAAId,EAAI,EAAGA,EAAIwE,EAAK1D,OAAQd,IAChCwQ,EAAYL,EAAQ3L,EAAK8K,WAAWtP,KAItC,yCAA8CmQ,EAAmB3L,GAChEoM,EAAYT,EAAQ3L,EAAK1D,OAAS,GAElC,IAAK,IAAId,EAAI,EAAGA,EAAIwE,EAAK1D,OAAQd,IAChCwQ,EAAYL,EAAQ3L,EAAK8K,WAAWtP,IAGrCwQ,EAAYL,EAAQ,IAoBrB,iBAuBA,oBAAyBA,EAAmBhL,EAAUC,GACrD,QADqD,IAAAA,MAAA,OAC9CD,EAAIrF,MAAQ,IAAMqF,EAAIpF,OAAS,GACrC,MAAM,IAAIb,MAAM,yBAEjB,IAAKiG,EAAIrF,MAAQ,KAASqF,EAAIpF,OAAS,OAAWqF,EAAQwM,IACzD,MAAM,IAAI1S,MAAM,2EAEjB,IAAI+L,EAAiB9F,EAAI8F,gBAAkB,GAErCJ,EAAG,OAA8BzF,GAAO,CAAE4N,SAAU,KAEtDnI,EAAIoI,oBACPhI,EAAiB,EAAH,KAAQA,GAAc,CAAEiI,UAAWV,EAAgBrN,MAGlE,IAAI2C,EAAY3C,EAAI2C,UAMpB,IAJKA,GAAa3C,EAAI7C,SACrBwF,EAAY3C,EAAI7C,OAAOF,WAAW,MAAO+Q,aAAa,EAAG,EAAGhO,EAAI7C,OAAOxC,MAAOqF,EAAI7C,OAAOvC,SAGtF+H,IAAc3C,EAAIrF,QAAUgI,EAAUhI,OAASqF,EAAIpF,SAAW+H,EAAU/H,QAC3E,MAAM,IAAIb,MAAM,uDAEjB,IAAMgM,IAAgBpD,GAAa,EAAAsL,SAAStL,GACtCuL,EAAgB1G,KAAKhN,IAAI2R,EAAoBnM,EAAIoG,UAAW,EAAQpG,EAAIrF,MAAQqF,EAAIpF,OAAS,EAAIoF,EAAIpF,QACrGuT,EAAa,IAAIzS,WAAWwS,GAGlCjC,EAAejB,EAAQ,QACvBK,EAAYL,EAAQ/K,EAAQwM,IAAM,EAAI,GACtCT,EAAWhB,EAAQ,GACnBK,EAAYL,EAAQjF,EAAc,EAAI,GACtC0F,EAAYT,EAAQhL,EAAIpF,QACxB6Q,EAAYT,EAAQhL,EAAIrF,OACxB0Q,EAAYL,EAAQ,GACpBK,EAAYL,EAAM,GAGlBqB,EAAarB,EAAQ,GAAG,eAKxBqB,EAAarB,EAAQ,GAAG,WACvB,I,eAAW5G,GACNA,EAAQsI,IAAI5G,KACfmG,EAAejB,EAAQ,QACvBK,EAAYL,EAAQ5G,EAAQnL,KAC5BiT,EAAkBlB,EAAQ,GAAI,GAC9BqB,EAAarB,EAAQ,GAAG,WAAM,OAAA5G,EAAQuI,MAAM3B,EAAd,QALV,QAAAoD,iBAAA,eAAgB,C,EAApB,UAWnB/B,EAAarB,EAAQ,GAAG,YAwBzB,SAAwBmD,EAAwBnD,EAAmBhL,EAAU+F,EAAsB9F,GAClGoM,EAAarB,EAAQ,GAAG,W,MACjB/E,EAAkB,GAExB4G,EAAY5G,EAAQjG,EAAIoG,UAEnBH,EAAOtK,QAAQsK,EAAOtF,KAAK,IAEhCwK,EAAWH,EAAQjF,GAAeE,EAAOtK,OAASsK,EAAOtK,QAKzD,IAHA,IAAM0S,EAAapI,EAAOrN,KAAI,SAAC0N,EAAGzL,GAAM,OAiP1C,SACCsT,EAAwBjO,EAAcoO,EAAqBrO,GAE3D,IAAMsO,EAmEP,SACCJ,EAAwBjO,EAAcoO,EAAqBrO,G,MAErD,EAA6CC,EAAtC,IAAPC,OAAG,IAAG,IAAC,EAAE,EAAoCD,EAA5B,KAARE,OAAI,IAAG,IAAC,EAAE,EAA0BF,EAAjB,MAATI,OAAK,IAAG,IAAC,EAAE,EAAeJ,EAAL,OAAVG,OAAM,IAAG,IAAC,EAC1CG,EAA0B,CAC7B,CAAElG,WAAS,EAA0B2I,YAAa,EAAqBnI,YAAQiC,EAAWpB,OAAQ,GAClG,CAAErB,UAAW,EAAe2I,YAAa,EAAqBnI,YAAQiC,EAAWpB,OAAQ,GACzF,CAAErB,UAAW,EAAiB2I,YAAa,EAAqBnI,YAAQiC,EAAWpB,OAAQ,GAC3F,CAAErB,UAAW,EAAgB2I,YAAa,EAAqBnI,YAAQiC,EAAWpB,OAAQ,IAGvF,EAAoByQ,EAAmBlM,GAArCvF,EAAK,QAAEC,EAAM,SAEnB,IAAMsF,EAAM/C,SAAU+C,EAAMyC,YAAehI,IAAUC,EAGpD,MAAO,CAAEsF,MAAK,EAAEC,IAAG,EAAEC,KAAI,EAAEE,MAF3BA,EAAQF,EAE0BC,OADlCA,EAASF,EACiCK,SAAQ,GAGnDF,EAAQF,EAAOzF,EACf0F,EAASF,EAAMvF,EAEf,IAAIH,EAAOyF,EAAMyC,WAAazC,EAAM/C,OAAQF,WAAW,MAAO+Q,aAAa,EAAG,EAAGrT,EAAOC,GAExF,GAAIqF,EAAQuO,cAAe,CAC1B,IAAMC,EA8ER,SAAkBhU,GACjB,IAAI0F,EAAM,EACNC,EAAO,EACPE,EAAQ7F,EAAKE,MACb0F,EAAS5F,EAAKG,OAElB,KAAOuF,EAAME,GAAUqN,EAAWjT,EAAM0F,EAAKC,EAAME,IAClDH,IACD,KAAOE,EAASF,GAAOuN,EAAWjT,EAAM4F,EAAS,EAAGD,EAAME,IACzDD,IACD,KAAOD,EAAOE,GAASqN,EAAWlT,EAAM2F,EAAMD,EAAKE,IAClDD,IACD,KAAOE,EAAQF,GAAQuN,EAAWlT,EAAM6F,EAAQ,EAAGH,EAAKE,IACvDC,IAED,MAAO,CAAEH,IAAG,EAAEC,KAAI,EAAEE,MAAK,EAAED,OAAM,GA7FhBqO,CAASjU,GAEzB,GAAqB,IAAjBgU,EAAQrO,MAA8B,IAAhBqO,EAAQtO,KAAasO,EAAQnO,QAAU7F,EAAKE,OAAS8T,EAAQpO,SAAW5F,EAAKG,OAAQ,CAQ9G,GAPAwF,GAAQqO,EAAQrO,KAChBD,GAAOsO,EAAQtO,IACfG,GAAU7F,EAAKE,MAAQ8T,EAAQnO,MAC/BD,GAAW5F,EAAKG,OAAS6T,EAAQpO,OAEjCzF,EAASyF,EAASF,IADlBxF,EAAQ2F,EAAQF,KAGDxF,EACd,MAAO,CAAEsF,MAAK,EAAEC,IAAG,EAAEC,KAAI,EAAEE,MAAK,EAAED,OAAM,EAAEG,SAAQ,GAIlD/F,EADGyF,EAAMyC,UA1Db,SAAuBlI,EAAiB2F,EAAcD,EAAaxF,EAAeC,GAKjF,IAJA,IAAM+T,EAAc,EAAA3R,gBAAgBrC,EAAOC,GACrCgU,EAAUnU,EAAKA,KACfoU,EAAUF,EAAYlU,KAEnBU,EAAI,EAAGA,EAAIP,EAAQO,IAC3B,IAAK,IAAIE,EAAI,EAAGA,EAAIV,EAAOU,IAAK,CAC/B,IAAIkC,EAAyC,GAAjClC,EAAI+E,GAASjF,EAAIgF,GAAOxF,GAChCwO,EAAwB,GAAjB9N,EAAIF,EAAIR,GACnBkU,EAAQ1F,GAAOyF,EAAQrR,GACvBsR,EAAQ1F,EAAM,GAAKyF,EAAQrR,EAAM,GACjCsR,EAAQ1F,EAAM,GAAKyF,EAAQrR,EAAM,GACjCsR,EAAQ1F,EAAM,GAAKyF,EAAQrR,EAAM,GAInC,OAAOoR,EA2CGG,CAAcrU,EAAMgU,EAAQrO,KAAMqO,EAAQtO,IAAKxF,EAAOC,GAEtDsF,EAAM/C,OAAQF,WAAW,MAAO+Q,aAAaS,EAAQrO,KAAMqO,EAAQtO,IAAKxF,EAAOC,IAKzF,IAAMmU,EAAa,C,SAMdT,GAAcrO,EAAQ+O,cAAgB9O,EAAMkB,MAAQ,EAAA6M,SAASxT,IAAU,EAAAtB,iBAA6C,QAA1B,EAAA+G,EAAc6C,oBAAY,gBAAG,MAC3HgM,EAAWrI,SAAO,GAoBnB,OAjBAlG,EAAWuO,EAAWnW,KAAI,SAAAoK,GACzB,IAAMxH,EAAS,EAAAkI,iBAAiBV,GAC5BlI,EAAS,EAAAmU,aAAad,EAAY1T,EAAME,EAAOC,EAAQ,CAACY,KAAWyE,EAAQwM,KAO/E,OALI,EAAAtT,gBAAmB+G,EAAc6C,eAEpCjI,EAAUoF,EAAc6C,aAAaC,IAG/B,CACN1I,UAAW0I,EACXC,YAAa,EACbnI,OAAQA,EACRa,OAAQ,EAAIb,EAAOa,WAId,CAAEuE,MAAK,EAAEC,IAAG,EAAEC,KAAI,EAAEE,MAAK,EAAED,OAAM,EAAEG,SAAQ,GA7IhC0O,CAAiBf,EAAYjO,EAAOoO,EAAYrO,GAC5DmB,EAAOlB,EAAMkB,KAEnB,GAAIA,EAAM,CACH,MAA6CA,EAAtC,IAAP,OAAG,IAAG,IAAC,EAAE,EAAoCA,EAA5B,KAARhB,OAAI,IAAG,IAAC,EAAE,EAA0BgB,EAAjB,MAATd,OAAK,IAAG,IAAC,EAAE,EAAec,EAAL,OAAVf,OAAM,IAAG,IAAC,EAC1C,EAAoB+L,EAAmBhL,GAArCzG,EAAK,QAAEC,EAAM,SACf+H,EAAYvB,EAAKuB,UAMrB,IAJKA,GAAavB,EAAKjE,QAAUxC,GAASC,IACzC+H,EAAYvB,EAAKjE,OAAOF,WAAW,MAAO+Q,aAAa,EAAG,EAAGrT,EAAOC,IAGjED,GAASC,GAAU+H,EAAW,CACjCrC,EAAQF,EAAOzF,EACf0F,EAAS,EAAMzF,EAEf,IAAIE,EAAS,EAAAmU,aAAad,EAAYxL,EAAWhI,EAAOC,EAAQ,CAAC,KAAMqF,EAAQwM,KAE3E,EAAAtT,gBAAmB+G,EAAcqD,cAEpCzI,EAAUoF,EAAcqD,aAGzBgL,EAAUnN,KAAO,CAAEjB,IAAG,EAAEC,KAAI,EAAEE,MAAK,EAAED,OAAM,GAC3CkO,EAAU/N,SAASG,KAAK,CACvBrG,WAAS,EACT2I,YAAa,EACbnI,OAAQA,EACRa,OAAQ,EAAIb,EAAOa,cAGpB4S,EAAUnN,KAAO,CAAEjB,IAAK,EAAGC,KAAM,EAAGE,MAAO,EAAGD,OAAQ,GACtDkO,EAAU/N,SAASG,KAAK,CACvBrG,WAAS,EACT2I,YAAa,EACbnI,OAAQ,IAAIY,WAAW,GACvBC,OAAQ,IAKX,OAAO4S,EA7RkCY,CAAYhB,EAAY7H,EAAS,IAANzL,EAA3B,M,WAG7B0T,GACF,IAAArO,EAA8CqO,EAAzC,MAAE,EAAuCA,EAApC,IAAEnO,EAAkCmO,EAA9B,KAAElO,EAA4BkO,EAAtB,OAAEjO,EAAoBiO,EAAf,MAAE/N,EAAa+N,EAAL,SAEjDhD,EAAWP,EAAQ,GACnBO,EAAWP,EAAQ5K,GACnBmL,EAAWP,EAAQ3K,GACnBkL,EAAWP,EAAQ1K,GACnB+K,EAAYL,EAAQxK,EAAS7E,QAE7B,IAAgB,UAAA6E,EAAA,eAAU,CAArB,IAAMsE,EAAC,KACXqG,EAAWH,EAAQlG,EAAExK,WACjB2F,EAAQwM,KAAKhB,EAAYT,EAAQ,GACrCS,EAAYT,EAAQlG,EAAEnJ,QAGvBsQ,EAAejB,EAAQ,QACvBiB,EAAejB,EAAQ,EAAA5R,cAAc8G,EAAMW,YAAe,QAC1DkK,EAAWC,EAAQxD,KAAKvC,MAAwC,IAAlC,EAAAmK,MAAmB,QAAb,EAAAlP,EAAMY,eAAO,QAAI,EAAG,EAAG,KAC3DiK,EAAWC,EAAQ9K,EAAMa,SAAW,EAAI,GAExC,IAAIC,EAAQ,EACRd,EAAMe,wBAAuBD,GAAS,GACtCd,EAAMgB,SAAQF,GAAS,IACvBd,EAAMmP,YAAenP,EAAMsG,gBAA2C,IAAzBtG,EAAMsG,eAAeD,QACrEvF,GAAS,IAENd,EAAMoP,SAAW,EAAAC,gBAAgBrP,EAAMoP,WAC1CtO,GAAS,IAGV+J,EAAWC,EAAQhK,GACnB+J,EAAWC,EAAQ,GACnBqB,EAAarB,EAAQ,GAAG,YAqB3B,SAA4BA,EAAmB,EAAiBuD,G,IAAfnN,EAAI,OACpDiL,EAAarB,EAAQ,GAAG,WACvB,GAAK5J,EAAL,CAEA,IAAM4G,EAAIuG,EAAUnN,MAAQ,GAC5BmK,EAAWP,EAAQhD,EAAE7H,KACrBoL,EAAWP,EAAQhD,EAAE5H,MACrBmL,EAAWP,EAAQhD,EAAE3H,QACrBkL,EAAWP,EAAQhD,EAAE1H,OACrByK,EAAWC,EAAQ5J,EAAKC,cAExB,IAAII,EAAS,OACgB1E,IAAzBqE,EAAKM,kBAA+BD,GAAU,QACrB1E,IAAzBqE,EAAKO,kBAA+BF,GAAU,QACnB1E,IAA3BqE,EAAKQ,oBAAiCH,GAAU,QACrB1E,IAA3BqE,EAAKS,oBAAiCJ,GAAU,GAEpD,IAAIT,EAAQ,EACRI,EAAKG,WAAUP,GAAS,GACxBI,EAAKE,0BAAyBN,GAAS,GACvCI,EAAKI,iBAAgBR,GAAS,GAC9BS,IAAQT,GAAS,IAErB+J,EAAWC,EAAQhK,GAEfS,IACHsJ,EAAWC,EAAQvJ,QAEU1E,IAAzBqE,EAAKM,iBAA+BqJ,EAAWC,EAAQxD,KAAKvC,MAA6B,IAAvB7D,EAAKM,uBAC9C3E,IAAzBqE,EAAKO,iBAA+BgK,EAAaX,EAAQ5J,EAAKO,sBACnC5E,IAA3BqE,EAAKQ,mBAAiCmJ,EAAWC,EAAQxD,KAAKvC,MAA+B,IAAzB7D,EAAKQ,yBAC9C7E,IAA3BqE,EAAKS,mBAAiC8J,EAAaX,EAAQ5J,EAAKS,oBAKrEmK,EAAWhB,EAAQ,OAxDjBwE,CAAmBxE,EAAQ9K,EAAOqO,GA4DtC,SAAkCvD,EAAmBhL,GACpDqM,EAAarB,EAAQ,GAAG,WACvBS,EAAYT,EAAQ,OACpBS,EAAYT,EAAQ,OAKpB,IAHA,IAAIxK,EAAWR,EAAIQ,UAAY,EAGtB3F,EAAI,EAAGA,EAAI2F,EAAU3F,IAC7B4Q,EAAYT,EAAQ,OACpBS,EAAYT,EAAQ,UArEnByE,CAAyBzE,EAAQhL,GACjCkM,EAAkBlB,EAAQ9K,EAAMsC,MAAQ,GAAI,GAC5C+J,EAAyBvB,EAAQ9K,EAAOF,EAAKC,OApCvB,MAAAoO,EAAA,eAAU,C,EAAd,MAyCpB,IAAwB,UAAAA,EAAA,eACvB,IADI,IACkB,MADH,KACa7N,SAAV,eAAoB,CAArC,IAAMwC,EAAO,KACjBqI,EAAYL,EAAQhI,EAAQC,aAExBD,EAAQlI,QACX+Q,EAAWb,EAAQhI,EAAQlI,YAI5B,EAAMmF,EAAQwM,KAtFhBiD,CAAevB,EAAYnD,EAAQhL,EAAK+F,EAAaL,GAgJvD,SAAkCsF,EAAmB2E,GACpDtD,EAAarB,EAAQ,GAAG,WACnB2E,IACHtE,EAAYL,EAAQ2E,EAAK7I,mBACzBuE,EAAYL,EAAQ2E,EAAK5I,aACzBsE,EAAYL,EAAQ2E,EAAK3I,aACzBqE,EAAYL,EAAQ2E,EAAK1I,aACzBoE,EAAYL,EAAQ2E,EAAKzI,aACzBmE,EAAYL,EAAuB,IAAf2E,EAAK7O,SACzBiK,EAAWC,EAAQ2E,EAAKxI,MACxB6E,EAAWhB,EAAQ,OAzJpB4E,CAAyB5E,EAAQhL,EAAI6G,qBACrC0F,EAAyBvB,EAAQhL,EAAKA,EAAK0F,UACzC3I,IAAa2I,EAAI+G,KAGpB,IAAMjM,EAAWuF,EAAc,CAAC,EAAG,EAAG,EAAG,GAAK,CAAC,EAAG,EAAG,GAC/CtL,EAAkBkI,GAAa,CACpClI,KAAM,IAAIiB,WAAW,EAAIsE,EAAIrF,MAAQqF,EAAIpF,QACzCD,MAAOqF,EAAIrF,MACXC,OAAQoF,EAAIpF,QAGbyQ,EAAYL,EAAM,GAEd,EAAA7R,gBAAmB6G,EAAY+C,cAClChB,QAAQC,IAAI,0BACZ6J,EAAWb,EAAShL,EAAY+C,eAEhC8I,EAAWb,EAAQ,EAAAiE,aAAad,EAAY1T,EAAMuF,EAAIrF,MAAOqF,EAAIpF,OAAQ4F,IAAYP,EAAQwM,OA8b/F,sBAA2BzB,EAAmB6E,GACxCA,EAGM,MAAOA,GACjBxE,EAAYL,EAAM,GAClBK,EAAYL,EAAQxD,KAAKvC,MAAgB,IAAV4K,EAAMjI,IACrCyD,EAAYL,EAAQxD,KAAKvC,MAAgB,IAAV4K,EAAMhI,IACrCwD,EAAYL,EAAQxD,KAAKvC,MAAgB,IAAV4K,EAAMvU,IACrC+P,EAAYL,EAAQ,IACV,MAAO6E,GACjBxE,EAAYL,EAAM,GAClBG,EAAWH,EAAQxD,KAAKvC,MAAgB,IAAV4K,EAAMvJ,IACpC6E,EAAWH,EAAQxD,KAAKvC,MAAM4K,EAAMjQ,EAAI,EAAe,MAAViQ,EAAMjQ,EAAwB,MAAViQ,EAAMjQ,IACvEuL,EAAWH,EAAQxD,KAAKvC,MAAM4K,EAAMvU,EAAI,EAAe,MAAVuU,EAAMvU,EAAwB,MAAVuU,EAAMvU,IACvE+P,EAAYL,EAAQ,IACV,MAAO6E,GACjBxE,EAAYL,EAAM,GAClBK,EAAYL,EAAQxD,KAAKvC,MAAgB,MAAV4K,EAAM/H,IACrCuD,EAAYL,EAAQxD,KAAKvC,MAAgB,MAAV4K,EAAM9H,IACrCsD,EAAYL,EAAQxD,KAAKvC,MAAgB,MAAV4K,EAAMvU,IACrC+P,EAAYL,EAAQ,IACV,MAAO6E,GACjBxE,EAAYL,EAAM,GAClBK,EAAYL,EAAQxD,KAAKvC,MAAgB,IAAV4K,EAAM/K,IACrCuG,EAAYL,EAAQxD,KAAKvC,MAAgB,IAAV4K,EAAM7H,IACrCqD,EAAYL,EAAQxD,KAAKvC,MAAgB,IAAV4K,EAAM1U,IACrCkQ,EAAYL,EAAQxD,KAAKvC,MAAgB,IAAV4K,EAAM5H,MAErCoD,EAAYL,EAAM,GAClBK,EAAYL,EAAQxD,KAAKvC,MAAgB,IAAV4K,EAAM5H,EAAY,MACjD+D,EAAWhB,EAAQ,KA7BnBK,EAAYL,EAAM,GAClBgB,EAAWhB,EAAQ,M,yaCvrBrB,YACA,QACA,QAaA,QAKA,QAKA,QAOA,QACA,QAoBA,SAAS8E,EAAW7W,EAAayT,EAAgBpI,EAAkBqI,GAClE,IAAMvI,EAAuB,CAAEnL,IAAG,EAAEyT,IAAG,EAAEpI,KAAI,EAAEqI,MAAK,GACpD,EAAAC,aAAajM,KAAKyD,GAClB,EAAAC,gBAAgBD,EAAQnL,KAAOmL,EAGhC,SAAS2L,EAAgB9W,EAAa+K,GACrC,EAAAK,gBAAgBpL,GAAO,EAAAoL,gBAAgBL,GAGxC,SAASgM,EAAO/W,GACf,OAAO,SAAC+K,GAAgC,gBAAAA,EAAO/K,IAGhD,SAASgX,EAAahS,GACrB,GAAI,EAAAU,WAAWV,GAAS,MAAM,IAAIlE,MAAM,qCAAqCkE,EAAOzC,OAAOsE,SAAS,KACpG,OAAO,EAAAnB,WAAWV,GAGnB,SAASiS,EAAclF,EAAmBrP,GACzC,EAAA8P,YAAYT,EAAQ,GACpB,EAAAS,YAAYT,EAAQrP,GAqJrB,SAAgBwU,EAAelS,EAAmBtD,EAAeC,GAChE,IAAMwV,EAAK,EAAAC,qBAAqBpS,GAAUrD,EACpC0V,EAAK,EAAAD,qBAAqBpS,GAAUtD,EACpC4V,EAAK,EAAAF,qBAAqBpS,GAAUrD,EACpC4V,EAAK,EAAAH,qBAAqBpS,GAAUtD,EACpC8V,EAAK,EAAAJ,qBAAqBpS,GAAUrD,EAE1C,MAAO,CAAC0V,EAAIF,EAAII,EAAID,EADT,EAAAF,qBAAqBpS,GAAUtD,EACd8V,GAG7B,SAASC,EAAgB1F,EAAmB2F,EAAkBhW,EAAeC,GAC5E,EAAAgW,sBAAsB5F,EAAQ2F,EAAO,GAAK/V,GAC1C,EAAAgW,sBAAsB5F,EAAQ2F,EAAO,GAAKhW,GAC1C,EAAAiW,sBAAsB5F,EAAQ2F,EAAO,GAAK/V,GAC1C,EAAAgW,sBAAsB5F,EAAQ2F,EAAO,GAAKhW,GAC1C,EAAAiW,sBAAsB5F,EAAQ2F,EAAO,GAAK/V,GAC1C,EAAAgW,sBAAsB5F,EAAQ2F,EAAO,GAAKhW,GAK3C,SAAgBkW,EAAe5S,EAAmBoR,EAA6B1U,EAAeC,EAAgBF,GAK7G,IAJA,IAAM2K,EAAMpH,EAAOzC,OAASd,EACtBoW,EAAQzB,EAAWyB,MACrBC,OAA+BhU,EAE3BsI,EAAMpH,EAAOzC,QAAW,IAAI,CACnC,IAAMwV,EAAW,EAAAzS,WAAWN,GAE5B,OAAQ+S,GACP,KAAK,EACL,KAAK,EACJ,EAAAzS,WAAWN,GACX,IAAMgT,EAAS,EAAA5S,UAAUJ,GACzB,EAAAM,WAAWN,GACX,EAAAyB,UAAUzB,EAAQ,IAElB8S,EAAO,CAAEG,KAAmB,IAAbF,EAAgBG,WAAuB,IAAZF,EAAgB,UAAY,EAAAG,kBAAkBH,GAASI,MAAO,IACxGP,EAAMnQ,KAAKoQ,GACX,MAED,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACJA,EAAMM,MAAM1Q,KAAK,CAAE2Q,OAAsB,IAAbN,GAA+B,IAAbA,EAAiBL,OAAQR,EAAelS,EAAQtD,EAAOC,KACrG,MACD,KAAK,EACJ,EAAA8E,UAAUzB,EAAQ,IAClB,MACD,KAAK,EAEJ,IAAM,EAAM,EAAAoS,qBAAqBpS,GAC3BmC,EAAO,EAAAiQ,qBAAqBpS,GAC5BoC,EAAS,EAAAgQ,qBAAqBpS,GAC9BqC,EAAQ,EAAA+P,qBAAqBpS,GAC7BsT,EAAa,EAAAlB,qBAAqBpS,GACxC,EAAAyB,UAAUzB,EAAQ,GAClBoR,EAAWmC,UAAY,CAAErR,IAAG,EAAEC,KAAI,EAAEC,OAAM,EAAEC,MAAK,EAAEiR,WAAU,GAC7D,MAED,KAAK,EACJlC,EAAWoC,0BAA4B,EAAAlT,WAAWN,GAClD,EAAAyB,UAAUzB,EAAQ,IAClB,MACD,QAAS,MAAM,IAAIlE,MAAM,yBAI3B,OAAO+W,EAlPK,EAAAlE,aAA8B,GAC9B,EAAAvI,gBAAkD,GA0B/DyL,EACC,OACAE,EAAO,SACP,SAAC/R,EAAQ+F,EAAQ0N,GAChB,GAA0B,IAAtB,EAAArT,UAAUJ,GAAe,MAAM,IAAIlE,MAAM,wBAG7C,IADA,IAAM4X,EAAsB,GACnB9W,EAAI,EAAGA,EAAI,EAAGA,IAAK8W,EAAUhR,KAAK,EAAA9B,YAAYZ,IAEvD,GAA0B,KAAtB,EAAAI,UAAUJ,GAAgB,MAAM,IAAIlE,MAAM,6BAC9C,IAAMsF,EAAuB,EAAAuS,yBAAyB3T,GAEtD,GAA0B,IAAtB,EAAAI,UAAUJ,GAAe,MAAM,IAAIlE,MAAM,6BAC7C,IAAM8X,EAAuB,EAAAD,yBAAyB3T,GAsBtD,GApBA+F,EAAO3E,KAAO,CACbsS,UAAS,EACTvR,KAAM,EAAA0R,YAAY7T,GAClBkC,IAAK,EAAA2R,YAAY7T,GACjBqC,MAAO,EAAAwR,YAAY7T,GACnBoC,OAAQ,EAAAyR,YAAY7T,GACpBoB,KAAMA,EAAK,QAAQ0S,QAAQ,MAAO,MAClCC,MAAO3S,EAAK4S,WAAa,EACzBC,SAAU,EAAAC,aAAaxY,OAAO0F,EAAK8S,cACnCC,UAAW,EAAAC,KAAK1Y,OAAO0F,EAAKiT,MAC5BC,YAAa,EAAAC,KAAK7Y,OAAO0F,EAAKmT,MAC9BX,KAAM,CACLY,MAAO,EAAAC,UAAU/Y,OAAOkY,EAAKa,WAC7B7Y,MAAOgY,EAAKc,WAAa,EACzBC,YAAaf,EAAKgB,iBAAmB,EACrCC,iBAAkBjB,EAAKkB,sBAAwB,EAC/CC,OAAQ,EAAAR,KAAK7Y,OAAOkY,EAAKoB,cAIvB5T,EAAK6T,WAAY,CACpB,IAAMC,EAAa,EAAAC,iBAAiB,EAAAC,gBAAgBhU,EAAK6T,aAQzDlP,EAAO3E,KAAI,OAAQ2E,EAAO3E,MAAS8T,GAIpC,EAAAzT,UAAUzB,EAAQyT,QAEnB,SAAC1G,EAAQhH,GACR,IAAM3E,EAAO2E,EAAO3E,KACdwS,EAAOxS,EAAKwS,MAAQ,GACpBF,EAAYtS,EAAKsS,WAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAE9C2B,EAAiC,CACtC,QAASjU,EAAKA,MAAQ,IAAI0S,QAAQ,SAAU,MAC5CI,aAAc,EAAAA,aAAanY,OAAOqF,EAAK6S,UACvCM,KAAM,EAAAA,KAAKxY,OAAOqF,EAAKkT,aACvBD,KAAM,EAAAD,KAAKrY,OAAOqF,EAAK+S,WACvBH,UAAW5S,EAAK2S,OAAS,EACzBkB,WAAY,EAAAK,oBAAoB,EAAAC,iBAAiBnU,KAGlD,EAAA8L,WAAWH,EAAQ,GAEnB,IAAK,IAAInQ,EAAI,EAAGA,EAAI,EAAGA,IACtB,EAAA8Q,aAAaX,EAAQ2G,EAAU9W,IAGhC,EAAAsQ,WAAWH,EAAQ,IACnB,EAAAyI,0BAA0BzI,EAAQ,GAAI,OAAQsI,GAE9C,EAAAnI,WAAWH,EAAQ,GACnB,EAAAyI,0BAA0BzI,EAAQ,GAAI,OAAQ0I,EAAW7B,IAEzD,EAAA8B,aAAa3I,EAAQ3L,EAAKe,MAC1B,EAAAuT,aAAa3I,EAAQ3L,EAAKc,KAC1B,EAAAwT,aAAa3I,EAAQ3L,EAAKiB,OAC1B,EAAAqT,aAAa3I,EAAQ3L,EAAKgB,WAQ5ByP,EACC,QACA,SAAA9L,GAAU,YAAsBjH,IAAtBiH,EAAO4P,iBAAoD7W,IAAxBiH,EAAO6P,cAA1C,UACT7P,EAAO4P,WAAWrN,QACnB,SAACtI,EAAQ+F,GACR,IAAM8P,EAAa,EAAAlC,yBAAyB3T,GAC5C+F,EAAO4P,WAAaG,EAAmBD,MAExC,SAAC9I,EAAQhH,GACA,IAAA8P,EAAeE,GAAuBhQ,EAAO4P,YAAnC,WAClB,EAAAH,0BAA0BzI,EAAQ,GAAI,OAAQ8I,MAIhDhE,EACC,QACA,SAAA9L,GAAU,YAAsBjH,IAAtBiH,EAAO4P,iBAAoD7W,IAAxBiH,EAAO6P,eACvB,UAA3B7P,EAAO4P,WAAWrN,MADV,UAC8BvC,EAAO4P,WAAWrN,SAC1D,SAACtI,EAAQ+F,EAAQ5D,GAChB,IAAM0T,EAAa,EAAAlC,yBAAyB3T,GAC5C+F,EAAO4P,WAAaG,EAAmBD,GACvC,EAAApU,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACA,IAAA8P,EAAeE,GAAuBhQ,EAAO4P,YAAnC,WAClB,EAAAH,0BAA0BzI,EAAQ,GAAI,OAAQ8I,MAIhDhE,EACC,QACA,SAAA9L,GAAU,YAAsBjH,IAAtBiH,EAAO4P,iBAAoD7W,IAAxBiH,EAAO6P,cAA1C,YACT7P,EAAO4P,WAAWrN,QACnB,SAACtI,EAAQ+F,GACR,IAAM8P,EAAa,EAAAlC,yBAAyB3T,GAC5C+F,EAAO4P,WAAaG,EAAmBD,MAExC,SAAC9I,EAAQhH,GACA,IAAA8P,EAAeE,GAAuBhQ,EAAO4P,YAAnC,WAClB,EAAAH,0BAA0BzI,EAAQ,GAAI,OAAQ8I,MAIhDhE,EACC,QACA,SAAA9L,GAAU,YAAsBjH,IAAtBiH,EAAO4P,iBAAP,IAAmC5P,EAAO6P,gBACpD,SAAC5V,EAAQ+F,EAAQ5D,GAChB,EAAAnB,cAAchB,GACd,IAAMgW,EAAO,EAAArC,yBAAyB3T,GACtC+F,EAAO4P,WAAaG,EAAmBE,GACvC,EAAAvU,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACF,MAAsBgQ,GAAuBhQ,EAAO4P,YAAlDE,EAAU,aAAE7a,EAAG,MACvB,EAAAgT,eAAejB,EAAQ/R,GACvB,EAAAwa,0BAA0BzI,EAAQ,GAAI,OAAQ8I,MAIhD,mBAmBa,EAAA1C,kBAAwC,CAAC,UAAW,UAAW,WAAY,aAExF,mBAmDAtB,EACC,OACAE,EAAO,eACP,SAAC/R,EAAQ+F,EAAQ5D,EAAM,G,IAAEzF,EAAK,QAAEC,EAAM,SACrC,GAA2B,IAAvB,EAAA+D,WAAWV,GAAe,MAAM,IAAIlE,MAAM,wBAE9CiK,EAAOqL,WAAa,CAAEyB,MAAO,IAC7B,IAAMzB,EAAarL,EAAOqL,WAEpBrO,EAAQ,EAAArC,WAAWV,GACzBoR,EAAW6E,OAAyB,KAAP,EAARlT,GACrBqO,EAAW8E,QAA0B,KAAP,EAARnT,GACtBqO,EAAW+E,QAA0B,KAAP,EAARpT,GAEtB6P,EAAe5S,EAAQoR,EAAY1U,EAAOC,EAAQwF,KAIlD,EAAAV,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,EAAQ,G,IAAErJ,EAAK,QAAEC,EAAM,SACzByU,EAAarL,EAAOqL,WACpBrO,GACJqO,EAAW6E,OAAS,EAAI,IACxB7E,EAAW8E,QAAU,EAAI,IACzB9E,EAAW+E,QAAU,EAAI,GAE3B,EAAA3I,YAAYT,EAAQ,GACpB,EAAAS,YAAYT,EAAQhK,GAGpB,EAAAqK,YAAYL,EAAQ,GACpB,EAAAgB,WAAWhB,EAAQ,IAEnB,IAAMwG,EAAYnC,EAAWmC,UACzBA,IACH,EAAAnG,YAAYL,EAAQ,GACpB,EAAA4F,sBAAsB5F,EAAQwG,EAAUrR,KACxC,EAAAyQ,sBAAsB5F,EAAQwG,EAAUpR,MACxC,EAAAwQ,sBAAsB5F,EAAQwG,EAAUnR,QACxC,EAAAuQ,sBAAsB5F,EAAQwG,EAAUlR,OACxC,EAAAsQ,sBAAsB5F,EAAQwG,EAAUD,YACxC,EAAAvF,WAAWhB,EAAQ,SAGuBjO,IAAvCsS,EAAWoC,0BACd,EAAApG,YAAYL,EAAQ,GACpB,EAAAK,YAAYL,EAAQqE,EAAWoC,wBAA0B,EAAI,GAC7D,EAAAzF,WAAWhB,EAAQ,KAGpB,IAAmB,UAAAqE,EAAWyB,MAAX,eAAkB,CAAhC,IAAMC,EAAI,KACd,EAAA1F,YAAYL,EAAQ+F,EAAKG,KAAO,EAAI,GACpC,EAAA7F,YAAYL,EAAQ+F,EAAKM,MAAM1V,QAC/B,EAAA0P,YAAYL,EAAQxD,KAAK6M,IAAI,EAAAjD,kBAAkBjN,QAAQ4M,EAAKI,aAC5D,EAAA9F,YAAYL,EAAQ,GACpB,EAAAgB,WAAWhB,EAAQ,IAKnB,IAHA,IAAMsJ,EAAavD,EAAKG,KAAO,EAAI,EAC7BqD,EAAexD,EAAKG,KAAO,EAAI,EAEJ,MAAAH,EAAKM,MAAL,eAAY,CAAlC,WAAEC,EAAM,SAAEX,EAAM,SAC1B,EAAAtF,YAAYL,EAAQsG,EAASgD,EAAaC,GAC1C7D,EAAgB1F,EAAQ2F,EAAQhW,EAAOC,QAO3CmV,EAAgB,OAAQ,QAiCxBD,EACC,OACAE,EAAO,sBACP,SAAC/R,EAAQ+F,EAAQ5D,GAChB,GAA0B,IAAtB,EAAA3B,UAAUR,GAAe,MAAM,IAAIlE,MAAM,wBAC7C,IAAMka,EAAO,EAAArC,yBAAyB3T,GAGtC+F,EAAOwQ,kBAAoB,CAAEC,kBAAmB,IAEhD,IAAgB,UAAAR,EAAKQ,kBAAL,eAAwB,CAAnC,IAAM5Z,EAAC,KACL6Z,EAA0B,GAEH,MAAzB7Z,EAAE8Z,sBAA6BD,EAAKC,oBAAsB9Z,EAAE8Z,qBACzC,MAAnB9Z,EAAE+Z,gBAAuBF,EAAKE,cAAgB/Z,EAAE+Z,eACvB,MAAzB/Z,EAAEga,sBAA6BH,EAAKG,oBAAsBha,EAAEga,qBAC5Dha,EAAEia,qBACLJ,EAAKK,0BAA4B,CAChC5U,IAAK,EAAA6U,WAAWna,EAAEia,mBAAmB,SACrC1U,KAAM,EAAA4U,WAAWna,EAAEia,mBAAmBG,MACtC5U,OAAQ,EAAA2U,WAAWna,EAAEia,mBAAmBI,MACxC5U,MAAO,EAAA0U,WAAWna,EAAEia,mBAAmBK,QAGzC,IAAMC,EAAYva,EAAEwa,oBAChBD,IACHV,EAAKW,oBAAsB,CAC1BC,SAAU,EAAAN,WAAWI,EAAUE,UAC/BC,QAAS,EAAAP,WAAWI,EAAUG,SAC9BC,WAAY,EAAAR,WAAWI,EAAUI,YACjCC,YAAa,EAAAT,WAAWI,EAAUK,eAGpC,IAAMC,EAAU7a,EAAE8a,oBACdD,IACHhB,EAAKiB,oBAAsB,CAC1B,CAAEta,EAAGqa,EAAQE,iBAAiBC,KAAM1a,EAAGua,EAAQE,iBAAiBE,MAChE,CAAEza,EAAGqa,EAAQK,iBAAiBF,KAAM1a,EAAGua,EAAQK,iBAAiBD,MAChE,CAAEza,EAAGqa,EAAQM,iBAAiBH,KAAM1a,EAAGua,EAAQM,iBAAiBF,MAChE,CAAEza,EAAGqa,EAAQO,iBAAiBJ,KAAM1a,EAAGua,EAAQO,iBAAiBH,QAGlE,IAAMI,EAAOrb,EAAEsb,KACXD,IACHxB,EAAK/C,UAAY,CAACuE,EAAKE,GAAIF,EAAKG,GAAIH,EAAKG,GAAIH,EAAKI,GAAIJ,EAAKK,GAAIL,EAAKM,KAGrExS,EAAOwQ,kBAAkBC,kBAAkB9T,KAAK+T,GAGjD,EAAAhV,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GAKR,I,QAHMyS,EAAOzS,EAAOwQ,kBACdP,EAAuB,CAAEQ,kBAAmB,IAEzC5Z,EAAI,EAAGA,EAAI4b,EAAKhC,kBAAkB9Y,OAAQd,IAAK,CACvD,IAAM6Z,EAAO+B,EAAKhC,kBAAkB5Z,GAEpC,GAAI6Z,EAAKC,oBACRV,EAAKQ,kBAAkB9T,KAAK,CAAEgU,qBAAqB,EAAM+B,eAAgB7b,QACnE,CACNoZ,EAAKQ,kBAAkB9T,KAAK,CAC3BiU,cAAiC,QAAlB,EAAAF,EAAKE,qBAAa,QAAI,EACrCC,oBAA6C,QAAxB,EAAAH,EAAKG,2BAAmB,QAAI,KAGlD,IAAM8B,EAAM1C,EAAKQ,kBAAkBR,EAAKQ,kBAAkB9Y,OAAS,GAE7Dib,EAAQlC,EAAKW,oBACfuB,IACHD,EAAItB,oBAAsB,CACzBwB,qBAAsB,EACtBvB,SAAU,EAAAwB,WAAWF,EAAMtB,SAAU,YACrCC,QAAS,EAAAuB,WAAWF,EAAMrB,QAAS,WACnCC,WAAY,EAAAsB,WAAWF,EAAMpB,WAAY,cACzCC,YAAa,EAAAqB,WAAWF,EAAMnB,YAAa,iBAI7C,IAAMsB,EAAMrC,EAAKK,0BACbgC,IACHJ,EAAI7B,mBAAqB,CACxB+B,qBAAsB,EACtB,OAAQ,EAAAC,WAAWC,EAAI5W,IAAK,OAC5B8U,KAAM,EAAA6B,WAAWC,EAAI3W,KAAM,QAC3B8U,KAAM,EAAA4B,WAAWC,EAAI1W,OAAQ,UAC7B8U,KAAM,EAAA2B,WAAWC,EAAIzW,MAAO,WAI9B,IAAMoV,EAAUhB,EAAKiB,oBACjBD,GAA8B,IAAnBA,EAAQ/Z,SACtBgb,EAAIhB,oBAAsB,CACzBC,iBAAkB,CAAEC,KAAMH,EAAQ,GAAGra,EAAGya,KAAMJ,EAAQ,GAAGva,GACzD4a,iBAAkB,CAAEF,KAAMH,EAAQ,GAAGra,EAAGya,KAAMJ,EAAQ,GAAGva,GACzD6a,iBAAkB,CAAEH,KAAMH,EAAQ,GAAGra,EAAGya,KAAMJ,EAAQ,GAAGva,GACzD8a,iBAAkB,CAAEJ,KAAMH,EAAQ,GAAGra,EAAGya,KAAMJ,EAAQ,GAAGva,KAI3D,IAAMwW,EAAY+C,EAAK/C,UACnBA,GAAkC,IAArBA,EAAUhW,SAC1Bgb,EAAIR,KAAO,CACVC,GAAIzE,EAAU,GACd0E,GAAI1E,EAAU,GACdqF,GAAIrF,EAAU,GACd2E,GAAI3E,EAAU,GACd4E,GAAI5E,EAAU,GACd6E,GAAI7E,EAAU,KAIhBgF,EAAID,eAAiB7b,GAIvB,EAAA0Q,WAAWP,EAAQ,GACnB,EAAAyI,0BAA0BzI,EAAQ,GAAI,OAAQiJ,MAIhDnE,EACC,QACA,SAAA9L,GAAU,YAAmBjH,IAAnBiH,EAAOsL,SAAyBC,EAAgBvL,EAAhD,YACV,SAAC/F,EAAQ+F,EAAQ5D,EAAM6W,EAAGhX,GAEzB,GAAgB,IADA,EAAAtB,WAAWV,GACR,MAAM,IAAIlE,MAAM,wBAEnC,IAAMka,EAAuB,EAAArC,yBAAyB3T,GAItD+F,EAAOsL,QAAU4H,EAAajD,IAAQhU,EAAQ6B,oBAE9C,EAAApC,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,EAAQiT,EAAGhX,GACnB,IAAMgU,EAAOkD,EAAiBnT,EAAOsL,UAAYrP,EAAQ6B,oBAAoB,GAE7E,EAAA2J,YAAYT,EAAQ,GACpB,EAAAyI,0BAA0BzI,EAAQ,GAAI,OAAQiJ,MAIhDnE,EACC,OACAE,EAAO,YACP,SAAC/R,EAAQ+F,EAAQ5D,GACX4D,EAAOsL,UAAStL,EAAOsL,QAAU,EAAA8H,YAAYnZ,IAElD,EAAAyB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,EAAAqT,aAAarM,EAAQhH,EAAOsL,YAI9BQ,EACC,OACAE,EAAO,SACP,SAAC/R,EAAQ+F,EAAQ5D,GAChB4D,EAAOxB,KAAO,EAAAlD,kBAAkBrB,GAChC,EAAAyB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,EAAAsT,mBAAmBtM,EAAQhH,EAAOxB,SAKpCsN,EACC,OACAE,EAAO,eACP,SAAC/R,EAAQ+F,GAAW,OAAAA,EAAOuT,WAAa,EAAAtY,cAApB,MACpB,SAAC+L,EAAQhH,GAAW,SAAAiI,eAAejB,EAAQhH,EAAvB,eAGrB8L,EACC,OACAE,EAAO,OACP,SAAC/R,EAAQ+F,GAAW,OAAAA,EAAOpD,GAAK,EAAAjC,WAAZ,MACpB,SAACqM,EAAQhH,EAAQwT,EAAMvX,GAEtB,IADA,IAAIW,EAAKoD,EAAOpD,IACyB,IAAlCX,EAAQ4N,SAAS1J,QAAQvD,IAAYA,GAAM,IAClD,EAAA6K,YAAYT,EAAQpK,GACpBX,EAAQ4N,SAASlN,KAAKC,MAIxBkP,EACC,OACAE,EAAO,mBACP,SAAC/R,EAAQ+F,EAAQ5D,GAChB4D,EAAOwC,eAAiB,CAAED,KAAM,EAAA5H,WAAWV,IAEvCmC,MACH,EAAAT,eAAe1B,EAAQ,QACvB+F,EAAOwC,eAAevN,IAAM,EAAAgG,cAAchB,IAGvCmC,MAGH4D,EAAOwC,eAAesG,QAAU,EAAAnO,WAAWV,OAG7C,SAAC+M,EAAQhH,GACR,EAAAyH,YAAYT,EAAQhH,EAAOwC,eAAgBD,MAEvCvC,EAAOwC,eAAgBvN,MAC1B,EAAAgT,eAAejB,EAAQ,QACvB,EAAAiB,eAAejB,EAAQhH,EAAOwC,eAAgBvN,UAEP8D,IAAnCiH,EAAOwC,eAAgBsG,SAC1B,EAAArB,YAAYT,EAAQhH,EAAOwC,eAAgBsG,aAQ/CiD,EAAgB,OAAQ,QAExBD,EACC,OACAE,EAAO,0BACP,SAAC/R,EAAQ+F,GACRA,EAAOyT,wBAA0B,EAAAzZ,UAAUC,GAC3C,EAAAyB,UAAUzB,EAAQ,MAEnB,SAAC+M,EAAQhH,GACR,EAAA+G,WAAWC,EAAQhH,EAAOyT,sBAAwB,EAAI,GACtD,EAAAzL,WAAWhB,EAAQ,MAIrB8E,EACC,OACAE,EAAO,0BACP,SAAC/R,EAAQ+F,GACRA,EAAO0T,wBAA0B,EAAA1Z,UAAUC,GAC3C,EAAAyB,UAAUzB,EAAQ,MAEnB,SAAC+M,EAAQhH,GACR,EAAA+G,WAAWC,EAAQhH,EAAO0T,sBAAwB,EAAI,GACtD,EAAA1L,WAAWhB,EAAQ,MAIrB8E,EACC,OACAE,EAAO,aACP,SAAC/R,EAAQ+F,GACRA,EAAO2T,WAAa,EAAA3Z,UAAUC,GAC9B,EAAAyB,UAAUzB,EAAQ,MAEnB,SAAC+M,EAAQhH,GACR,EAAA+G,WAAWC,EAAQhH,EAAO2T,SAAW,EAAI,GACzC,EAAA3L,WAAWhB,EAAQ,MAIrB8E,EACC,OACAE,EAAO,cACP,SAAC/R,EAAQ+F,GACR,IAAMhD,EAAQ,EAAArC,WAAWV,GACzB+F,EAAO4T,UAAY,CAClBC,aAAiC,KAAV,EAAR7W,GACf8W,UAA8B,KAAV,EAAR9W,GACZ+W,SAA6B,KAAV,EAAR/W,IAGA,EAARA,IAAcgD,EAAO4T,UAAUI,WAAY,MAEhD,SAAChN,EAAQhH,GACR,IAAMhD,GACJgD,EAAO4T,UAAWC,aAAe,EAAO,IACxC7T,EAAO4T,UAAWE,UAAY,EAAO,IACrC9T,EAAO4T,UAAWG,SAAW,EAAO,IACpC/T,EAAO4T,UAAWI,UAAY,EAAO,GAEvC,EAAAvM,YAAYT,EAAQhK,MAItB8O,EACC,OACAE,EAAO,eACP,SAAC/R,EAAQ+F,GACR,IAAM6L,EAAQ,EAAAtR,WAAWN,GACzB,EAAAyB,UAAUzB,EAAQ,GAClB+F,EAAOiU,WAAa,EAAA3e,YAAYuW,MAEjC,SAAC7E,EAAQhH,GACR,IAAMgO,EAAQ,EAAA1Y,YAAY6K,QAAQH,EAAOiU,YACzC,EAAA5M,YAAYL,GAAmB,IAAXgH,EAAe,EAAIA,GACvC,EAAAhG,WAAWhB,EAAQ,MAmBrB8E,EACC,OACAE,EAAO,cACP,SAAC/R,EAAQ+F,EAAQ5D,EAAM6W,EAAGhX,GAGzB,IAFA,IAAMzD,EAAQ,EAAAmC,WAAWV,G,WAEhBpD,GACR,EAAA8E,eAAe1B,EAAQ,QACvB,IAAMhF,EAAM,EAAAgG,cAAchB,GAC1B,EAAAD,UAAUC,GACV,EAAAyB,UAAUzB,EAAQ,GAElB,EAAAkD,YAAYlD,EAAQ,GAAG,SAAAmC,GACtB,GAAY,SAARnH,OAEoB8D,KADjBkX,EAAO,EAAArC,yBAAyB3T,IAC7Bia,YAAyBlU,EAAOmU,UAAYlE,EAAKiE,gBACpD,GAAY,SAARjf,EAAgB,CAC1B,IAAMgb,EAAO,EAAArC,yBAAyB3T,GACtCgC,EAAQmY,gBAAkBrW,QAAQC,IAAI,OAAQiS,QAExC,GAAY,SAARhb,EAAgB,CAE1B,IAAMof,EAAU,EAAA9Z,WAAWN,GACrBqa,EAAY,EAAAta,UAAUC,GACtB+C,EAAQ,EAAAhD,UAAUC,GAClBsa,EAAqC,KAAP,EAARvX,GACtBwX,EAAkC,KAAP,EAARxX,GACnByX,EAAuC,KAAP,EAARzX,GAC9Bf,EAAQmY,gBAAkBrW,QAAQC,IACjC,OAAQ,WAAYqW,EAAS,aAAcC,EAC3C,SAAUtX,EAAO,CAAEuX,mBAAkB,EAAEC,gBAAe,EAAEC,qBAAoB,SAK7ExY,EAAQmY,gBAAkBrW,QAAQC,IAAI,qBAAsB/I,GAG7D,EAAAyG,UAAUzB,EAAQmC,SAhCXvF,EAAI,EAAGA,EAAI2B,EAAO3B,I,IAoC3B,EAAA6E,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAMiQ,EAAyB,CAC9BiE,UAAWlU,EAAOmU,WAGnB,EAAA1M,YAAYT,EAAQ,GAEpB,EAAAiB,eAAejB,EAAQ,QACvB,EAAAiB,eAAejB,EAAQ,QACvB,EAAAD,WAAWC,EAAQ,GACnB,EAAAgB,WAAWhB,EAAQ,GACnB,EAAAqB,aAAarB,EAAQ,GAAG,WAAM,SAAAyI,0BAA0BzI,EAAQ,GAAI,WAAtC,MAAyD,MAIzF8E,EACC,OACAE,EAAO,iBACP,SAAC/R,EAAQ+F,EAAQ5D,GAChB,IAAM6T,EAAO,EAAArC,yBAAyB3T,GAGtC+F,EAAO6P,aAAe,CACrB6E,cAAezE,EAAKyE,cACpBC,YAAa1E,EAAK0E,YAClBC,UAAW,EAAA5D,WAAWf,EAAK4E,sBAC3BC,eAAgB,EAAA9D,WAAWf,EAAK8E,2BAChCC,WAAY/E,EAAKgF,sBACjBC,YAAa,EAAAC,uBAAuBxf,OAAOsa,EAAKkF,wBAChDC,aAAc,EAAAC,wBAAwB1f,OAAOsa,EAAKoF,yBAClDC,cAAe,EAAAC,yBAAyB5f,OAAOsa,EAAKsF,0BACpDC,UAAWvF,EAAKwF,qBAChBC,aAAczF,EAAK0F,wBACnBC,YAAa3F,EAAK4F,uBAAuBjhB,IAAI,EAAAoc,YAC7CnU,UAAW,EAAAiZ,KAAKngB,OAAOsa,EAAK8F,sBAC5BjZ,QAAS,EAAAkZ,aAAa/F,EAAKgG,oBAC3BC,QAASnG,EAAmBE,EAAKkG,oBACjC5I,WAAY0C,EAAKmG,uBAGlB,EAAA1a,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,G,UACFqW,EAASrW,EAAO6P,aAChBC,EAA+B,CACpCwG,mBAAoB,EACpB5B,gBAAiB2B,EAAO3B,cACxBC,cAAe0B,EAAO1B,YACtBE,qBAAsBwB,EAAOzB,WAAa,CAAE/e,MAAO,EAAG0gB,MAAO,UAC7DxB,0BAA2BsB,EAAOvB,gBAAkB,CAAEjf,MAAO,EAAG0gB,MAAO,UACvEtB,sBAAwC,QAAjB,EAAAoB,EAAOrB,kBAAU,QAAI,IAC5CG,uBAAwB,EAAAA,uBAAuBnf,OAAOqgB,EAAOnB,aAC7DG,wBAAyB,EAAAA,wBAAwBrf,OAAOqgB,EAAOjB,cAC/DG,yBAA0B,EAAAA,yBAAyBvf,OAAOqgB,EAAOf,eACjEG,uBAAwBY,EAAOb,UAC/BG,0BAA2BU,EAAOX,aAClCG,uBAAwBQ,EAAOT,aAAe,GAC9CG,qBAAsB,EAAAD,KAAK9f,OAAOqgB,EAAOxZ,WACzCoZ,mBAAoB,EAAAO,aAA2B,QAAd,EAAAH,EAAOvZ,eAAO,QAAI,GACnDqZ,mBAAoBnG,GACnBqG,EAAOH,SAAW,CAAE3T,KAAM,QAASsJ,MAAO,CAAEjI,EAAG,EAAGC,EAAG,EAAGvM,EAAG,KAAOwY,WACnEsG,sBAAwC,QAAjB,EAAAC,EAAO9I,kBAAU,QAAI,IAG7C,EAAAkC,0BAA0BzI,EAAQ,GAAI,cAAe8I,MAYvDhE,EACC,OACAE,EAAO,aACP,SAAC/R,EAAQ+F,EAAQ5D,GAChB,IAAM6T,EAAO,EAAArC,yBAAyB3T,GAChCwc,EAAOxG,EAAKyG,aAClB1W,EAAO2W,SAAW,CACjBF,KAAM,CAAEta,IAAKsa,EAAK,QAASra,KAAMqa,EAAKxF,KAAM5U,OAAQoa,EAAKvF,KAAM5U,MAAOma,EAAKtF,MAC3EyF,aAAc3G,EAAK4G,aACnBC,WAAY7G,EAAK8G,mBACjBlL,MAAOmL,GAAW/G,EAAK,SACvBgH,eAAgBhH,EAAKiH,wBAGtB,EAAAxb,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,G,MACF2W,EAAW3W,EAAO2W,SAClBF,EAAOE,EAASF,KAChBxG,EAAuB,CAC5ByG,aAAc,CAAE,OAAQD,EAAKta,IAAK8U,KAAMwF,EAAKra,KAAM8U,KAAMuF,EAAKpa,OAAQ8U,KAAMsF,EAAKna,OACjFua,aAAcF,EAASC,cAAgB,GACvCG,mBAAoBJ,EAASG,YAAc,GAC3C,OAAQK,GAAeR,EAAS9K,OAChCqL,uBAA+C,QAAvB,EAAAP,EAASM,sBAAc,QAAI,GAGpD,EAAAxH,0BAA0BzI,EAAQ,GAAI,WAAYiJ,MAIpDnE,EACC,OACAE,EAAO,0BACP,SAAC/R,EAAQ+F,GAAW,OAAAA,EAAOoX,wBAA0B,EAAAzc,WAAjC,MACpB,SAACqM,EAAQhH,GAAW,SAAAyH,YAAYT,EAAQhH,EAAOoX,sBAAwB,EAAnD,MAGrB,IAAMC,EAAsC,CAAC,UAAW,SAAU,SAAU,eAE5E,SAASC,EAAUzJ,G,gBACZhZ,EAAe,CACpB4Z,MAAO,EAAAC,UAAU/Y,OAAOkY,EAAKa,WAC7B7Y,MAAOgY,EAAKc,WAAa,EACzBC,YAAaf,EAAKgB,iBAAmB,EACrCC,iBAAkBjB,EAAKkB,sBAAwB,EAC/CC,OAAQ,EAAAR,KAAK7Y,OAAOkY,EAAKoB,YACzB7J,OAAQyI,EAAKzI,QAAU,CACtBjJ,IAAK,EAAAob,mBAAmB1J,EAAKzI,OAAO,SACpChJ,KAAM,EAAAmb,mBAAmB1J,EAAKzI,OAAO6L,MACrC5U,OAAQ,EAAAkb,mBAAmB1J,EAAKzI,OAAO8L,MACvC5U,MAAO,EAAAib,mBAAmB1J,EAAKzI,OAAO+L,OAEvCqG,OAAQ3J,EAAK2J,OACbC,OAAQ5J,EAAK4J,QAGY,MAAtB5J,EAAK6J,eAA+C,MAAtB7J,EAAK8J,gBACtC9iB,EAAO6iB,cAAgB7J,EAAK6J,cAC5B7iB,EAAO8iB,cAAgB9J,EAAK8J,eAG7B,IAAMC,EAAe/J,EAAKgK,mBAC1B,GAAID,EAAc,CACjB/iB,EAAOgjB,mBAAqB,CAC3BC,WAAY,IAMb,IAHA,IAAMC,GAAyD,QAApD,EAAAH,EAAaE,WAAWE,MAAK,SAAAnhB,GAAK,eAAAA,EAAE0L,eAAgB,eAAE0V,SAAU,GACrEC,GAAyD,QAApD,EAAAN,EAAaE,WAAWE,MAAK,SAAAnhB,GAAK,eAAAA,EAAE0L,eAAgB,eAAE0V,SAAU,GAElEphB,EAAI,EAAGA,EAAIkhB,EAAGpgB,OAAQd,IAC9BhC,EAAOgjB,mBAAoBC,WAAWnb,KAAK,CAAEtF,EAAG0gB,EAAGlhB,GAAIM,EAAG+gB,EAAGrhB,MAG1D+gB,EAAaO,aAAeP,EAAaQ,eAC5CvjB,EAAOgjB,mBAAmBM,aAA2C,QAA7B,EAAwB,QAAxB,EAAAP,EAAaO,mBAAW,eAAG,UAAE,eAAEF,SAAU,GACjFpjB,EAAOgjB,mBAAmBO,aAA2C,QAA7B,EAAwB,QAAxB,EAAAR,EAAaQ,mBAAW,eAAG,UAAE,eAAEH,SAAU,IAInF,OAAOpjB,EAGR,SAASwjB,EAAYxK,G,QACpB,OAA6B,MAAtBA,EAAK8J,eAA+C,MAAtB9J,EAAK6J,gBAClB,QAAvB,EAAA7J,EAAKgK,0BAAkB,eAAEM,eAAsC,QAAvB,EAAAtK,EAAKgK,0BAAkB,eAAEO,aAGnE,SAAS1I,EAAW7B,GACnB,IAAMzI,EAASyI,EAAKzI,OACd6K,EAAuB,CAC5BvB,UAAW,EAAAA,UAAU1Y,OAAO6X,EAAKY,OACjCE,UAAWd,EAAKhY,OAAS,EACzBgZ,gBAAiBhB,EAAKe,aAAe,EACrCG,qBAAsBlB,EAAKiB,kBAAoB,EAC/CG,WAAY,EAAAT,KAAKxY,OAAO6X,EAAKmB,QAC7B5J,OAAQ,CACP,OAAQ,EAAA0N,WAAW1N,GAAUA,EAAOjJ,KAAO,CAAEoa,MAAO,SAAU1gB,MAAO,GAAK,cAC1Eob,KAAM,EAAA6B,WAAW1N,GAAUA,EAAOhJ,MAAQ,CAAEma,MAAO,SAAU1gB,MAAO,GAAK,eACzEqb,KAAM,EAAA4B,WAAW1N,GAAUA,EAAO/I,QAAU,CAAEka,MAAO,SAAU1gB,MAAO,GAAK,iBAC3Esb,KAAM,EAAA2B,WAAW1N,GAAUA,EAAO9I,OAAS,CAAEia,MAAO,SAAU1gB,MAAO,GAAK,iBAE3E2hB,OAAQ3J,EAAK2J,QAAU,EACvBC,OAAQ5J,EAAK4J,QAAU,GAGlBa,EAAUD,EAAYxK,GAExByK,KACGC,EAAQtI,GACRyH,cAAgB7J,EAAK6J,eAAiB,EAC5Ca,EAAMZ,cAAgB9J,EAAK8J,eAAiB,GAG7C,IAAME,EAAqBhK,EAAKgK,mBAChC,GAAIA,EAAoB,CACvB,IAGOU,EAHDT,EAAaD,EAAmBC,YAAc,GAEpD,GAAIQ,GACGC,EAAQtI,GACR4H,mBAAqB,CAC1BM,YAAa,CAAC,CACb5V,KAAM,cACN0V,OAAQJ,EAAmBM,aAAe,KAE3CC,YAAa,CAAC,CACb7V,KAAM,cACN0V,OAAQJ,EAAmBO,aAAe,KAE3CN,WAAY,CACX,CAAEvV,KAAM,OAAQ0V,OAAQH,EAAWljB,KAAI,SAAAoC,GAAK,OAAAA,EAAA,MAC5C,CAAEuL,KAAM,OAAQ0V,OAAQH,EAAWljB,KAAI,SAAAoC,GAAK,OAAAA,EAAA,aAI9CiZ,EAAK4H,mBAAqB,CACzBC,WAAY,CACX,CAAEvV,KAAM,OAAQ0V,OAAQH,EAAWljB,KAAI,SAAAoC,GAAK,OAAAA,EAAA,MAC5C,CAAEuL,KAAM,OAAQ0V,OAAQH,EAAWljB,KAAI,SAAAoC,GAAK,OAAAA,EAAA,QAMhD,OAAOiZ,EAoNR,SAASuI,EAASve,GAKjB,MAAO,CAAEkC,IAJG,EAAA1B,UAAUR,GAIRmC,KAHD,EAAA3B,UAAUR,GAGHoC,OAFL,EAAA5B,UAAUR,GAEGqC,MADd,EAAA7B,UAAUR,IAIzB,SAASwe,EAAUzR,EAAmByP,GACrC,EAAAlP,WAAWP,EAAQyP,EAAKta,KACxB,EAAAoL,WAAWP,EAAQyP,EAAKra,MACxB,EAAAmL,WAAWP,EAAQyP,EAAKpa,QACxB,EAAAkL,WAAWP,EAAQyP,EAAKna,OAsQzB,SAASoc,EAAenW,GACvB,OAAO,SAACvC,GAAgC,QAAEA,EAAO2Y,YAAc3Y,EAAO2Y,WAAWpW,OAAzC,GA8BzC,SAASqW,EAAkB3e,GAM1B,MAAO,CAAE4e,YALW,EAAAxe,UAAUJ,GAKR6e,eAJC,EAAAze,UAAUJ,GAIK8e,aAHjB,EAAA1e,UAAUJ,GAGqB+e,gBAF5B,EAAA3e,UAAUJ,GAEmCgf,aADhD,EAAA5e,UAAUJ,GAAU,KAI1C,SAASif,EAAmBlS,EAAmBhI,GAC9C,EAAAmI,WAAWH,EAAQhI,EAAQ6Z,aAC3B,EAAA1R,WAAWH,EAAQhI,EAAQ8Z,gBAC3B,EAAA3R,WAAWH,EAAQhI,EAAQ+Z,cAC3B,EAAA5R,WAAWH,EAAQhI,EAAQga,iBAC3B,EAAA7R,WAAWH,EAAQxD,KAAKvC,MAA6B,IAAvBjC,EAAQia,eAuCvC,SAASE,EAAiBlf,GAIzB,IAHA,IAAMmf,EAAQ,EAAA7e,WAAWN,GACnB+E,EAAmC,GAEhCgC,EAAI,EAAGA,EAAIoY,EAAOpY,IAAK,CAC/B,IAAM9J,EAAS,EAAAmD,UAAUJ,GACnBhD,EAAQ,EAAAoD,UAAUJ,GACxB+E,EAAQrC,KAAK,CAAE1F,MAAK,EAAEC,OAAM,IAG7B,OAAO8H,EAGR,SAASqa,EAAkBrS,EAAmBhI,GAC7C,EAAAqI,YAAYL,EAAQhI,EAAQrH,QAE5B,IAAgB,UAAAqH,EAAA,eAAS,CAApB,IAAMsa,EAAC,KACX,EAAAjS,YAAYL,EAAQsS,EAAEpiB,QACtB,EAAAmQ,YAAYL,EAAQsS,EAAEriB,QAkIxB,SAASsiB,EAAetf,GACvB,MAAO,CACN2B,EAAG,EAAAvB,UAAUJ,GACb3C,EAAG,EAAA+C,UAAUJ,GACb6G,EAAG,EAAAzG,UAAUJ,GACbuf,EAAG,EAAAnf,UAAUJ,GACbwf,IAAK,EAAApf,UAAUJ,GACfyf,WAAY,EAAArf,UAAUJ,GACtB0f,UAAW,EAAAtf,UAAUJ,IAIvB,SAAS2f,EAAgB5S,EAAmBhI,GAC3C,IAAM8B,EAAI9B,GAAW,GACrB,EAAAmI,WAAWH,EAAQlG,EAAElF,GAAK,GAC1B,EAAAuL,WAAWH,EAAQlG,EAAExJ,GAAK,GAC1B,EAAA6P,WAAWH,EAAQlG,EAAEA,GAAK,GAC1B,EAAAqG,WAAWH,EAAQlG,EAAE0Y,GAAK,GAC1B,EAAArS,WAAWH,EAAQlG,EAAE2Y,KAAO,GAC5B,EAAAtS,WAAWH,EAAQlG,EAAE4Y,YAAc,GACnC,EAAAvS,WAAWH,EAAQlG,EAAE6Y,WAAa,GAqCnC,SAASE,EAAiB5f,GACzB,MAAO,CACN6f,QAAS,EAAAzf,UAAUJ,GACnB8f,aAAc,EAAA1f,UAAUJ,GACxB+f,WAAY,EAAA3f,UAAUJ,IAIxB,SAASggB,EAAkBjT,EAAmBnR,GAC7C,EAAAsR,WAAWH,EAAQnR,EAAMikB,SAAW,GACpC,EAAA3S,WAAWH,EAAQnR,EAAMkkB,cAAgB,GACzC,EAAA5S,WAAWH,EAAQnR,EAAMmkB,YAAc,GAwHxC,SAASE,EAAgBjgB,GACxB,IAAMkgB,EAAM,EAAA9f,UAAUJ,GAChBmgB,EAAQ,EAAA/f,UAAUJ,GAClBogB,EAAO,EAAAhgB,UAAUJ,GAGvB,OAFA,EAAAyB,UAAUzB,EAAQ,GAEX,CAAEkgB,IAAG,EAAEC,MAAK,EAAEC,KAAI,EAAEC,SADV,EAAAjgB,UAAUJ,IAI5B,SAASsgB,EAAiBvT,EAAmBhI,GAC5C,IAAM8B,EAAI9B,GAAW,GACrB,EAAAmI,WAAWH,EAAQlG,EAAEqZ,KACrB,EAAAhT,WAAWH,EAAQlG,EAAEsZ,OACrB,EAAAjT,WAAWH,EAAQlG,EAAEuZ,MACrB,EAAArS,WAAWhB,EAAQ,GACnB,EAAAG,WAAWH,EAAQlG,EAAEwZ,UAt5BtBxO,EACC,OACAE,EAAO,gBACP,SAAC/R,EAAQ+F,EAAQ5D,GAChB,GAA8B,SAA1B,EAAAnB,cAAchB,GAAoB,MAAM,IAAIlE,MAAM,0BACtD,GAA0B,IAAtB,EAAA0E,UAAUR,GAAe,MAAM,IAAIlE,MAAM,wBAC7C,IAAM6G,EAAK,EAAAzB,iBAAiBlB,EAAQ,GACpC,EAAAQ,UAAUR,GACV,EAAAQ,UAAUR,GACV,EAAAQ,UAAUR,GACV,IAAMugB,EAAkB,EAAA/f,UAAUR,GAClC,IAAKod,EAAiBmD,GAAkB,MAAM,IAAIzkB,MAAM,qBAExD,IADA,IAAM4X,EAAsB,GACnB9W,EAAI,EAAGA,EAAI,EAAGA,IAAK8W,EAAUhR,KAAK,EAAA9B,YAAYZ,IACvD,IAAMwgB,EAAc,EAAAhgB,UAAUR,GAC9B,GAAoB,IAAhBwgB,EAAmB,MAAM,IAAI1kB,MAAM,wBAAwB0kB,GAC/D,IAAM5M,EAA6C,EAAAD,yBAAyB3T,GAE5E+F,EAAO0a,YAAc1a,EAAO0a,aAAe,CAC1C9d,GAAE,EACF2F,KAAM8U,EAAiBmD,GAGvB7M,UAAS,EACTE,KAAMyJ,EAAUzJ,IAMjB,EAAAnS,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAM2a,EAAS3a,EAAO0a,YAOtB,GANA,EAAAzS,eAAejB,EAAQ,QACvB,EAAAO,WAAWP,EAAQ,GACnB,EAAAkB,kBAAkBlB,EAAQ2T,EAAO/d,GAAI,GACrC,EAAA2K,WAAWP,EAAQ,GACnB,EAAAO,WAAWP,EAAQ,GACnB,EAAAO,WAAWP,EAAQ,KAC4B,IAA3CqQ,EAAiBlX,QAAQwa,EAAOpY,MAAc,MAAM,IAAIxM,MAAM,4BAClE,EAAAwR,WAAWP,EAAQqQ,EAAiBlX,QAAQwa,EAAOpY,OACnD,IAAK,IAAI1L,EAAI,EAAGA,EAAI,EAAGA,IAAK,EAAA8Q,aAAaX,EAAQ2T,EAAOhN,UAAU9W,IAClE,EAAA0Q,WAAWP,EAAQ,GACnB,IACMzE,EADUoY,EAAO9M,MAAQwK,EAAYsC,EAAO9M,MAC3B,YAAc,OACrC,EAAA4B,0BAA0BzI,EAAQ,GAAIzE,EAAMmN,EAAWiL,EAAO9M,MAAQ,IAAKtL,MAyB7EuJ,EACC,OACAE,EAAO,gBACP,SAAC/R,EAAQ+F,EAAQ5D,GAChB,GAA8B,SAA1B,EAAAnB,cAAchB,GAAoB,MAAM,IAAIlE,MAAM,qBACtD,GAA0B,IAAtB,EAAA0E,UAAUR,GAAe,MAAM,IAAIlE,MAAM,wBAC7C,IAAMka,EAAuB,EAAArC,yBAAyB3T,GAKtD+F,EAAO0a,YAAc,CACpB9d,GAAIqT,EAAK2K,KACTD,OAAQ1K,EAAK0K,OACbpY,KAAM8U,EAAiBpH,EAAK4K,MAM5BlN,UAAWsC,EAAKkC,KAChBxb,MAAOsZ,EAAK,QAAQ6K,KACpBlkB,OAAQqZ,EAAK,QAAQ8K,KACrBxN,WAAY,EAAAyD,WAAWf,EAAK+K,MAC5BnN,KAAMyJ,EAAWrH,EAAKgL,WAAahL,EAAKpC,OAGrCoC,EAAKiL,oBAAsBjL,EAAKiL,mBAAmBC,MAAK,SAAC9jB,EAAGR,GAAM,OAAAQ,IAAM4Y,EAAKkC,KAAX,QACrEnS,EAAO0a,YAAYQ,mBAAqBjL,EAAKiL,oBAG1CjL,EAAKmL,OAAMpb,EAAO0a,YAAYW,KAAOpL,EAAKmL,MAC1CnL,EAAKqL,OAAMtb,EAAO0a,YAAYY,KAAOrL,EAAKqL,MAC1CrL,EAAKsL,WAAUvb,EAAO0a,YAAYa,SAAWtL,EAAKsL,UAEtD,EAAA7f,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,G,QACR,EAAAiI,eAAejB,EAAQ,QACvB,EAAAO,WAAWP,EAAQ,GAEnB,IAAM2T,EAAS3a,EAAO0a,YAChBzK,EAAI,KACT2K,KAAMD,EAAO/d,GACb+d,OAAqB,QAAb,EAAAA,EAAOA,cAAM,QAAIA,EAAO/d,GAChC4e,KAAM,EACNC,WAAY,GACRd,EAAOU,KAAO,CAAED,KAAMT,EAAOU,MAAS,IAAG,CAC7CK,UAAW,CACVC,UAAW,EACXC,YAAa,KAEdC,SAAU,CACTF,UAAW,EACXC,YAAa,KAEdE,WAAY,EACZzN,KAAM,GACNwM,KAAMxD,EAAiBlX,QAAQwa,EAAOpY,MACtC4P,KAAMwI,EAAOhN,UACbuN,mBAA6C,QAAzB,EAAAP,EAAOO,0BAAkB,QAAIP,EAAOhN,UACxDsN,UAAW,GACXpN,KAAM6B,EAAWiL,EAAO9M,MAAQ,IAChC,OAAQ,CACPiN,KAAMH,EAAOhkB,OAAS,EACtBokB,KAAMJ,EAAO/jB,QAAU,GAExBokB,KAAML,EAAOpN,WAAa,EAAAuF,WAAW6H,EAAOpN,WAAY,cAAgB,CAAEgJ,MAAO,UAAW1gB,MAAO,MAGpG,GAAI8kB,EAAO9M,MAAQwK,EAAYsC,EAAO9M,MAAO,CAC5C,IAAMoN,EAAYvL,EAAWiL,EAAO9M,MACpCoC,EAAKgL,UAAYA,EACjBhL,EAAKpC,KAAO,CACXa,UAAW,qBACXC,UAAWsM,EAAUtM,UACrBE,gBAAiBoM,EAAUpM,gBAC3BE,qBAAsBkM,EAAUlM,qBAChCE,WAAYgM,EAAUhM,WACtB7J,OAAQ6V,EAAU7V,OAClBoS,OAAQyD,EAAUzD,OAClBC,OAAQwD,EAAUxD,oBAGZxH,EAAKgL,UAGTN,EAAOW,OAAMrL,EAAKqL,KAAOX,EAAOW,MAChCX,EAAOY,WAAUtL,EAAKsL,SAAWZ,EAAOY,UAE5C,EAAA9L,0BAA0BzI,EAAQ,GAAI,OAAQiJ,EAAMA,EAAKgL,UAAY,YAAc,WAIrFnP,EACC,OACAE,EAAO,mBACP,SAAC/R,EAAQ+F,GACRA,EAAO+b,eAAiB,CACvB1kB,EAAG,EAAAwD,YAAYZ,GACf9C,EAAG,EAAA0D,YAAYZ,OAGjB,SAAC+M,EAAQhH,GACR,EAAA2H,aAAaX,EAAQhH,EAAO+b,eAAgB1kB,GAC5C,EAAAsQ,aAAaX,EAAQhH,EAAO+b,eAAgB5kB,MAI1C,EAAAjC,cACH4W,EACC,QACA,SAAA9L,GAAU,gBAACA,EAAegc,SAC1B,SAAC/hB,EAAQ+F,EAAQ5D,GAEf4D,EAAegc,MAAQ,EAAAjhB,UAAUd,EAAQmC,QAE3C,SAAC4K,EAAQhH,GAAW,YAGrB8L,EACC,QACA,SAAA9L,GAAU,YACV,SAAC/F,EAAQ+F,EAAQ5D,GACXA,KAEL,EAAAV,UAAUzB,EAAQmC,QAOnB,SAAC6f,EAASC,OAoBZpQ,EACC,QACA,SAAA9L,GAAU,gBAACA,EAAemc,eAC1B,SAACliB,EAAQ+F,EAAQ5D,GAChB,IAAMggB,EAAQ,EAAA7hB,WAAWN,GACnBoiB,EAAQ,EAAA9hB,WAAWN,GACzB,GAAc,IAAVmiB,GAAyB,IAAVC,EAAa,MAAM,IAAItmB,MAAM,wBAIhD,IAHA,IAAMyC,EAAQ,EAAAmC,WAAWV,GACnBkiB,EAA4B,GAEzBtlB,EAAI,EAAGA,EAAI2B,EAAO3B,IAAK,CACZ,EAAA8D,WAAWV,GAC9B,IAAMsI,EAAO,EAAAtH,cAAchB,GACrB,IAAS,EAAAD,UAAUC,GACP,EAAAD,UAAUC,GACD,EAAAM,WAAWN,GACtC,IAAMqiB,EAAe9D,EAASve,GACxBsiB,EAAgB/D,EAASve,GACzB4R,EAAQ,EAAA2Q,UAAUviB,GAClBwiB,EAAS,EAAAthB,iBAAiBlB,EAAQ,GAClC,EAAO,EAAAkB,iBAAiBlB,EAAQ,GAChCyiB,EAAO,EAAAvhB,iBAAiBlB,EAAQ,GACZ,EAAAU,WAAWV,GAChB,EAAAgB,cAAchB,GACnC,IAAM0iB,EAAa,EAAAhiB,WAAWV,GAC1BxD,OAAI,EAER,GAAa,SAAT8L,EACCoa,GAAc,GAA4B,QAAvB,EAAApiB,WAAWN,GACjCxD,EAAO,EAAA8E,4BAA4BtB,GAAS0iB,EAAa,GAAK,IAE9D1iB,EAAOzC,QAAU,EACjBf,EAAO,EAAAmmB,gBAAgB3iB,EAAQ0iB,IAGhClmB,EAAOA,EAAKsX,QAAQ,MAAO,UACrB,IAAa,SAATxL,EAGV,MAAM,IAAIxM,MAAM,2BAFhBU,EAAO,EAAAsE,UAAUd,EAAQ0iB,GAK1BR,EAAYxf,KAAK,CAChB4F,KAAe,SAATA,EAAkB,OAAS,QAAS2K,KAAI,EAAEoP,aAAY,EAAEC,cAAa,EAAE1Q,MAAK,EAAE4Q,OAAM,EAAEje,KAAI,EAAEke,KAAI,EAAEjmB,KAAI,IAI7GuJ,EAAemc,YAAcA,EAC9B,EAAAzgB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAMmc,EAAenc,EAAemc,YAEpC,EAAA9U,YAAYL,EAAQ,GACpB,EAAAK,YAAYL,EAAQ,GACpB,EAAAS,YAAYT,EAAQmV,EAAYxkB,QAEhC,IAAyB,UAAAwkB,EAAA,eAAa,CAAjC,IAAMU,EAAU,KACdC,EAA4B,UAApBD,EAAWta,KAEzB,GAAIua,KAAWD,EAAWpmB,gBAAgBiB,YAAa,MAAM,IAAI3B,MAAM,8CACvE,IAAK+mB,GAAoC,kBAApBD,EAAWpmB,KAAmB,MAAM,IAAIV,MAAM,yCAEnE,IAAMgnB,EAAe/V,EAAOxP,OAC5B,EAAAiQ,YAAYT,EAAQ,GACpB,EAAAiB,eAAejB,EAAQ8V,EAAQ,OAAS,QACxC,EAAA/V,WAAWC,EAAQ6V,EAAW3P,KAAO,EAAI,GACzC,EAAAnG,WAAWC,EAAQ,IACnB,EAAAK,YAAYL,EAAQ,GACpByR,EAAUzR,EAAQ6V,EAAWP,cAC7B7D,EAAUzR,EAAQ6V,EAAWN,eAC7B,EAAAS,WAAWhW,EAAQ6V,EAAWhR,OAC9B,EAAA3D,kBAAkBlB,EAAQ6V,EAAWJ,QAAU,GAAI,GACnD,EAAAvU,kBAAkBlB,EAAQ6V,EAAWre,MAAQ,GAAI,GACjD,EAAA0J,kBAAkBlB,EAAQ6V,EAAWH,MAAQ,GAAI,GACjD,IAAMO,EAAgBjW,EAAOxP,OAC7B,EAAAiQ,YAAYT,EAAQ,GACpB,EAAAiB,eAAejB,EAAQ8V,EAAQ,OAAS,QACxC,EAAArV,YAAYT,EAAQ,GACpB,IAAMkW,EAAalW,EAAOxP,OAE1B,GAAIslB,EACH,EAAAjV,WAAWb,EAAQ6V,EAAWpmB,UACxB,CACN,EAAA4Q,YAAYL,EAAQ,OAEpB,IADA,IAAM3L,EAAQwhB,EAAWpmB,KAAgBsX,QAAQ,MAAO,MAC/ClX,EAAI,EAAGA,EAAIwE,EAAK1D,OAAQd,IAAK,EAAAwQ,YAAYL,EAAQ3L,EAAK8K,WAAWtP,IAG3EmQ,EAAO9M,KAAKwN,UAAUqV,EAAc/V,EAAOxP,OAASulB,GAAc,GAClE/V,EAAO9M,KAAKwN,UAAUuV,EAAejW,EAAOxP,OAASylB,GAAe,GACpEjW,EAAO9M,KAAKwN,UAAUwV,EAAa,EAAGlW,EAAOxP,OAAS0lB,GAAY,OASrEpR,EACC,QACA,SAAC9L,GAAgB,QAAGA,EAAemd,aAAgBnd,EAAemd,YAAaxlB,OAA9D,KACjB,SAACsC,EAAQ+F,EAAQ5D,EAAM6W,EAAGhX,GACzB,IAAMD,EAAMgE,EAGZ,IAFAhE,EAAImhB,YAAc,GAEX/gB,IAAS,GAAG,CAClB,IAAI1F,EAAOuV,EAAahS,GAClB7B,EAAc6B,EAAOzC,OACrB+K,EAAO,EAAAtH,cAAchB,GACrBuH,EAAU,EAAA/G,UAAUR,GACpB2C,EAAK,EAAAzB,iBAAiBlB,EAAQ,GAC9B,EAAO,EAAAqB,kBAAkBrB,GACzBmjB,EAAW,EAAAniB,cAAchB,GAAQojB,OACjCC,EAAc,EAAAriB,cAAchB,GAAQojB,OACpCE,EAAWtR,EAAahS,GAExBujB,EADwB,EAAAxjB,UAAUC,GACW,EAAA2T,yBAAyB3T,QAAgClB,EAEtG0kB,GADgC,SAATlb,GAAkB,EAAAqL,yBAAyB3T,GAC/C,CAAE2C,GAAE,EAAE4B,KAAI,EAAE/H,UAAMsC,IAM3C,GAJIqkB,IAAUK,EAAKlb,KAAO6a,GACtBE,IAAaG,EAAKC,QAAUJ,GAC5BE,IAAoBC,EAAK3N,WAAa0N,GAE7B,SAATjb,GAAmBf,EAAU,EAAG,CACnC,IAAMmc,EAAO,EAAAljB,UAAUR,GACjB2jB,EAAQ,EAAA5jB,UAAUC,GAClB4jB,EAAM,EAAA7jB,UAAUC,GAChB6jB,EAAO,EAAA9jB,UAAUC,GACjB8jB,EAAS,EAAA/jB,UAAUC,GACnB+jB,EAAU,EAAAnjB,YAAYZ,GACtBgkB,EAAeza,KAAK+F,MAAMyU,GAC1BE,EAAgC,KAA1BF,EAAUC,GACtBR,EAAKU,KAAO,IAAIC,KAAKT,EAAMC,EAAOC,EAAKC,EAAMC,EAAQE,EAAcC,GAGpE,IAAMG,EAAoB,SAAT9b,EAAkB0J,EAAahS,GAAU,EAa1D,IAZa,SAATsI,GAAiB,EAAA7G,UAAUzB,EAAQ,GAC1B,SAATsI,IAAiBkb,EAAKhnB,KAAO,EAAAsE,UAAUd,EAAQsjB,IAC/C/b,GAAW,IAAGic,EAAKa,gBAAkB,EAAAhjB,kBAAkBrB,IACvDuH,GAAW,IAAGic,EAAKc,aAAe,EAAA1jB,YAAYZ,IAC9CuH,GAAW,IAAGic,EAAKe,iBAAmB,EAAAxkB,UAAUC,IACvC,SAATsI,IAAiBkb,EAAKhnB,KAAO,EAAAsE,UAAUd,EAAQokB,IAE/CpiB,EAAQwiB,sBAAqBhB,EAAKhnB,UAAOsC,GAE7CiD,EAAImhB,YAAYxgB,KAAK8gB,GAGd/mB,EAAO,GAAGA,IACjBuD,EAAOzC,OAASY,EAAc1B,EAG/B,EAAAgF,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GAGR,IAFA,IAEmB,MAFPA,EAEWmd,YAAJ,eAAkB,CAAhC,IAAMM,EAAI,KACVjc,EAAU,EAEe,MAAzBic,EAAKe,iBAA0Bhd,EAAU,EACf,MAArBic,EAAKc,aAAsB/c,EAAU,EACb,MAAxBic,EAAKa,kBAAyB9c,EAAU,GAGjD,EAAAiG,YAAYT,EAAQ,GACpB,EAAAS,YAAYT,EAAQ,GACpB,IAAM0X,EAAa1X,EAAOxP,OAS1B,GARA,EAAAyQ,eAAejB,EAAQyW,EAAKhnB,KAAO,OAAS,QAC5C,EAAA8Q,WAAWP,EAAQxF,GACnB,EAAA0G,kBAAkBlB,EAAQyW,EAAK7gB,IAAM,GAAI,GACzC,EAAA+hB,8BAA8B3X,EAAQyW,EAAKjf,MAAQ,IACnD,EAAAyJ,eAAejB,EAAQyW,EAAKlb,MAAUkb,EAAKlb,KAAI,QAAOqc,OAAO,EAAG,GAAK,QACrE,EAAA3W,eAAejB,EAAQyW,EAAKC,SAAaD,EAAKC,QAAO,QAAOkB,OAAO,EAAG,GAAK,YAC3E1S,EAAclF,EAAQyW,EAAKhnB,KAAOgnB,EAAKhnB,KAAK6N,WAAa,GAErDmZ,EAAK3N,YAAc2N,EAAK3N,WAAWyL,SAAU,CAChD,IAAMtL,EAA2B,CAChCsL,SAAUkC,EAAK3N,WAAWyL,UAG3B,EAAAxU,WAAWC,EAAQ,GACnB,EAAAyI,0BAA0BzI,EAAQ,GAAI,OAAQiJ,QAE9C,EAAAlJ,WAAWC,EAAQ,GAGhByW,EAAKhnB,KAAM,EAAAoR,WAAWb,EAAQyW,EAAKhnB,MAClCyV,EAAclF,EAAQ,GACvBxF,GAAW,GAAG,EAAAmd,8BAA8B3X,EAAQyW,EAAKa,iBAAmB,IAC5E9c,GAAW,GAAG,EAAAmG,aAAaX,EAAQyW,EAAKc,cAAgB,GACxD/c,GAAW,GAAG,EAAAuF,WAAWC,EAAQyW,EAAKe,kBAAoB,GAE9D,IAAI9nB,EAAOsQ,EAAOxP,OAASknB,EAG3B,IAFA1X,EAAO9M,KAAKwN,UAAUgX,EAAa,EAAGhoB,GAAM,GAErCA,EAAO,GACbA,IACA,EAAAqQ,WAAWC,EAAQ,OAKvB+E,EAAgB,OAAQ,QACxBA,EAAgB,OAAQ,QAGxBD,EACC,QACA,SAAA9L,GAAU,gBAACA,EAAe6e,SAC1B,SAAC5kB,EAAQ+F,EAAQ5D,EAAM0iB,EAAO7iB,GACzBA,EAAQ6B,oBAAsB1B,KACjC2B,QAAQC,IAAI,8BAA8B5B,IAAM,WAG7C,EAAAlH,gBACF8K,EAAe6e,MAAQ,EAAA9jB,UAAUd,EAAQmC,SAG5C,SAAC4K,EAAQhH,GAAW,SAAA9K,eAAiB,EAAA2S,WAAWb,EAAShH,EAArC,UAUrB8L,EACC,OACAE,EAAO,aACP,SAAC/R,EAAQ+F,GACW,EAAA4N,yBAAyB3T,GAE5C+F,EAAO+e,SAAW,MAKnB,SAAC/X,EAAQkV,GAKR,EAAAzM,0BAA0BzI,EAAQ,GAAI,iBAJnB,CAClB+X,SAAU,QAObjT,EACC,OACAE,EAAO,YACP,SAAC/R,EAAQ+F,GAAW,OAAAA,EAAOwB,QAAU,EAAA7G,WAAjB,MACpB,SAACqM,EAAQhH,GAAW,SAAAyH,YAAYT,EAAQhH,EAApB,YAOrB8L,EACC,OACA4M,EAAe,wBACf,SAACze,EAAQ+F,EAAQ5D,GACX4D,EAAO2Y,aACX3Y,EAAO2Y,WAAa,CACnBpW,KAAM,sBACNyc,WAAY,EAAA3kB,UAAUJ,GACtBglB,SAAU,EAAA5kB,UAAUJ,GACpBilB,UAAW,EAAA7kB,UAAUJ,GACrBklB,eAAgB,EAAAnlB,UAAUC,GAC1BmlB,WAAW,IAIb,EAAA1jB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,G,MACF2L,EAAO3L,EAAO2Y,WACpB,EAAAxR,WAAWH,EAAQ2E,EAAKqT,YAAc,GACtC,EAAA7X,WAAWH,EAAQ2E,EAAKsT,UAAY,GACpC,EAAA9X,WAAWH,EAAsB,QAAd,EAAA2E,EAAKuT,iBAAS,QAAI,KACrC,EAAAnY,WAAWC,EAAQ2E,EAAKwT,aAAe,EAAI,GAC3C,EAAAnX,WAAWhB,EAAQ,MAqBrB8E,EACC,OACA4M,EAAe,WACf,SAACze,EAAQ+F,EAAQ5D,GAChB,GAA2B,IAAvB,EAAA7B,WAAWN,GAAe,MAAM,IAAIlE,MAAM,wBAE9CiK,EAAO2Y,WAAU,OACb3Y,EAAO2Y,YAAwB,CAClCpW,KAAM,SACN8c,IAAKzG,EAAkB3e,GACvBkgB,IAAKvB,EAAkB3e,GACvBmgB,MAAOxB,EAAkB3e,GACzBogB,KAAMzB,EAAkB3e,KAGzB,EAAAyB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO2Y,WACd2G,EAAiB,CACtBzG,YAAa,EACbC,eAAgB,IAChBC,aAAc,EACdC,gBAAiB,IACjBC,aAAc,GAGf,EAAA5R,YAAYL,EAAQ,GACpBkS,EAAmBlS,EAAQ2E,EAAK0T,KAAOC,GACvCpG,EAAmBlS,EAAQ2E,EAAKwO,KAAOmF,GACvCpG,EAAmBlS,EAAQ2E,EAAK0O,MAAQiF,GACxCpG,EAAmBlS,EAAQ2E,EAAKyO,OAASkF,GACzC,IAAK,IAAIzoB,EAAI,EAAGA,EAAI,GAAIA,IAAKqiB,EAAmBlS,EAAQsY,MA0B1DxT,EACC,OACA4M,EAAe,WACf,SAACze,EAAQ+F,EAAQ5D,GAEhB,GADA,EAAApC,UAAUC,GACiB,IAAvB,EAAAM,WAAWN,GAAe,MAAM,IAAIlE,MAAM,wBAC9C,EAAAwE,WAAWN,GACX,IAAMuC,EAAW,EAAAjC,WAAWN,GACtB0R,EAAyB,CAAEpJ,KAAM,UAExB,EAAX/F,IAAcmP,EAAK0T,IAAMlG,EAAiBlf,IAC/B,EAAXuC,IAAcmP,EAAKwO,IAAMhB,EAAiBlf,IAC/B,EAAXuC,IAAcmP,EAAKyO,MAAQjB,EAAiBlf,IACjC,EAAXuC,IAAcmP,EAAK0O,KAAOlB,EAAiBlf,IAE/C+F,EAAO2Y,WAAU,OACb3Y,EAAO2Y,YACPhN,GAoBJ,EAAAjQ,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO2Y,WACZ0G,EAA0B1T,EAAvB,IAAEwO,EAAqBxO,EAAlB,IAAEyO,EAAgBzO,EAAX,MAAE0O,EAAS1O,EAAL,KACzBnP,EAAW,EACXD,EAAe,EAEf8iB,GAAOA,EAAI1nB,SAAU6E,GAAY,EAAGD,KACpC4d,GAAOA,EAAIxiB,SAAU6E,GAAY,EAAGD,KACpC6d,GAASA,EAAMziB,SAAU6E,GAAY,EAAGD,KACxC8d,GAAQA,EAAK1iB,SAAU6E,GAAY,EAAGD,KAE1C,EAAAwK,WAAWC,EAAQ,GACnB,EAAAK,YAAYL,EAAQ,GACpB,EAAAK,YAAYL,EAAQ,GACpB,EAAAK,YAAYL,EAAQxK,GAEhB6iB,GAAOA,EAAI1nB,QAAQ0hB,EAAkBrS,EAAQqY,GAC7ClF,GAAOA,EAAIxiB,QAAQ0hB,EAAkBrS,EAAQmT,GAC7CC,GAASA,EAAMziB,QAAQ0hB,EAAkBrS,EAAQoT,GACjDC,GAAQA,EAAK1iB,QAAQ0hB,EAAkBrS,EAAQqT,GAEnD,EAAApS,eAAejB,EAAQ,QACvB,EAAAK,YAAYL,EAAQ,GACpB,EAAAK,YAAYL,EAAQ,GACpB,EAAAK,YAAYL,EAAQzK,GAEhB8iB,GAAOA,EAAI1nB,SAAU,EAAA0P,YAAYL,EAAQ,GAAIqS,EAAkBrS,EAAQqY,IACvElF,GAAOA,EAAIxiB,SAAU,EAAA0P,YAAYL,EAAQ,GAAIqS,EAAkBrS,EAAQmT,IACvEC,GAASA,EAAMziB,SAAU,EAAA0P,YAAYL,EAAQ,GAAIqS,EAAkBrS,EAAQoT,IAC3EC,GAAQA,EAAK1iB,SAAU,EAAA0P,YAAYL,EAAQ,GAAIqS,EAAkBrS,EAAQqT,IAE7E,EAAArS,WAAWhB,EAAQ,MAIrB8E,EACC,OACA4M,EAAe,aACf,SAACze,EAAQ+F,EAAQ5D,GAChB,GAA2B,IAAvB,EAAA7B,WAAWN,GAAe,MAAM,IAAIlE,MAAM,wBAE9CiK,EAAO2Y,WAAU,OACb3Y,EAAO2Y,YAAwB,CAClCpW,KAAM,WACNgd,SAAU,EAAAzR,YAAY7T,GACtBzC,OAAQ,EAAAsW,YAAY7T,GACpBulB,MAAO,EAAA1R,YAAY7T,KAGpB,EAAAyB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO2Y,WACpB,EAAAtR,YAAYL,EAAQ,GACpB,EAAA2I,aAAa3I,EAAQ2E,EAAK4T,UAC1B,EAAA5P,aAAa3I,EAAQ2E,EAAKnU,QAC1B,EAAAmY,aAAa3I,EAAQ2E,EAAK6T,OAC1B,EAAAxX,WAAWhB,EAAQ,MASrB8E,EACC,OACA4M,EAAe,aACf,SAACze,EAAQ+F,EAAQ5D,GAChB,IAAM6T,EAA2B,EAAArC,yBAAyB3T,GAC1D+F,EAAO2Y,WAAa,CAAEpW,KAAM,iBACNxJ,IAAlBkX,EAAKwP,WAAwBzf,EAAO2Y,WAAW8G,SAAWxP,EAAKwP,eACjD1mB,IAAdkX,EAAKyP,OAAoB1f,EAAO2Y,WAAWe,WAAazJ,EAAKyP,MAEjE,EAAAhkB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO2Y,WACd1I,EAA2B,QACXlX,IAAlB4S,EAAK8T,WAAwBxP,EAAKwP,SAAW9T,EAAK8T,eAC9B1mB,IAApB4S,EAAK+N,aAA0BzJ,EAAKyP,KAAO/T,EAAK+N,YAEpD,EAAAjK,0BAA0BzI,EAAQ,GAAI,OAAQiJ,MA2BhDnE,EACC,OACA4M,EAAe,mBACf,SAACze,EAAQ+F,EAAQ5D,GAChB,GAA2B,IAAvB,EAAA7B,WAAWN,GAAe,MAAM,IAAIlE,MAAM,wBAE9CiK,EAAO2Y,WAAU,OACb3Y,EAAO2Y,YAAwB,CAClCpW,KAAM,iBACNod,OAAQpG,EAAetf,GACvB2lB,KAAMrG,EAAetf,GACrB4lB,QAAStG,EAAetf,GACxB6lB,OAAQvG,EAAetf,GACvB8lB,MAAOxG,EAAetf,GACtB+lB,MAAOzG,EAAetf,GACtBgmB,SAAU1G,EAAetf,KAG1B,EAAAyB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO2Y,WAEpB,EAAAtR,YAAYL,EAAQ,GACpB4S,EAAgB5S,EAAQ2E,EAAKgU,QAC7B/F,EAAgB5S,EAAQ2E,EAAKiU,MAC7BhG,EAAgB5S,EAAQ2E,EAAKkU,SAC7BjG,EAAgB5S,EAAQ2E,EAAKmU,QAC7BlG,EAAgB5S,EAAQ2E,EAAKoU,OAC7BnG,EAAgB5S,EAAQ2E,EAAKqU,OAC7BpG,EAAgB5S,EAAQ2E,EAAKsU,aAkB/BnU,EACC,OACA4M,EAAe,kBACf,SAACze,EAAQ+F,EAAQ5D,GAChB4D,EAAO2Y,WAAa,CACnBpW,KAAM,gBACN2d,QAASrG,EAAiB5f,GAC1BkmB,SAAUtG,EAAiB5f,GAC3BmmB,WAAYvG,EAAiB5f,GAC7BomB,qBAAsB,EAAArmB,UAAUC,IAGjC,EAAAyB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO2Y,WACpBsB,EAAkBjT,EAAQ2E,EAAKuU,SAAW,IAC1CjG,EAAkBjT,EAAQ2E,EAAKwU,UAAY,IAC3ClG,EAAkBjT,EAAQ2E,EAAKyU,YAAc,IAC7C,EAAArZ,WAAWC,EAAQ2E,EAAK0U,mBAAqB,EAAI,GACjD,EAAArY,WAAWhB,EAAQ,MAiBrB8E,EACC,OACA4M,EAAe,kBACf,SAACze,EAAQ+F,EAAQ5D,GAChB,IAAM6T,EAAgC,EAAArC,yBAAyB3T,GAC/D+F,EAAO2Y,WAAa,CACnBpW,KAAM,gBACNqd,KAAM3P,EAAK,QACX4P,QAAS5P,EAAKqQ,KACdR,OAAQ7P,EAAK,QACb8P,MAAO9P,EAAK,QACZ+P,MAAO/P,EAAK,QACZgQ,SAAUhQ,EAAKsQ,KACfC,UAAWvQ,EAAKuQ,QAChBC,WAAYxQ,EAAKyQ,aACjBC,eAAgB1Q,EAAK2Q,kCAGC7nB,IAAnBkX,EAAK4Q,YAAyB7gB,EAAO2Y,WAAWkI,UAAY7J,GAAW/G,EAAK4Q,YAEhF,EAAAnlB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO2Y,WACd1I,EAAgC,CACrC,OAAQtE,EAAKiU,MAAQ,EACrBU,KAAM3U,EAAKkU,SAAW,EACtB,OAAQlU,EAAKmU,QAAU,EACvB,OAAQnU,EAAKoU,OAAS,EACtB,OAAQpU,EAAKqU,OAAS,EACtBO,KAAM5U,EAAKsU,UAAY,EACvBO,UAAW7U,EAAK6U,QAChBK,UAAW1J,GAAexL,EAAKkV,WAC/BH,aAAc/U,EAAK8U,YAAc,EACjCG,4BAA6BjV,EAAKgV,gBAAkB,IAGrD,EAAAlR,0BAA0BzI,EAAQ,GAAI,OAAQiJ,MAIhDnE,EACC,OACA4M,EAAe,iBACf,SAACze,EAAQ+F,EAAQ5D,GAChB,IAGIyP,EAHErK,EAAU,EAAAjH,WAAWN,GAC3B,GAAgB,IAAZuH,GAA6B,IAAZA,EAAe,MAAM,IAAIzL,MAAM,wBAKnD8V,EADe,IAAZrK,EACK,EAAAgb,UAAUviB,GAGV,CACPqI,EAAG,EAAA7H,UAAUR,GAAU,IACvB2B,EAAG,EAAAnB,UAAUR,GAAU,IACvB3C,EAAG,EAAAmD,UAAUR,GAAU,KAIzB+F,EAAO2Y,WAAa,CACnBpW,KAAM,eACNsJ,MAAK,EACLiV,QAAS,EAAAnmB,WAAWV,GAAU,IAC9BomB,qBAAsB,EAAArmB,UAAUC,IAGjC,EAAAyB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO2Y,WACpB,EAAAtR,YAAYL,EAAQ,GACpB,EAAAgW,WAAWhW,EAAQ2E,EAAKE,OAAS,CAAEvJ,EAAG,EAAG1G,EAAG,EAAGtE,EAAG,IAClD,EAAAmQ,YAAYT,EAA8B,KAArB2E,EAAKmV,SAAW,IACrC,EAAA/Z,WAAWC,EAAQ2E,EAAK0U,mBAAqB,EAAI,GACjD,EAAArY,WAAWhB,EAAQ,MAsBrB8E,EACC,OACA4M,EAAe,kBACf,SAACze,EAAQ+F,EAAQ5D,GAChB,GAA2B,IAAvB,EAAA7B,WAAWN,GAAe,MAAM,IAAIlE,MAAM,wBAE9C,IAAM4iB,EAAqC3Y,EAAO2Y,WAAU,OACxD3Y,EAAO2Y,YAAwB,CAClCpW,KAAM,gBACNwe,aAAc,EAAAxmB,WAAWN,KAGrB0e,EAAWoI,aACfpI,EAAWwB,IAAMD,EAAgBjgB,GACjC0e,EAAWyB,MAAQF,EAAgBjgB,GACnC0e,EAAW0B,KAAOH,EAAgBjgB,IAGnC0e,EAAWqI,KAAO9G,EAAgBjgB,GAElC,EAAAyB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO2Y,WACpB,EAAAtR,YAAYL,EAAQ,GACpB,EAAAK,YAAYL,EAAQ2E,EAAKoV,WAAa,EAAI,GAEtCpV,EAAKoV,YACRxG,EAAiBvT,EAAQ2E,EAAKqV,MAC9B,EAAAhZ,WAAWhB,EAAQ,MAEnBuT,EAAiBvT,EAAQ2E,EAAKwO,KAC9BI,EAAiBvT,EAAQ2E,EAAKyO,OAC9BG,EAAiBvT,EAAQ2E,EAAK0O,MAC9BE,EAAiBvT,EAAQ2E,EAAKqV,UAKjC,IAAMC,EAAkB,EAAAC,WAA8D,kBAAmB,QAAS,CACjH,QAAS,QACTC,gBAAiB,kBACjBC,kBAAmB,sBAGdC,EAAgB,EAAAH,WAAoC,gBAAiB,OAAQ,CAClFI,KAAM,gBACNC,KAAM,gBACN,MAAO,iBAGFC,EAAmB,EAAAN,WAA0B,mBAAoB,MAAO,CAC7E7B,IAAK,WACLoC,IAAK,aAeN3V,EACC,OACA4M,EAAe,iBACf,SAACze,EAAQ+F,EAAQ5D,GAChB,GAA2B,IAAvB,EAAA7B,WAAWN,GAAe,MAAM,IAAIlE,MAAM,wBAE9C,IAAMka,EAA8B,EAAArC,yBAAyB3T,GAC7D+F,EAAO2Y,WAAa,CAAEpW,KAAM,gBAC5B,IAAMoJ,EAAO3L,EAAO2Y,gBAEI5f,IAApBkX,EAAKyR,aAA0B/V,EAAK+V,WAAaT,EAAgBtrB,OAAOsa,EAAKyR,kBAC5D3oB,IAAjBkX,EAAK,UAAuBtE,EAAKnN,KAAOyR,EAAK,cAC/BlX,IAAdkX,EAAK0R,OAAoBhW,EAAKiW,OAAS3R,EAAK0R,WAC3B5oB,IAAjBkX,EAAK4R,UAAuBlW,EAAKkW,QAAU5R,EAAK4R,cAC7B9oB,IAAnBkX,EAAK6R,YAAyBnW,EAAKoW,UAAYV,EAAc1rB,OAAOsa,EAAK6R,iBACtD/oB,IAAnBkX,EAAK+R,YAAyBrW,EAAKqW,UAAYR,EAAiB7rB,OAAOsa,EAAK+R,iBACxDjpB,IAApBkX,EAAKgS,aAA0BtW,EAAKsW,WAAaT,EAAiB7rB,OAAOsa,EAAKgS,kBACvDlpB,IAAvBkX,EAAKiS,gBAA6BvW,EAAKwW,cAAgBlS,EAAKiS,oBACrCnpB,IAAvBkX,EAAKmS,gBAA6BzW,EAAK0W,cAAgBpS,EAAKmS,eAEhE,EAAA1mB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO2Y,WACd1I,EAA8B,QAEZlX,IAApB4S,EAAK+V,aAA0BzR,EAAKyR,WAAaT,EAAgBjrB,OAAO2V,EAAK+V,kBAC/D3oB,IAAd4S,EAAKnN,OAAoByR,EAAK,QAAUtE,EAAKnN,WAC7BzF,IAAhB4S,EAAKiW,SAAsB3R,EAAK0R,KAAOhW,EAAKiW,aAC3B7oB,IAAjB4S,EAAKkW,UAAuB5R,EAAK4R,QAAUlW,EAAKkW,cAC7B9oB,IAAnB4S,EAAKoW,YAAyB9R,EAAK6R,UAAYT,EAAcrrB,OAAO2V,EAAKoW,iBACtDhpB,IAAnB4S,EAAKqW,YAAyB/R,EAAK+R,UAAYR,EAAiBxrB,OAAO2V,EAAKqW,iBACxDjpB,IAApB4S,EAAKsW,aAA0BhS,EAAKgS,WAAaT,EAAiBxrB,OAAO2V,EAAKsW,kBACvDlpB,IAAvB4S,EAAKwW,gBAA6BlS,EAAKiS,cAAgBvW,EAAKwW,oBACrCppB,IAAvB4S,EAAK0W,gBAA6BpS,EAAKmS,cAAgBzW,EAAK0W,eAEhE,EAAAhb,YAAYL,EAAQ,GACpB,EAAAyI,0BAA0BzI,EAAQ,GAAI,OAAQiJ,MAIhDnE,EACC,OACA4M,EAAe,WACf,SAACze,EAAQ+F,EAAQ5D,GAChB4D,EAAO2Y,WAAa,CAAEpW,KAAM,UAC5B,EAAA7G,UAAUzB,EAAQmC,QAEnB,eAKD0P,EACC,OACA4M,EAAe,cACf,SAACze,EAAQ+F,EAAQ5D,GAChB4D,EAAO2Y,WAAa,CACnBpW,KAAM,YACN+f,OAAQ,EAAA/nB,WAAWN,IAEpB,EAAAyB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,G,MACF2L,EAAO3L,EAAO2Y,WACpB,EAAAtR,YAAYL,EAAmB,QAAX,EAAA2E,EAAK2W,cAAM,QAAI,GACnC,EAAAta,WAAWhB,EAAQ,MAIrB8E,EACC,OACA4M,EAAe,cACf,SAACze,EAAQ+F,EAAQ5D,GAChB4D,EAAO2Y,WAAa,CACnBpW,KAAM,YACNggB,MAAO,EAAAhoB,WAAWN,IAEnB,EAAAyB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,G,MACF2L,EAAO3L,EAAO2Y,WACpB,EAAAtR,YAAYL,EAAkB,QAAV,EAAA2E,EAAK4W,aAAK,QAAI,KAClC,EAAAva,WAAWhB,EAAQ,MAIrB,IAAMwb,EAAkB,CAAC,GAAI,GAAI,GAAI,MAAO,MAAO,GAAI,OA4HvD,SAASC,EAAoBxoB,GAC5B,MAAO,CACN6G,EAAG,EAAAzG,UAAUJ,GACb+J,EAAG,EAAA3J,UAAUJ,GACb9C,EAAG,EAAAkD,UAAUJ,GACbgK,EAAG,EAAA5J,UAAUJ,IAIf,SAASyoB,EAAqB1b,EAAmB2b,GAChD,IAAM7hB,EAAI6hB,GAAQ,GAClB,EAAAxb,WAAWH,EAAQlG,EAAEA,GACrB,EAAAqG,WAAWH,EAAQlG,EAAEkD,GACrB,EAAAmD,WAAWH,EAAQlG,EAAE3J,GACrB,EAAAgQ,WAAWH,EAAQlG,EAAEmD,GA8RtB,SAAS2e,EAAcC,GACtB,IAAMxM,EAA4B,CACjCyM,UAAWD,EAAGE,KACdhP,SAAU,EAAAiP,KAAKrtB,OAAOktB,EAAGI,MACzBC,SAAU,EAAAC,KAAKxtB,OAAOktB,EAAGO,MACzBvmB,UAAW,EAAAiZ,KAAKngB,OAAOktB,EAAG,SAC1B/lB,QAAS,EAAAkZ,aAAa6M,EAAGQ,MACzB3sB,KAAM,EAAAsa,WAAW6R,EAAG,UAUrB,YAPmB9pB,IAAf8pB,EAAGS,UAAuBjN,EAAOiN,QAAUT,EAAGS,cAC1BvqB,IAApB8pB,EAAGU,eAA4BlN,EAAOkN,aAAeV,EAAGU,mBACvCxqB,IAAjB8pB,EAAGW,YAAyBnN,EAAOmN,UAAYX,EAAGW,WAClDX,EAAG,UAASxM,EAAOxK,MAAQmL,GAAW6L,EAAG,UACzCA,EAAGY,OAAMpN,EAAOqN,SAAWC,EAAqBd,IAChDA,EAAGe,OAAMvN,EAAOwN,QAAUC,EAAoBjB,IAE3CxM,EAGR,SAAS0N,EAAkB1N,GAC1B,IAAI2N,EAAyB,GAa7B,OAZAA,EAAKjB,OAAS1M,EAAOyM,aACE/pB,IAAnBsd,EAAOiN,UAAuBU,EAAKV,UAAYjN,EAAOiN,cAC9BvqB,IAAxBsd,EAAOkN,eAA4BS,EAAKT,eAAiBlN,EAAOkN,cACpES,EAAKf,KAAO,EAAAD,KAAKhtB,OAAOqgB,EAAOtC,UAC/BiQ,EAAKZ,KAAO,EAAAD,KAAKntB,OAAOqgB,EAAO6M,UAC/Bc,EAAK,QAAU,EAAAlO,KAAK9f,OAAOqgB,EAAOxZ,WAClCmnB,EAAKX,KAAO,EAAA7M,aAAaH,EAAOvZ,SAChCknB,EAAK,QAAU,EAAAlR,WAAWuD,EAAO3f,KAAM,QACnC2f,EAAOxK,QAAOmY,EAAK,QAAU7M,GAAed,EAAOxK,QACnDwK,EAAOqN,WAAUM,EAAO,EAAH,KAAQA,GAASC,EAAyB5N,EAAOqN,YACtErN,EAAOwN,UAASG,EAAO,EAAH,KAAQA,GAASE,GAAwB7N,EAAOwN,gBAC/C9qB,IAArBsd,EAAOmN,YAAyBQ,EAAKR,YAAcnN,EAAOmN,WACvDQ,EAGR,SAAS9Q,EAAavH,EAAuC3N,GAC5D,IAAMsN,EAA4B,GAkBlC,OAjBKK,EAAKwY,iBAAgB7Y,EAAQ/N,UAAW,GACzCoO,EAAK,UAASL,EAAQhC,MAAQ,EAAA0M,aAAarK,EAAK,UAChDA,EAAKyY,OAAM9Y,EAAQ+Y,WAAa,CAACC,GAAkB3Y,EAAKyY,KAAMpmB,KAC9D2N,EAAK4Y,kBAAiBjZ,EAAQ+Y,WAAa1Y,EAAK4Y,gBAAgB3vB,KAAI,SAAAiC,GAAK,OAAAytB,GAAkBztB,EAAlB,OACzE8U,EAAK6Y,OAAMlZ,EAAQmZ,YAAc,CAACH,GAAkB3Y,EAAK6Y,KAAMxmB,KAC/D2N,EAAK+Y,mBAAkBpZ,EAAQmZ,YAAc9Y,EAAK+Y,iBAAiB9vB,KAAI,SAAAiC,GAAK,OAAAytB,GAAkBztB,EAAlB,OAC5E8U,EAAKgZ,OAAMrZ,EAAQsZ,UAAYN,GAAkB3Y,EAAKgZ,KAAM3mB,IAC5D2N,EAAKkZ,OAAMvZ,EAAQwZ,UAAYR,GAAkB3Y,EAAKkZ,KAAM7mB,IAC5D2N,EAAKoZ,OAAMzZ,EAAQ0Z,MAAQV,GAAkB3Y,EAAKoZ,KAAM/mB,IACxD2N,EAAKsZ,OAAM3Z,EAAQ4Z,UAAY,CAACZ,GAAkB3Y,EAAKsZ,KAAMjnB,KAC7D2N,EAAKwZ,iBAAgB7Z,EAAQ4Z,UAAYvZ,EAAKwZ,eAAevwB,KAAI,SAAAiC,GAAK,OAAAytB,GAAkBztB,EAAlB,OACtE8U,EAAKyZ,cAAa9Z,EAAQ+Z,eAAiBf,GAAkB3Y,EAAKyZ,YAAapnB,IAC/E2N,EAAK2Z,OAAMha,EAAQia,gBAAkB,CAACjB,GAAkB3Y,EAAK2Z,KAAMtnB,KACnE2N,EAAK6Z,oBAAmBla,EAAQia,gBAAkB5Z,EAAK6Z,kBAAkB5wB,KAAI,SAAAiC,GAAK,OAAAytB,GAAkBztB,EAAlB,OAClF8U,EAAK8Z,OAAMna,EAAQoa,MAAQpB,GAAkB3Y,EAAK8Z,KAAMznB,IACxD2N,EAAKqY,OAAM1Y,EAAQ+K,OAAS,CAACuM,EAAcjX,EAAKqY,QAChDrY,EAAKga,eAAcra,EAAQ+K,OAAS1K,EAAKga,aAAa/wB,KAAI,SAAAiC,GAAK,OAAA+rB,EAAA,OAC5DtX,EAGR,SAAS6H,EAAiB5S,EAAqBvC,EAAc4nB,GAU5D,I,8BATMja,EAAwCia,EAAQ,CACrD,OAAQ,EAAApP,aAAoB,QAAP,EAAAjW,EAAE+I,aAAK,QAAI,GAChC6a,gBAAiB5jB,EAAEhD,UAChB,CACH4mB,gBAAiB5jB,EAAEhD,SACnB,OAAQ,EAAAiZ,aAAoB,QAAP,EAAAjW,EAAE+I,aAAK,QAAI,IAIf,MAD4B,CAAC,aAAc,cAAe,YAAa,kBAAmB,UAC1F,eAAW,CAC5B,GAAI/I,EADMtL,EAAG,QACE2R,MAAMif,QAAQtlB,EAAEtL,IAAO,MAAM,IAAIc,MAASd,EAAG,uBAmB7D,IAhBgB,QAAZ,EAAAsL,EAAE8jB,kBAAU,eAAG,MAAOuB,IAAOja,EAAKyY,KAAO0B,GAAsBvlB,EAAE8jB,WAAW,GAAI,aAAcrmB,KAClF,QAAZ,EAAAuC,EAAE8jB,kBAAU,eAAG,KAAMuB,IAAOja,EAAK4Y,gBAAkBhkB,EAAE8jB,WAAWzvB,KAAI,SAAAiC,GAAK,OAAAivB,GAAsBjvB,EAAG,aAAzB,QAC5D,QAAb,EAAA0J,EAAEkkB,mBAAW,eAAG,MAAOmB,IAAOja,EAAK6Y,KAAOsB,GAAsBvlB,EAAEkkB,YAAY,GAAI,cAAezmB,KACpF,QAAb,EAAAuC,EAAEkkB,mBAAW,eAAG,KAAMmB,IAAOja,EAAK+Y,iBAAmBnkB,EAAEkkB,YAAY7vB,KAAI,SAAAiC,GAAK,OAAAivB,GAAsBjvB,EAAG,cAAzB,OAC5E0J,EAAEqkB,YAAWjZ,EAAKgZ,KAAOmB,GAAsBvlB,EAAEqkB,UAAW,YAAa5mB,KAC9D,QAAX,EAAAuC,EAAE2kB,iBAAS,eAAG,KAAMU,IAAOja,EAAKwZ,eAAiB5kB,EAAE2kB,UAAUtwB,KAAI,SAAAiC,GAAK,OAAAivB,GAAsBjvB,EAAG,YAAzB,QACrD,QAAjB,EAAA0J,EAAEglB,uBAAe,eAAG,KAAMK,IAAOja,EAAK6Z,kBAAoBjlB,EAAEglB,gBAAgB3wB,KAAI,SAAAiC,GAAK,OAAAivB,GAAsBjvB,EAAG,kBAAzB,QAC7E,QAAR,EAAA0J,EAAE8V,cAAM,eAAG,KAAMuP,IAAOja,EAAKga,aAAeplB,EAAE8V,OAAOzhB,KAAI,SAAAiC,GAAK,OAAAktB,EAAA,OAC9DxjB,EAAEukB,YAAWnZ,EAAKkZ,KAAOiB,GAAsBvlB,EAAEukB,UAAW,YAAa9mB,IACzEuC,EAAEykB,QAAOrZ,EAAKoZ,KAAOe,GAAsBvlB,EAAEykB,MAAO,QAAShnB,KAClD,QAAX,EAAAuC,EAAE2kB,iBAAS,eAAG,MAAOU,IAAOja,EAAKsZ,KAAOa,GAAsBvlB,EAAE2kB,UAAU,GAAI,YAAalnB,IAC3FuC,EAAE8kB,iBAAgB1Z,EAAKyZ,YAAcU,GAAsBvlB,EAAE8kB,eAAgB,iBAAkBrnB,KAC9E,QAAjB,EAAAuC,EAAEglB,uBAAe,eAAG,MAAOK,IAAOja,EAAK2Z,KAAOQ,GAAsBvlB,EAAEglB,gBAAgB,GAAI,kBAAmBvnB,IAC7GuC,EAAEmlB,QAAO/Z,EAAK8Z,KAAOK,GAAsBvlB,EAAEmlB,MAAO,QAAS1nB,KACrD,QAAR,EAAAuC,EAAE8V,cAAM,eAAG,MAAOuP,IAAOja,EAAKqY,KAAOD,EAA0B,QAAR,EAAAxjB,EAAE8V,cAAM,eAAG,KAElEuP,EAAO,CACVja,EAAKoa,eAAiB,EAEtB,IAAkB,UAAAjxB,OAAOC,KAAKwL,GAAZ,eAAgB,CAA7B,IAAMtL,EACJY,EAAS0K,EADLtL,EAAG,MAEb,GAAI2R,MAAMif,QAAQhwB,GACjB,IAAqB,UAAAA,EAAA,eAAO,CAAX,KACLitB,SAASnX,EAAKoa,mBAM7B,OAAOpa,EAGR,SAAgBJ,EAAgBD,GAC/B,OAAOxW,OAAOC,KAAKuW,GAAS1W,KAAI,SAAAK,GAAO,OAACqW,EAAD,MAAuB6P,MAAK,SAAA5jB,GAAK,OAAAqP,MAAMif,QAAQtuB,IAAMA,EAAEI,OAAtB,KA0HzE,SAASquB,EAAcC,GACtB,GAAkB,cAAdA,EAAKC,KAAsB,CAC9B,IAAM,EAAkBD,EAAKE,MAAQ,KAErC,MAAO,CACN5jB,KAAM,QACN/D,KAAMynB,EAAK,QACXG,WAAYH,EAAKE,KAAO,KACxBE,WAAYJ,EAAKK,KAAK1xB,KAAI,SAAAmP,GAAK,MAAC,CAC/B8H,MAAOmL,GAAWjT,EAAE,SACpBwiB,SAAUxiB,EAAEyiB,KAAO,EACnBC,SAAU1iB,EAAE2iB,KAAO,QAEpBC,aAAcV,EAAKW,KAAKhyB,KAAI,SAAAmP,GAAK,MAAC,CACjCjH,QAAS,EAAAkZ,aAAajS,EAAEsf,MACxBkD,SAAUxiB,EAAEyiB,KAAO,EACnBC,SAAU1iB,EAAE2iB,KAAO,SAIrB,MAAO,CACNnkB,KAAM,QACN/D,KAAMynB,EAAK,QACXY,UAAWZ,EAAKa,KAAO,KACvBC,WAAY,EAAAC,KAAKrxB,OAAOswB,EAAKe,MAC7BC,WAAYhB,EAAKiB,KACjBC,iBAAkBlB,EAAKmB,KACvBC,kBAAmBpB,EAAKqB,KACxB/wB,IAAK0vB,EAAK,QAAQrxB,KAAI,SAAAyC,GAAK,OAAAA,EAAA,OAC3Bb,IAAKyvB,EAAK,QAAQrxB,KAAI,SAAAyC,GAAK,OAAAA,EAAA,QAK9B,SAASkwB,EAAkBtB,G,QAC1B,GAAkB,UAAdA,EAAK1jB,KAAkB,CAC1B,IAAM,EAAUiB,KAAKvC,MAA+B,MAAT,QAAf,EAAAglB,EAAKG,kBAAU,QAAI,IAC/C,MAAO,CACN,OAAQH,EAAKznB,MAAQ,GACrB0nB,KAAM,YACNC,KAAM,EACNG,KAAML,EAAKI,WAAWzxB,KAAI,SAAAmP,G,MAAK,MAAC,CAC/B,OAAQoT,GAAepT,EAAE8H,OACzBgP,KAAM,YACN2L,KAAMhjB,KAAKvC,MAAM8C,EAAEwiB,SAAW,GAC9BG,KAAMljB,KAAKvC,MAA4B,KAAX,QAAV,EAAA8C,EAAE0iB,gBAAQ,QAAI,SAEjCG,KAAMX,EAAKU,aAAa/xB,KAAI,SAAAmP,G,MAAK,MAAC,CACjCsf,KAAM,EAAA7M,aAAazS,EAAEjH,SACrB0pB,KAAMhjB,KAAKvC,MAAM8C,EAAEwiB,SAAW,GAC9BG,KAAMljB,KAAKvC,MAA4B,KAAX,QAAV,EAAA8C,EAAE0iB,gBAAQ,QAAI,UAIlC,MAAO,CACNP,KAAM,YACN,OAAQD,EAAKznB,MAAQ,GACrB8oB,OAAQrB,EAAKoB,gBACbD,OAAQnB,EAAKkB,eACbH,KAAM,EAAAA,KAAKhxB,OAAOiwB,EAAKc,YACvBG,KAAMjB,EAAKgB,YAAc,EACzBH,KAAMtjB,KAAKvC,MAA8B,MAAT,QAAd,EAAAglB,EAAKY,iBAAS,QAAI,IACpC,QAASZ,EAAK1vB,KAAO,CAAC,EAAG,EAAG,EAAG,IAAI3B,KAAI,SAAAyC,GAAK,WAAAA,KAC5C,QAAS4uB,EAAKzvB,KAAO,CAAC,EAAG,EAAG,EAAG,IAAI5B,KAAI,SAAAyC,GAAK,WAAAA,MAK/C,SAASssB,EAAqB7T,GAC7B,IAAMjb,EAASmxB,EAAclW,EAAW2T,MAaxC,OAZA5uB,EAAO4Z,MAAQ,EAAA+Y,KAAK7xB,OAAOma,EAAW+K,WACd9hB,IAApB+W,EAAW6R,OAAoB9sB,EAAO+sB,OAAS9R,EAAW6R,WACtC5oB,IAApB+W,EAAW2X,OAAoB5yB,EAAO6yB,QAAU5X,EAAW2X,WACvC1uB,IAApB+W,EAAW6X,OAAoB9yB,EAAO+yB,MAAQ,EAAAC,WAAW/X,EAAW6X,YAC7C5uB,IAAvB+W,EAAW,UAAuBjb,EAAOyU,MAAQ,EAAA0M,aAAalG,EAAW,eACrD/W,IAApB+W,EAAWgY,OAAoBjzB,EAAOkzB,MAAQjY,EAAWgY,WACrC/uB,IAApB+W,EAAWkY,OACdnzB,EAAO2C,OAAS,CACfH,EAAG,EAAA2e,aAAalG,EAAWkY,KAAKnW,MAChC1a,EAAG,EAAA6e,aAAalG,EAAWkY,KAAKlW,QAG3Bjd,EAGR,SAASivB,EAAoBhU,GAC5B,IAAMjb,EAA2C,CAChD2J,KAAMsR,EAAW8T,KAAK,QACtBhnB,GAAIkT,EAAW8T,KAAKhJ,MAIrB,YAFwB7hB,IAApB+W,EAAWmY,OAAoBpzB,EAAOyY,OAASwC,EAAWmY,WACrClvB,IAArB+W,EAAWoY,QAAqBrzB,EAAOqzB,MAAQ,CAAE7wB,EAAGyY,EAAWoY,MAAMrW,KAAM1a,EAAG2Y,EAAWoY,MAAMpW,OAC5Fjd,EAGR,SAASkb,EAAmBD,GAC3B,GAAI,SAAUA,EACb,OAAO6T,EAAqB7T,GACtB,GAAI,SAAUA,EACpB,UAASvN,KAAM,WAAcuhB,EAAoBhU,IAC3C,GAAI,SAAUA,EACpB,MAAO,CAAEvN,KAAM,QAASsJ,MAAOmL,GAAWlH,EAAW,UAErD,MAAM,IAAI/Z,MAAM,0BAIlB,SAASkuB,EAAyB/N,GACjC,IAAMrhB,EAAoC,GAc1C,YAbuBkE,IAAnBmd,EAAQ0L,SAAsB/sB,EAAO8sB,KAAOzL,EAAQ0L,aAChC7oB,IAApBmd,EAAQwR,UAAuB7yB,EAAO4yB,KAAOvR,EAAQwR,cACnC3uB,IAAlBmd,EAAQ0R,QAAqB/yB,EAAO8yB,KAAO,EAAAQ,WAAWjS,EAAQ0R,QAClE/yB,EAAOgmB,KAAO,EAAA2M,KAAKxxB,OAAOkgB,EAAQzH,YACZ1V,IAAlBmd,EAAQ6R,QAAqBlzB,EAAOizB,KAAO5R,EAAQ6R,YACjChvB,IAAlBmd,EAAQ5M,QAAqBzU,EAAO,QAAU,EAAA2hB,aAAaN,EAAQ5M,QACnE4M,EAAQ1e,SACX3C,EAAOmzB,KAAO,CACbnW,KAAM,EAAA2E,aAAaN,EAAQ1e,OAAOH,GAClCya,KAAM,EAAA0E,aAAaN,EAAQ1e,OAAOL,KAGpCtC,EAAO4uB,KAAO8D,EAAkBrR,GACzBrhB,EAGR,SAASqvB,GAAwBhO,GAChC,IAAMrhB,EAAmC,CACxC+uB,KAAM,CACL,OAAQ1N,EAAQ1X,MAAQ,GACxBoc,KAAM1E,EAAQtZ,IAAM,KAKtB,YAFuB7D,IAAnBmd,EAAQ5I,SAAsBzY,EAAOozB,OAAS/R,EAAQ5I,aACpCvU,IAAlBmd,EAAQgS,QAAqBrzB,EAAOqzB,MAAQ,CAAErW,KAAMqE,EAAQgS,MAAM7wB,EAAGya,KAAMoE,EAAQgS,MAAM/wB,IACtFtC,EAGR,SAASmb,GAAuBkG,GAC/B,MAAqB,UAAjBA,EAAQ3T,KACJ,CAAEtN,IAAK,OAAQ6a,WAAY,CAAE,OAAQqH,GAAejB,EAAQrK,SACxC,YAAjBqK,EAAQ3T,KACX,CAAEtN,IAAK,OAAQ6a,WAAYoU,GAAwBhO,IAEnD,CAAEjhB,IAAK,OAAQ6a,WAAYmU,EAAyB/N,IAI7D,SAASc,GAAWnL,GACnB,GAAI,SAAUA,EACb,MAAO,CAAE/H,EAAG,EAAAskB,oBAAoBvc,EAAM,SAAU9H,EAAG8H,EAAM6T,KAAMpoB,EAAGuU,EAAMwc,MAClE,GAAI,SAAUxc,EACpB,MAAO,CAAEjI,EAAGiI,EAAM,QAAShI,EAAGgI,EAAM,QAASvU,EAAGuU,EAAM,SAChD,GAAI,SAAUA,EACpB,MAAO,CAAE/K,EAAG+K,EAAM,QAAS7H,EAAG6H,EAAM0U,KAAMppB,EAAG0U,EAAM,QAAS5H,EAAG4H,EAAMyc,MAC/D,GAAI,SAAUzc,EACpB,MAAO,CAAE5H,EAAG4H,EAAM,SACZ,GAAI,SAAUA,EACpB,MAAO,CAAEvJ,EAAGuJ,EAAM0c,KAAM3sB,EAAGiQ,EAAM,QAASvU,EAAGuU,EAAM,SAEnD,MAAM,IAAI9V,MAAM,gCAIlB,SAASohB,GAAetL,GACvB,GAAKA,EAEE,IAAI,MAAOA,EACjB,MAAO,CAAE,OAAQA,EAAMjI,GAAK,EAAG,OAAQiI,EAAMhI,GAAK,EAAG,OAAQgI,EAAMvU,GAAK,GAClE,GAAI,MAAOuU,EACjB,MAAO,CAAE,OAAQ,EAAAsc,WAAqB,IAAVtc,EAAM/H,GAAU4b,KAAM7T,EAAM9H,GAAK,EAAGskB,KAAMxc,EAAMvU,GAAK,GAC3E,GAAI,MAAOuU,EACjB,MAAO,CAAE,OAAQA,EAAM/K,GAAK,EAAGyf,KAAM1U,EAAM7H,GAAK,EAAG,OAAQ6H,EAAM1U,GAAK,EAAGmxB,KAAMzc,EAAM5H,GAAK,GACpF,GAAI,MAAO4H,EACjB,MAAO,CAAE0c,KAAM1c,EAAMvJ,GAAK,EAAG,OAAQuJ,EAAMjQ,GAAK,EAAG,OAAQiQ,EAAMvU,GAAK,GAChE,GAAI,MAAOuU,EACjB,MAAO,CAAE,OAAQA,EAAM5H,GAEvB,MAAM,IAAIlO,MAAM,uBAZhB,MAAO,CAAE,OAAQ,EAAG,OAAQ,EAAG,OAAQ,GAoBzC,SAASuuB,GAAkBkE,EAAUC,GAGpC,IAFA,IAAM5zB,EAAqB,GAET,MAAAC,OAAOC,KAAKyzB,GAAZ,eAAkB,CAA/B,IAAMvzB,EAAG,KACPW,EAAM4yB,EAAIvzB,GAEhB,OAAQA,GACP,IAAK,OAAQJ,EAAOiuB,UAAYltB,EAAK,MACrC,IAAK,OAAQf,EAAO6zB,iBAAmB9yB,EAAK,MAC5C,IAAK,OAAQf,EAAO8zB,cAAgB/yB,EAAK,MACzC,IAAK,OAAQf,EAAOkzB,QAAUnyB,EAAK,MACnC,IAAK,OAAQf,EAAO+sB,SAAWhsB,EAAK,MACpC,IAAK,OAAQf,EAAOqb,SAAWta,EAAK,MACpC,IAAK,OAAQf,EAAO6yB,UAAY9xB,EAAK,MACrC,IAAK,OAAQf,EAAOgX,MAAQmL,GAAWphB,GAAM,MAC7C,IAAK,OAAQf,EAAO+zB,eAAiB5R,GAAWphB,GAAM,MACtD,IAAK,OAAQf,EAAOg0B,YAAc7R,GAAWphB,GAAM,MACnD,IAAK,OAAQf,EAAOkf,SAAW,EAAAiP,KAAKrtB,OAAOC,GAAM,MACjD,IAAK,OAAQf,EAAOgI,UAAY,EAAAiZ,KAAKngB,OAAOC,GAAM,MAClD,IAAK,OAAQf,EAAOi0B,mBAAqB,EAAAhT,KAAKngB,OAAOC,GAAM,MAC3D,IAAK,OAAQf,EAAOk0B,gBAAkB,EAAAjT,KAAKngB,OAAOC,GAAM,MACxD,IAAK,OAAQf,EAAO4Z,MAAQ,EAAAua,KAAKrzB,OAAOC,GAAM,MAC9C,IAAK,OAAQf,EAAOo0B,UAAY,EAAAC,KAAKvzB,OAAOC,GAAM,MAClD,IAAK,OAAQf,EAAOs0B,UAAY,EAAAC,KAAKzzB,OAAOC,GAAa,MACzD,IAAK,OAAQf,EAAOs0B,UAAY,EAAAE,KAAK1zB,OAAOC,GAAa,MACzD,IAAK,OAAQf,EAAOy0B,OAAS,EAAAC,KAAK5zB,OAAOC,GAAM,MAC/C,IAAK,OAAQf,EAAO0N,KAAO,EAAAilB,KAAK7xB,OAAOC,GAAM,MAC7C,IAAK,OAAQf,EAAOiI,QAAU,EAAAkZ,aAAapgB,GAAM,MACjD,IAAK,OAAQf,EAAO20B,iBAAmB,EAAAxT,aAAapgB,GAAM,MAC1D,IAAK,OAAQf,EAAO40B,cAAgB,EAAAzT,aAAapgB,GAAM,MACvD,IAAK,OACL,IAAK,OAAQf,EAAO+yB,MAAQ,EAAAC,WAAWjyB,GAAM,MAC7C,IAAK,OAAQf,EAAO60B,SAAW,EAAA7B,WAAWjyB,GAAM,MAChD,IAAK,OAAQf,EAAO80B,OAAS,EAAA3Y,WAAWpb,GAAM,MAC9C,IAAK,OAAQf,EAAO+0B,SAAW,EAAA5T,aAAapgB,GAAM,MAClD,IAAK,OAAQf,EAAO6B,KAAO,EAAAsa,WAAWpb,GAAM,MAC5C,IAAK,OAAQf,EAAOg1B,MAAQ,EAAA7T,aAAapgB,GAAM,MAC/C,IAAK,OAAQf,EAAOi1B,MAAQ,EAAA9T,aAAapgB,GAAM,MAC/C,IAAK,OAAQf,EAAOk1B,MAAQ,EAAA/Y,WAAWpb,GAAM,MAC7C,IAAK,OAAQf,EAAOm1B,OAAS,EAAAhU,aAAapgB,GAAM,MAChD,IAAK,OAAQf,EAAOo1B,SAAW,EAAAjZ,WAAWpb,GAAM,MAChD,IAAK,OAAQf,EAAOyU,MAAQ,EAAA0M,aAAapgB,GAAM,MAC/C,IAAK,OAAQf,EAAOgvB,QAAU,CAAErlB,KAAM5I,EAAI,QAASgH,GAAIhH,EAAIglB,MAAQ,MACnE,IAAK,QAAS/lB,EAAOqzB,MAAQ,CAAE7wB,EAAGzB,EAAIic,KAAM1a,EAAGvB,EAAIkc,MAAQ,MAC3D,IAAK,OAAQjd,EAAO2C,OAAS,CAAEH,EAAG,EAAA2e,aAAapgB,EAAIic,MAAO1a,EAAG,EAAA6e,aAAapgB,EAAIkc,OAAS,MACvF,IAAK,OACL,IAAK,OACJjd,EAAOq1B,QAAU,CAChB1rB,KAAM5I,EAAI,QACVu0B,MAAQv0B,EAAI,QAAkBhB,KAAI,SAAAoC,GAAK,MAAC,CAAEK,EAAGL,EAAE6a,KAAM1a,EAAGH,EAAjB,UAExC,MACD,IAAK,OAAQnC,EAAO6uB,SAAWsC,EAAcpwB,GAAM,MACnD,IAAK,aACL,IAAK,WACL,IAAK,gBACL,IAAK,UACL,IAAK,eACL,IAAK,iBAAkBf,EAAOI,GAAOW,EAAK,MAC1C,QACC6yB,GAAgB1qB,QAAQC,IAAI,wBAAwB/I,EAAG,KAAMW,IAIhE,OAAOf,EAGR,SAASixB,GAAsB0C,EAAU4B,EAAiB3B,GAGzD,IAFA,IAAM5zB,EAAc,GAEC,MAAAC,OAAOC,KAAKyzB,GAAZ,eAAkB,CAAlC,IACEvzB,EADU,KAEVW,EAAM4yB,EAAIvzB,GAEhB,OAAQA,GACP,IAAK,UAAWJ,EAAOkuB,OAASntB,EAAK,MACrC,IAAK,iBAAkBf,EAAOw1B,OAASz0B,EAAK,MAC5C,IAAK,cAAef,EAAOyZ,OAAS1Y,EAAK,MACzC,IAAK,QAASf,EAAOizB,OAASlyB,EAAK,MACnC,IAAK,SAAUf,EAAO8sB,OAAS/rB,EAAK,MACpC,IAAK,SAAUf,EAAOy1B,OAAS10B,EAAK,MACpC,IAAK,UAAWf,EAAO4yB,OAAS7xB,EAAK,MACrC,IAAK,QAASf,EAAO,QAAUsiB,GAAevhB,GAAM,MACpD,IAAK,iBAAkBf,EAAO01B,KAAOpT,GAAevhB,GAAM,MAC1D,IAAK,cAAef,EAAO21B,KAAOrT,GAAevhB,GAAM,MACvD,IAAK,WAAYf,EAAOouB,KAAO,EAAAD,KAAKhtB,OAAOJ,GAAM,MACjD,IAAK,YAAaf,EAAO,QAAU,EAAAihB,KAAK9f,OAAOJ,GAAM,MACrD,IAAK,qBAAsBf,EAAO41B,KAAO,EAAA3U,KAAK9f,OAAOJ,GAAM,MAC3D,IAAK,kBAAmBf,EAAO61B,KAAO,EAAA5U,KAAK9f,OAAOJ,GAAM,MACxD,IAAK,QAASf,EAAO81B,KAAO,EAAA3B,KAAKhzB,OAAOJ,GAAM,MAC9C,IAAK,YAAaf,EAAO+1B,KAAO,EAAA1B,KAAKlzB,OAAOJ,GAAM,MAClD,IAAK,YACY,UAAZw0B,EACHv1B,EAAOu0B,KAAO,EAAAA,KAAKpzB,OAAOJ,GAE1Bf,EAAOg2B,KAAO,EAAAxB,KAAKrzB,OAAOJ,GAE3B,MACD,IAAK,SAAUf,EAAOi2B,KAAO,EAAAvB,KAAKvzB,OAAOJ,GAAM,MAC/C,IAAK,OAAQf,EAAOgmB,KAAO,EAAA2M,KAAKxxB,OAAOJ,GAAM,MAC7C,IAAK,UAAWf,EAAOwuB,KAAO,EAAA7M,aAAa5gB,GAAM,MACjD,IAAK,mBAAoBf,EAAOk2B,KAAO,EAAAvU,aAAa5gB,GAAM,MAC1D,IAAK,gBAAiBf,EAAOm2B,KAAO,EAAAxU,aAAa5gB,GAAM,MACvD,IAAK,QACY,oBAAZw0B,EACHv1B,EAAO8yB,KAAO,EAAAQ,WAAWvyB,GAEzBf,EAAOo2B,KAAO,EAAA9C,WAAWvyB,GAE1B,MACD,IAAK,WAAYf,EAAOq2B,KAAO,EAAA/C,WAAWvyB,GAAM,MAChD,IAAK,SAAUf,EAAOs2B,KAAO,EAAArY,WAAWld,EAAKX,GAAM,MACnD,IAAK,WAAYJ,EAAOu2B,KAAO,EAAA5U,aAAa5gB,GAAM,MAClD,IAAK,OAAQf,EAAOw2B,KAAO,EAAAvY,WAAWld,EAAKX,GAAM,MACjD,IAAK,QAASJ,EAAOy2B,KAAO,EAAA9U,aAAa5gB,GAAM,MAC/C,IAAK,QAASf,EAAO02B,KAAO,EAAA/U,aAAa5gB,GAAM,MAC/C,IAAK,QAASf,EAAO22B,KAAO,EAAA1Y,WAAWld,EAAKX,GAAM,MAClD,IAAK,SAAUJ,EAAO42B,KAAO,EAAAjV,aAAa5gB,GAAM,MAChD,IAAK,WAAYf,EAAO62B,KAAO,EAAA5Y,WAAWld,EAAKX,GAAM,MACrD,IAAK,QAASJ,EAAO,QAAU,EAAA2hB,aAAa5gB,GAAM,MAClD,IAAK,UAAWf,EAAO+uB,KAAO,CAAE,OAAQhuB,EAAI4I,KAAMoc,KAAMhlB,EAAIgH,IAAM,MAClE,IAAK,QAAS/H,EAAOqzB,MAAQ,CAAErW,KAAMjc,EAAIyB,EAAGya,KAAMlc,EAAIuB,GAAK,MAC3D,IAAK,SAAUtC,EAAOmzB,KAAO,CAAEnW,KAAM,EAAA2E,aAAa5gB,EAAIyB,GAAIya,KAAM,EAAA0E,aAAa5gB,EAAIuB,IAAM,MACvF,IAAK,UACJtC,EAAmB,UAAZu1B,EAAsB,OAAS,QAAU,CAC/C,OAASx0B,EAAsB4I,KAC/B,OAAS5I,EAAsBu0B,MAAMv1B,KAAI,SAAAoC,GAAK,MAAC,CAAE6a,KAAM7a,EAAEK,EAAGya,KAAM9a,EAApB,OAE/C,MAED,IAAK,WAAYnC,EAAO4uB,KAAO8D,EAAkB3xB,GAAM,MACvD,IAAK,aACL,IAAK,WACL,IAAK,gBACL,IAAK,UACL,IAAK,eACL,IAAK,iBACJf,EAAOI,GAAOW,EACd,MACD,QACC6yB,GAAgB1qB,QAAQC,IAAI,wBAAwB/I,EAAG,WAAYW,IAItE,OAAOf,EAn9BRiX,EACC,OACA4M,EAAe,iBACf,SAACze,EAAQ+F,EAAQ5D,GAChB,GAA2B,IAAvB,EAAA7B,WAAWN,GAAe,MAAM,IAAIlE,MAAM,wBAE9C,IAAM4V,EAA8B,CACnCpJ,KAAM,eACNopB,aAAc,SAGfhgB,EAAK+b,UAAY,EAAA1tB,UAAUC,GAC3B0R,EAAKiW,SAAW,EAAA5nB,UAAUC,GAC1B0R,EAAKnN,KAAO,EAAAlD,kBAAkBrB,GAC9B0R,EAAK0a,WAAa,GAClB1a,EAAKgb,aAAe,GAIpB,IAFA,IAAMiF,EAAa,EAAArxB,WAAWN,GAErBpD,EAAI,EAAGA,EAAI+0B,EAAY/0B,IAC/B8U,EAAK0a,WAAW1pB,KAAK,CACpB4pB,SAAU,EAAA5rB,WAAWV,GACrBwsB,SAAU,EAAA9rB,WAAWV,GAAU,IAC/B4R,MAAO,EAAA2Q,UAAUviB,KAElB,EAAAyB,UAAUzB,EAAQ,GAGnB,IAAM4xB,EAAoB,EAAAtxB,WAAWN,GAErC,IAASpD,EAAI,EAAGA,EAAIg1B,EAAmBh1B,IACtC8U,EAAKgb,aAAahqB,KAAK,CACtB4pB,SAAU,EAAA5rB,WAAWV,GACrBwsB,SAAU,EAAA9rB,WAAWV,GAAU,IAC/B6C,QAAS,EAAAvC,WAAWN,GAAU,MAKhC,GAAuB,IADA,EAAAM,WAAWN,GACR,MAAM,IAAIlE,MAAM,gCAE1C,IAAM+1B,EAAgB,EAAAvxB,WAAWN,GAIjC,GAHA0R,EAAKya,WAAa0F,EAAgB,KAGnB,KADA,EAAAvxB,WAAWN,GACP,MAAM,IAAIlE,MAAM,uBAEnC4V,EAAKggB,aAAe,EAAApxB,WAAWN,GAAU,QAAU,QACnD0R,EAAKsb,WAAa,EAAAtsB,WAAWV,GAC7B0R,EAAK0b,kBAAoB,EAAA9sB,WAAWN,GACpC0R,EAAKwb,iBAAmB,EAAA5sB,WAAWN,GACnC0R,EAAKkb,UAAY,EAAAlsB,WAAWV,GAAU,KACtC0R,EAAKob,WAAcvE,EAAgB,EAAAjoB,WAAWN,KAAY,MAE1D0R,EAAKpV,IAAM,CACV,EAAAgE,WAAWN,GAAU,MACrB,EAAAM,WAAWN,GAAU,MACrB,EAAAM,WAAWN,GAAU,MACrB,EAAAM,WAAWN,GAAU,OAGtB0R,EAAKnV,IAAM,CACV,EAAA+D,WAAWN,GAAU,MACrB,EAAAM,WAAWN,GAAU,MACrB,EAAAM,WAAWN,GAAU,MACrB,EAAAM,WAAWN,GAAU,OAGtB,EAAAyB,UAAUzB,EAAQmC,KAElB,IAAgB,UAAAuP,EAAK0a,WAAL,eAAe,CAAnB,KAAuBE,UAAYuF,EAC/C,IAAgB,UAAAngB,EAAKgb,aAAL,eAAiB,CAArB,KAAyBJ,UAAYuF,EAEjD9rB,EAAO2Y,WAAahN,KAErB,SAAC3E,EAAQhH,G,UACF2L,EAAO3L,EAAO2Y,WAEpB,EAAAtR,YAAYL,EAAQ,GACpB,EAAAD,WAAWC,EAAQ2E,EAAK+b,QAAU,EAAI,GACtC,EAAA3gB,WAAWC,EAAQ2E,EAAKiW,OAAS,EAAI,GACrC,EAAAjD,8BAA8B3X,EAAQ2E,EAAKnN,MAAQ,IACnD,EAAA6I,YAAYL,EAAQ2E,EAAK0a,YAAc1a,EAAK0a,WAAW1uB,QAAU,GAIjE,IAFA,IAAMm0B,EAAgBtoB,KAAKvC,MAA+B,MAAT,QAAf,EAAA0K,EAAKya,kBAAU,QAAI,IAErC,MAAAza,EAAK0a,YAAc,GAAnB,eAAuB,CAAlC,IAAMtiB,EAAC,KACX,EAAA0D,YAAYT,EAAQxD,KAAKvC,MAAM8C,EAAEwiB,SAAWuF,IAC5C,EAAArkB,YAAYT,EAAQxD,KAAKvC,MAAmB,IAAb8C,EAAE0iB,WACjC,EAAAzJ,WAAWhW,EAAQjD,EAAE8H,OACrB,EAAA7D,WAAWhB,EAAQ,GAGpB,EAAAK,YAAYL,EAAQ2E,EAAKgb,cAAgBhb,EAAKgb,aAAahvB,QAAU,GAErE,IAAgB,UAAAgU,EAAKgb,cAAgB,GAArB,eAAyB,CAA9B5iB,EAAC,KACX,EAAA0D,YAAYT,EAAQxD,KAAKvC,MAAM8C,EAAEwiB,SAAWuF,IAC5C,EAAArkB,YAAYT,EAAQxD,KAAKvC,MAAmB,IAAb8C,EAAE0iB,WACjC,EAAApf,YAAYL,EAAQxD,KAAKvC,MAAkB,IAAZ8C,EAAEjH,UAGlC,EAAAuK,YAAYL,EAAQ,GACpB,EAAAK,YAAYL,EAAQ8kB,GACpB,EAAAzkB,YAAYL,EAAQ,IACpB,EAAAK,YAAYL,EAA8B,UAAtB2E,EAAKggB,aAA2B,EAAI,GACxD,EAAAlkB,YAAYT,EAAQ2E,EAAKsb,YAAc,GACvC,EAAA5f,YAAYL,EAAQ2E,EAAK0b,gBAAkB,EAAI,GAC/C,EAAAhgB,YAAYL,EAAQ2E,EAAKwb,eAAiB,EAAI,GAC9C,EAAA1f,YAAYT,EAAQxD,KAAKvC,MAA8B,MAAT,QAAd,EAAA0K,EAAKkb,iBAAS,QAAI,KAClD,IAAME,EAAavE,EAAgBriB,QAAuB,QAAf,EAAAwL,EAAKob,kBAAU,QAAI,OAC9D,EAAA1f,YAAYL,GAAwB,IAAhB+f,EAAoB,EAAIA,GAE5C,IAAK,IAAIlwB,EAAI,EAAGA,EAAI,EAAGA,IACtB,EAAAwQ,YAAYL,EAAQxD,KAAKvC,MAAuC,OAAhC0K,EAAKpV,KAAOoV,EAAKpV,IAAIM,IAAM,KAE5D,IAASA,EAAI,EAAGA,EAAI,EAAGA,IACtB,EAAAwQ,YAAYL,EAAQxD,KAAKvC,MAAuC,OAAhC0K,EAAKnV,KAAOmV,EAAKnV,IAAIK,IAAM,KAE5D,EAAAmR,WAAWhB,EAAQ,MAqBrB8E,EACC,OACA4M,EAAe,oBACf,SAACze,EAAQ+F,GACR,GAA2B,IAAvB,EAAAzF,WAAWN,GAAe,MAAM,IAAIlE,MAAM,wBAE9C,IAAMg2B,EAAO,EAAAxxB,WAAWN,GAAU,WAAa,WAC/C,EAAAyB,UAAUzB,EAAQ,GAElB+F,EAAO2Y,WAAa,CACnBpW,KAAM,kBACNwpB,KAAI,EACJnM,KAAM6C,EAAoBxoB,GAC1B4lB,QAAS4C,EAAoBxoB,GAC7B6lB,OAAQ2C,EAAoBxoB,GAC5B8lB,MAAO0C,EAAoBxoB,GAC3B+lB,MAAOyC,EAAoBxoB,GAC3BgmB,SAAUwC,EAAoBxoB,GAC9B+xB,OAAQvJ,EAAoBxoB,GAC5BgyB,SAAUxJ,EAAoBxoB,GAC9BiyB,OAAQzJ,EAAoBxoB,OAG9B,SAAC+M,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO2Y,WAEpB,EAAAtR,YAAYL,EAAQ,GACpB,EAAAK,YAAYL,EAAsB,aAAd2E,EAAKogB,KAAsB,EAAI,GACnD,EAAA/jB,WAAWhB,EAAQ,GACnB0b,EAAqB1b,EAAQ2E,EAAKiU,MAClC8C,EAAqB1b,EAAQ2E,EAAKkU,SAClC6C,EAAqB1b,EAAQ2E,EAAKmU,QAClC4C,EAAqB1b,EAAQ2E,EAAKoU,OAClC2C,EAAqB1b,EAAQ2E,EAAKqU,OAClC0C,EAAqB1b,EAAQ2E,EAAKsU,UAClCyC,EAAqB1b,EAAQ2E,EAAKqgB,QAClCtJ,EAAqB1b,EAAQ2E,EAAKsgB,UAClCvJ,EAAqB1b,EAAQ2E,EAAKugB,WAgCpCpgB,EACC,QACA,SAAA9L,GACC,IAAMpE,EAAIoE,EAAO2Y,WAEjB,QAAK/c,IAEc,wBAAXA,EAAE2G,OAAmC3G,EAAEwjB,YACjC,WAAXxjB,EAAE2G,MAAgC,WAAX3G,EAAE2G,MAAgC,aAAX3G,EAAE2G,MAAkC,kBAAX3G,EAAE2G,MAC/D,mBAAX3G,EAAE2G,YAAmDxJ,IAArB6C,EAAE+kB,mBAErC,SAAC1mB,EAAQ+F,EAAQ5D,GAChB,IAAM6T,EAAO,EAAArC,yBAAyB3T,GAEtC,GAAkB,IAAdgW,EAAKkc,KAAY,MAAM,IAAIp2B,MAAM,wBAIpCiK,EAAO2Y,WADJ,mBAAoB1I,EACN,OACbjQ,EAAO2Y,YAA6E,CACvF8H,WAAYxQ,EAAKwQ,WACjBE,eAAgB1Q,EAAK0Q,iBAEZ,yBAA0B1Q,EACnB,OACbjQ,EAAO2Y,YAA8B,CACxC8H,WAAYxQ,EAAKmc,iBACjBzL,eAAgB1Q,EAAKoc,uBAEZ,wBAAyBpc,EAClB,OACbjQ,EAAO2Y,YAA8B,CACxC8H,WAAYxQ,EAAKqc,gBACjB3L,eAAgB1Q,EAAKsc,sBAGF,CACnBhqB,KAAM,sBACNyc,WAAY/O,EAAKoY,KACjBpJ,SAAUhP,EAAKuc,KACftN,UAAWjP,EAAKwc,MAChBrN,YAAanP,EAAKmP,UAClBD,eAAgBlP,EAAK,QACrByc,OAAQzc,EAAK0c,MAIf,EAAAjxB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,G,YACF2L,EAAO3L,EAAO2Y,WAEpB,GAAkB,WAAdhN,EAAKpJ,MAAmC,aAAdoJ,EAAKpJ,MAAqC,mBAAdoJ,EAAKpJ,KAA2B,CACzF,IAAM0N,EAAyB,CAC9Bkc,KAAM,EACN1L,WAA2B,QAAf,EAAA9U,EAAK8U,kBAAU,QAAI,EAC/BE,eAAgBhV,EAAKgV,gBAAkB,IAExC,EAAAlR,0BAA0BzI,EAAQ,GAAI,OAAQiJ,QACxC,GAAkB,WAAdtE,EAAKpJ,KAAmB,CAC5B0N,EAA+B,CACpCkc,KAAM,EACNC,iBAAiC,QAAf,EAAAzgB,EAAK8U,kBAAU,QAAI,EACrC4L,qBAAsB1gB,EAAKgV,gBAAkB,IAE9C,EAAAlR,0BAA0BzI,EAAQ,GAAI,OAAQiJ,QACxC,GAAkB,kBAAdtE,EAAKpJ,KAA0B,CACnC0N,EAA8B,CACnCkc,KAAM,EACNG,gBAAgC,QAAf,EAAA3gB,EAAK8U,kBAAU,QAAI,EACpC8L,oBAAqB5gB,EAAKgV,gBAAkB,IAE7C,EAAAlR,0BAA0BzI,EAAQ,GAAI,OAAQiJ,OACxC,IAAkB,wBAAdtE,EAAKpJ,KAYf,MAAM,IAAIxM,MAAM,uBAXVka,EAAqC,CAC1Ckc,KAAM,EACN9D,KAAM1c,EAAKqT,YAAc,EACzBwN,KAAM7gB,EAAKsT,UAAY,EACvBwN,MAAqB,QAAd,EAAA9gB,EAAKuT,iBAAS,QAAI,IACzB,SAAUvT,EAAKwT,aACfC,YAAazT,EAAKyT,UAClBuN,OAAQhhB,EAAK+gB,MAEd,EAAAjd,0BAA0BzI,EAAQ,GAAI,OAAQiJ,OAOjDnE,EACC,OACAE,EAAO,eACP,SAAC/R,EAAQ+F,EAAQ5D,GAChB,IAAM3F,EAAO,EAAAsE,UAAUd,EAAQmC,KAC/B4D,EAAOmP,WAAa,EAAA3V,cAAc/C,MAMnC,SAACuQ,EAAQhH,GACR,IAAMlJ,EAAS,EAAA6O,YAAY3F,EAAOmP,YAClC,EAAAtH,WAAWb,EAAQlQ,MAIrBgV,EACC,OACAE,EAAO,eACP,SAAC/R,EAAQ+F,GACRA,EAAO4sB,WAAa,CACnBC,WAAY,EAAArQ,UAAUviB,GACtB6C,QAAS,EAAAvC,WAAWN,GAAU,QAGhC,SAAC+M,EAAQhH,G,MACR,EAAAgd,WAAWhW,EAAQhH,EAAO4sB,WAAYC,YACtC,EAAAxlB,YAAYL,EAAuD,IAA/C,EAAAoE,MAAgC,QAA1B,EAAApL,EAAO4sB,WAAY9vB,eAAO,QAAI,EAAG,EAAG,OAgBhEgP,EACC,QACA,SAAA9L,GAAU,gBAACA,EAAegU,aAC1B,SAAC/Z,EAAQ+F,EAAQ5D,GAChB,IAAM6T,EAAO,EAAArC,yBAAyB3T,GACrC+F,EAAegU,UAAY,CAC3Bxb,MAAOyX,EAAK,QACZ6c,iBAAkB,CAAEC,WAAY9c,EAAK6c,iBAAiBjb,KAAMmb,SAAU/c,EAAK6c,iBAAiBhb,MAC5Fmb,OAAQ,CAAEF,WAAY9c,EAAKgd,OAAOpb,KAAMmb,SAAU/c,EAAKgd,OAAOnb,MAC9Dob,kBAAmBjd,EAAKid,kBACxBC,gBAAiBld,EAAKkd,gBACtBC,oBAAqBnd,EAAKmd,oBAC1BC,wBAAyBpd,EAAKod,wBAC9BC,qCAAsCtW,GAAW/G,EAAKqd,sCACtDC,oCAAqCtd,EAAKsd,qCAG3C,EAAA7xB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,G,cACFwtB,EAAQxtB,EAAegU,UACvB/D,EAAuB,CAC5B,OAAQud,EAAKh1B,MACbs0B,iBAAkBU,EAAKV,iBAAmB,CAAEjb,KAAM2b,EAAKV,iBAAiBC,WAAYjb,KAAM0b,EAAKV,iBAAiBE,UAAa,CAAEnb,KAAM,EAAGC,KAAM,GAC9Imb,OAAQO,EAAKP,OAAS,CAAEpb,KAAM2b,EAAKP,OAAOF,WAAYjb,KAAM0b,EAAKP,OAAOD,UAAa,CAAEnb,KAAM,EAAGC,KAAM,GACtGob,kBAAyC,QAAtB,EAAAM,EAAKN,yBAAiB,SACzCC,gBAAqC,QAApB,EAAAK,EAAKL,uBAAe,SACrCC,oBAA6C,QAAxB,EAAAI,EAAKJ,2BAAmB,SAC7CC,wBAAqD,QAA5B,EAAAG,EAAKH,+BAAuB,SACrDC,qCAAsCnW,GAAeqW,EAAKF,sCAC1DC,oCAA6E,QAAxC,EAAAC,EAAKD,2CAAmC,QAAI,GAElF,EAAA9d,0BAA0BzI,EAAQ,GAAI,OAAQiJ,EAAM,WAyJtD,oBAIAnE,EACC,QACA,SAAA9L,GAAU,YAAmBjH,IAAnBiH,EAAOsL,UAA0BC,EAAgBvL,EAAjD,YACV,SAAC/F,EAAQ+F,EAAQ5D,EAAM6W,EAAGhX,GAEzB,GAAgB,IADA,EAAAtB,WAAWV,GACR,MAAM,IAAIlE,MAAM,wBAEnC,IAAMka,EAAuB,EAAArC,yBAAyB3T,GAKtD+F,EAAOsL,QAAU4H,EAAajD,IAAQhU,EAAQ6B,oBAE9C,EAAApC,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,EAAQiT,EAAGhX,GACnB,IAAMgU,EAAOkD,EAAiBnT,EAAOsL,UAAYrP,EAAQ6B,oBAAoB,GAG7E,EAAA2J,YAAYT,EAAQ,GACpB,EAAAyI,0BAA0BzI,EAAQ,GAAI,OAAQiJ,MAiBhDnE,EACC,OACAE,EAAO,mBACP,SAAC/R,EAAQ+F,EAAQ5D,GAChB,IAAM6T,EAAO,EAAArC,yBAAyB3T,GAGtC+F,EAAOytB,eAAiB,CACvBC,YAAazd,EAAKyd,YAClBC,OAAQ1d,EAAK0d,OACbC,OAAQ3d,EAAK4d,KAAK/3B,MAAM,KAAK,GAC7Bg4B,eAAgB7d,EAAK6d,eAAeh4B,MAAM,KAAK,GAC/Ci4B,kBAAmB9d,EAAK8d,kBAAkBj4B,MAAM,KAAK,GACrDk4B,gBAAiB/d,EAAK+d,gBAAgBl4B,MAAM,KAAK,GACjDm4B,mBAAoBhe,EAAKge,mBAAmBn4B,MAAM,KAAK,IAGxD,EAAA4F,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAMkuB,EAAOluB,EAAOytB,eACdxd,EAAuB,CAC5Bkc,KAAM,CAAE/P,MAAO,EAAGC,MAAO,EAAG8R,IAAK,GAEjCT,YAAaQ,EAAKR,YAClBC,OAAQO,EAAKP,OACbE,KAAM,QAAQK,EAAKN,OACnBE,eAAgB,UAAUI,EAAKJ,eAC/BC,kBAAmB,UAAUG,EAAKH,kBAElCC,gBAAiB,UAAUE,EAAKF,gBAChCC,mBAAoB,UAAUC,EAAKD,oBAEpC,EAAAxe,0BAA0BzI,EAAQ,GAAI,OAAQiJ,MAKhDnE,EACC,QACA,SAAA9L,GAAU,gBAACA,EAAeouB,SAC1B,SAACn0B,EAAQ+F,GACR,IAAMiQ,EAAsB,EAAArC,yBAAyB3T,GAGjD,EAAA/E,gBAAgB8K,EAAeouB,MAAQne,MAE5C,SAACjJ,EAAQhH,GAEJ,EAAA9K,eAAe,EAAAua,0BAA0BzI,EAAQ,GAAI,OAAShH,EAAeouB,UAInFtiB,EACC,OACAE,EAAO,gBACP,SAAC/R,EAAQ+F,GACRA,EAAOquB,YAAc,EAAAr0B,UAAUC,GAAU,IACzC,EAAAyB,UAAUzB,EAAQ,MAEnB,SAAC+M,EAAQhH,GACR,EAAA+G,WAAWC,EAA8B,IAAtBhH,EAAOquB,aAC1B,EAAArmB,WAAWhB,EAAQ,MAIrB8E,EACC,OACAE,EAAO,4BACP,SAAC/R,EAAQ+F,GACRA,EAAOsuB,0BAA4B,EAAAt0B,UAAUC,GAC7C,EAAAyB,UAAUzB,EAAQ,MAEnB,SAAC+M,EAAQhH,GACR,EAAA+G,WAAWC,EAAQhH,EAAOsuB,wBAA0B,EAAI,GACxD,EAAAtmB,WAAWhB,EAAQ,O,6jBCnpFrB,YAKA,QAIA,QAeA,IAAMunB,EAAiB,CACtB,OAAQ,QACR,OAAQ,UACR,OAAQ,WACR,OAAQ,OACR,OAAQ,UACR,OAAQ,SACR,OAAQ,cACR,OAAQ,SACR,KAAQ,QACR,KAAQ,SACR,KAAQ,eAGHC,EApBN,SAAgB55B,GACf,IAAMC,EAAe,GAErB,OADAC,OAAOC,KAAKH,GAAKI,SAAQ,SAAAC,GAAO,OAAAJ,EAAOD,EAAIK,IAAX,KACzBJ,EAiBYF,CAAO45B,GACvBE,GAAY,EAMhB,SAASC,EAASlwB,EAAcmwB,GAC/B,MAAO,CAAEnwB,KAAI,EAAEmwB,QAAO,GALvB,wBAA6B94B,GAC5B44B,EAAY54B,GA8Ib,IAvIA,IAAM+4B,EAA8B,CACnCzY,mBAAoBuY,EAAS,GAAI,mBAEjCG,gBAAiBH,EAAS,cAAe,cACzCtJ,YAAasJ,EAAS,GAAI,eAC1BjL,KAAMiL,EAAS,WAAY,QAC3B3J,KAAM2J,EAAS,GAAI,QACnBzJ,KAAMyJ,EAAS,GAAI,QACnBpJ,KAAMoJ,EAAS,GAAI,QACnBlE,KAAMkE,EAAS,GAAI,QACnBnE,KAAMmE,EAAS,GAAI,QACnB,OAAQA,EAAS,GAAI,QACrB,UAAaA,EAAS,GAAI,QAC1B1G,KAAM0G,EAAS,GAAI,QACnBjJ,KAAMiJ,EAAS,GAAI,QACnBI,KAAMJ,EAAS,GAAI,QACnBtK,KAAMsK,EAAS,GAAI,QACnBlK,KAAMkK,EAAS,GAAI,QACnB/J,KAAM+J,EAAS,GAAI,QACnB7J,KAAM6J,EAAS,GAAI,QACnBK,KAAML,EAAS,GAAI,QACnB9K,KAAM8K,EAAS,GAAI,QACnB1K,KAAM0K,EAAS,GAAI,QACnBxG,MAAOwG,EAAS,GAAI,QACpBhT,UAAWgT,EAAS,GAAI,QACxB7S,SAAU6S,EAAS,GAAI,QACvBtpB,OAAQspB,EAAS,GAAI,QACrB7W,mBAAoB6W,EAAS,GAAI,sBACjC7gB,KAAM6gB,EAAS,GAAI,QACnB,OAAQA,EAAS,GAAI,QACrBzB,OAAQyB,EAAS,GAAI,QACrB5B,iBAAkB4B,EAAS,GAAI,QAC/B5d,mBAAoB4d,EAAS,GAAI,YACjCvC,KAAMuC,EAAS,GAAI,QACnBM,UAAWN,EAAS,GAAI,QACxBpB,qCAAsCoB,EAAS,GAAI,QACnDhY,aAAcgY,EAAS,GAAI,kBAC3Brd,oBAAqBqd,EAAS,GAAI,SAClC/c,oBAAqB+c,EAAS,GAAI,QAClC9c,iBAAkB8c,EAAS,GAAI,QAC/B3c,iBAAkB2c,EAAS,GAAI,QAC/B1c,iBAAkB0c,EAAS,GAAI,QAC/Bzc,iBAAkByc,EAAS,GAAI,QAC/BnT,SAAUmT,EAAS,GAAI,QACvBvc,KAAMuc,EAAS,YAAa,QAC5BzT,UAAWyT,EAAS,GAAI,aACxBO,kBAAmBP,EAAS,GAAI,QAChCQ,MAAOR,EAAS,GAAI,SAGfS,EAAmC,CACxC,OAAQT,EAAS,GAAI,QACrBpI,KAAMoI,EAAS,GAAI,QACnB9H,KAAM8H,EAAS,GAAI,QACnBje,kBAAmBie,EAAS,GAAI,QAChCvJ,eAAgBuJ,EAAS,GAAI,QAC7BlJ,kBAAmBkJ,EAAS,GAAI,QAChCnK,gBAAiBmK,EAAS,GAAI,QAC9BhK,iBAAkBgK,EAAS,GAAI,QAC/B/I,aAAc+I,EAAS,GAAI,SAGtBU,EAA4C,CACjD,KAAQ,CACP,OAAQ,cAAe,OAAQ,OAAQ,8BAA+B,gBACtE,iBAAkB,uBAAwB,sBAAuB,SAAU,cAAe,SAC1F,qBAAsB,QAEvB,KAAQ,CAAC,aAAc,iBACvB,KAAQ,CACP,YAAa,OAAQ,OAAQ,OAAQ,OAAQ,qBAAsB,OAAQ,OAAQ,OACnF,OAAQ,OAAQ,QAAS,WAAY,OAAQ,eAAgB,aAAc,OAAQ,SAAU,iBAC7F,mBAAoB,kBAAmB,SAAU,SAAU,OAAQ,aAAc,OACjF,YAAa,cAAe,aAAc,OAAQ,gBAAiB,uBACnE,iBAAkB,QAAS,QAAS,MAAO,sCAAuC,yBAClF,iBAAkB,gBAAiB,iBAEpC,KAAQ,CACP,eAAgB,OAAQ,YAAa,aAAc,OAAQ,OAAQ,OACnE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChE,yBAA0B,0BAA2B,2BACrD,uBAAwB,OAAQ,OAAQ,aAAc,YAAa,YACnE,aAAc,iBAAkB,oBAAqB,kBAAmB,qBAAsB,OAC9F,yBAED,KAAQ,CACP,OAAQ,kBAAmB,iBAAkB,OAAQ,OAAQ,iBAC7D,WAAY,aAAc,iBAAkB,OAAQ,iBAAkB,WACtE,aAAc,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,gBAC9D,gBAAiB,cAAe,uBAAwB,0BACxD,YAAa,OAAQ,aAAc,YAAa,OAAQ,OAAQ,UAAW,sBAC3E,oBAAqB,kBAAmB,sBAAuB,0BAC/D,UAAW,eAAgB,aAE5B,KAAQ,CACP,YAAa,kBAAmB,uBAAwB,OAAQ,OAAQ,OACxE,wBAAyB,wBAAyB,YAAa,sBAC/D,KAAM,KAAM,KAAM,KAAM,KAAM,MAE/B,KAAQ,CACP,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAChF,OAAQ,OAAQ,OAAQ,OAAQ,uBAAwB,4BACxD,qBAAsB,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAC9D,WAAY,UAAW,aAAc,eAEtC,KAAQ,CACP,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,WAAY,yBAA0B,OAC9E,OAAQ,OAAQ,qBAAsB,oBAAqB,eAAgB,oBAC3E,iBAAkB,eAAgB,mBAAoB,mBAEvD,KAAQ,CAAC,aAAc,cAAe,eACtC,OAAQ,CAAC,SAGJ5yB,EAAW,CAChB,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAGnF6yB,EAAyB,CAC9B,OAAQ,OACR,OAAQ,OACR,KAAQ,OACR,uBAA0B,OAC1B,KAAQ,OACR,mBAAsB,OACtB,kBAAqB,OACrB,kBAAqB,OACrB,eAAkB,OAClB,aAAgB,OAChB,iBAAoB,OACpB,gBAAmB,QAGdC,EAAoB,GAEP,MAAAx6B,OAAOC,KAAKq6B,GAAZ,eAClB,IADI,IAAM7sB,EAAI,KACM,MAAA6sB,EAAY7sB,GAAZ,eAAmB,CAAlC,IAAMgtB,EAAK,KACfD,EAAYC,GAAShtB,EAIvB,IAAoB,UAAAzN,OAAOC,KAAK65B,GAAZ,eAA6B,CAAtCW,EAAK,KACVD,EAAYC,KAAQD,EAAYC,GAAS,QAG/C,IAAoB,UAAAz6B,OAAOC,KAAKo6B,GAAZ,eAAkC,CAA3CI,EAAK,KACfF,EAAiBE,GAAS,OAG3B,SAASC,EAAav6B,EAAaY,EAAY45B,GAC9C,MAAY,SAARx6B,EACK,SAAUY,EAAS,OAAW,UAAWA,EAAS,OAAS,OACjD,SAARZ,EACc,kBAAVY,EAAqB,OAAS,OAC1B,SAARZ,EACc,kBAAVY,EAAqB,OAAS,OAC1B,SAARZ,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,GAA0B,SAARA,EAC5E,kBAAVY,EAAqB,OAAS,OAC1B,SAARZ,EACc,kBAAVY,EAAqB,OAAS,OAC1B,SAARZ,GAA0B,SAARA,GAA0B,SAARA,EAC9B,SAATw6B,EAAkB,OAAS,OAChB,SAARx6B,EACH2R,MAAMif,QAAQhwB,GAAS,OAAS,OAEhCy5B,EAAYr6B,GAIrB,SAAgBy6B,EAAyBz1B,GACxC,IAAMtC,EAAS,EAAA8C,UAAUR,GACzB,OAAO,EAAA2iB,gBAAgB3iB,EAAQtC,GAAU,GAG1C,SAASg4B,EAA0B3oB,EAAmBnR,GACrD,GAAqB,IAAjBA,EAAM8B,QAA0B,SAAV9B,EAEzB,EAAA0R,WAAWP,EAAQ,GACnB,EAAAiB,eAAejB,EAAQnR,OACjB,CAEN,EAAA0R,WAAWP,EAAQnR,EAAM8B,QAEzB,IAAK,IAAId,EAAI,EAAGA,EAAIhB,EAAM8B,OAAQd,IACjC,EAAAkQ,WAAWC,EAAQnR,EAAMsQ,WAAWtP,KAKvC,SAAgB+4B,EAAwB31B,GACvC,IAAM41B,EAAc,GAEpBC,EAAmB71B,GAGnB,IAFA,IAAM81B,EAAa,EAAAp1B,WAAWV,GAErBpD,EAAI,EAAGA,EAAIk5B,EAAYl5B,IAAK,CACpC,IAAM5B,EAAMy6B,EAAyBz1B,GAG/BxD,EAAOu5B,EAAW/1B,EAFX,EAAAgB,cAAchB,IAI3B41B,EAAO56B,GAAOwB,EAGf,OAAOo5B,EAGR,SAAgBI,EAAyBjpB,EAAmBxI,EAAc0xB,EAAiBr6B,EAAY45B,GAClGhB,IAAcyB,GAASnyB,QAAQC,IAAI,wBAAyBQ,EAAM0xB,EAASr6B,GAG/E,EAAA8oB,8BAA8B3X,EAAQxI,GACtCmxB,EAA0B3oB,EAAQkpB,GAElC,IAAMn7B,EAAOD,OAAOC,KAAKc,GACzB,EAAA4R,YAAYT,EAAQjS,EAAK4C,QAEzB,IAAkB,UAAA5C,EAAA,eAAM,CAAnB,IAAME,EAAG,KACTsN,EAAOitB,EAAav6B,EAAKY,EAAMZ,GAAMw6B,GACrCU,EAAUvB,EAAe35B,GAEhB,SAARA,GAA0B,SAARA,KAAmB,SAAUY,IAEd,IAA3B2G,EAAS2D,QAAQlL,GAC3BsN,EAAoB,SAAZ2tB,GAA+B,SAATT,EAAmB,OAAS,OACxC,YAARx6B,EACVsN,EAAmB,gBAAZ2tB,EAA4B,OAAS,OAC1B,uBAARj7B,EACNY,EAAMZ,GAAK,QACdk7B,EAAUzB,EAAS,GAAI,mBACb74B,EAAMZ,GAAKwuB,KACrB0M,EAAUzB,EAAS,GAAI,iBACb74B,EAAMZ,GAAK2uB,KACrBuM,EAAUzB,EAAS,GAAI,gBAEvBD,GAAa1wB,QAAQC,IAAI,mCAAoCnI,EAAMZ,IAElD,WAARA,GAA6B,cAATw6B,IAC9BU,EAAUzB,EAAS,GAAI,mBAhBvBnsB,EAAO,OAmBJ4tB,GAA+B,SAApBA,EAAQxB,SAClB,SAAU94B,EAAMZ,KAAMk7B,EAAU,CAAExB,QAAS,OAAQnwB,KAAM,KAI9DmxB,EAA0B3oB,EAAQ/R,GAClC,EAAAgT,eAAejB,EAAQzE,GAAQ,QAC/B6tB,EAAYppB,EAAQzE,GAAQ,OAAQ1M,EAAMZ,GAAMA,EAAKk7B,EAASV,GAC1DhB,IAAclsB,GAAMxE,QAAQC,IAAI,uCAAuC/I,EAAG,OAAQY,IAIxF,SAASm6B,EAAW/1B,EAAmBsI,GACtC,OAAQA,GACP,IAAK,OACJ,OAyLH,SAAgCtI,GAI/B,IAHA,IAAM81B,EAAa,EAAAt1B,UAAUR,GACvBo2B,EAAe,GAEZx5B,EAAI,EAAGA,EAAIk5B,EAAYl5B,IAAK,CACpC,IAAM0L,EAAO,EAAAtH,cAAchB,GAE3B,OAAQsI,GACP,IAAK,OACJutB,EAAmB71B,GACnB,IAAMq2B,EAAQZ,EAAyBz1B,GACvCo2B,EAAM1zB,KAAK2zB,GACX,MAED,IAAK,OACJD,EAAM1zB,KAAKmzB,EAAmB71B,IAC9B,MACD,IAAK,OACJ61B,EAAmB71B,GACnB,IAAMs2B,EAASb,EAAyBz1B,GAClCpE,EAAQ65B,EAAyBz1B,GACvCo2B,EAAM1zB,KAAQ4zB,EAAM,IAAI16B,GACxB,MAED,IAAK,OAEJi6B,EAAmB71B,GACnBo2B,EAAM1zB,KAAK,EAAAhC,WAAWV,IACtB,MAED,IAAK,OAGL,IAAK,OACJo2B,EAAM1zB,KAAK,EAAAlC,UAAUR,IACrB,MACD,IAAK,OACJ61B,EAAmB71B,GACnBo2B,EAAM1zB,KAAK,EAAArB,kBAAkBrB,IAC7B,MAED,QACC,MAAM,IAAIlE,MAAM,sCAAsCwM,IAIzD,OAAO8tB,EAvOEG,CAAuBv2B,GAC/B,IAAK,OACL,IAAK,OACJ,OAAO21B,EAAwB31B,GAChC,IAAK,OAIJ,IAHA,IAAM,EAAS,EAAAQ,UAAUR,GACnBo2B,EAAe,GAEZx5B,EAAI,EAAGA,EAAI,EAAQA,IAAK,CAChC,IAAM,EAAO,EAAAoE,cAAchB,GAE3Bo2B,EAAM1zB,KAAKqzB,EAAW/1B,EAAQ,IAG/B,OAAOo2B,EAER,IAAK,OACJ,OAAO,EAAAx1B,YAAYZ,GACpB,IAAK,OACJ,IAAMsc,EAAQ,EAAAtb,cAAchB,GACtBpE,EAAQ,EAAAgF,YAAYZ,GAC1B,IAAKs0B,EAAShY,GAAQ,MAAM,IAAIxgB,MAAM,kBAAkBwgB,GACxD,MAAO,CAAEA,MAAOgY,EAAShY,GAAQ1gB,MAAK,GAEvC,IAAK,OACE0gB,EAAQ,EAAAtb,cAAchB,GACtBpE,EAAQ,EAAAiY,YAAY7T,GAC1B,IAAKs0B,EAAShY,GAAQ,MAAM,IAAIxgB,MAAM,kBAAkBwgB,GACxD,MAAO,CAAEA,MAAOgY,EAAShY,GAAQ1gB,MAAK,GAEvC,IAAK,OACJ,OAAO,EAAAyF,kBAAkBrB,GAC1B,IAAK,OAGJ,OAFay1B,EAAyBz1B,GAExB,KADRpE,EAAQ65B,EAAyBz1B,IAGxC,IAAK,OACJ,OAAO,EAAAQ,UAAUR,GAClB,IAAK,OAGJ,MAAO,CAAEw2B,IAFG,EAAA91B,WAAWV,GAETy2B,KADD,EAAA/1B,WAAWV,IAGzB,IAAK,OACJ,QAAS,EAAAD,UAAUC,GACpB,IAAK,OACL,IAAK,OACJ,OAAO61B,EAAmB71B,GAC3B,IAAK,OACJ,IAAM,EAAS,EAAAQ,UAAUR,GACzB,OAAO,EAAA2iB,gBAAgB3iB,EAAQ,GAEhC,IAAK,OACJ,IAAM,EAAS,EAAAQ,UAAUR,GACzB,OAAO,EAAAc,UAAUd,EAAQ,GAE1B,IAAK,OACJ,EAAAQ,UAAUR,GACV,EAAAqB,kBAAkBrB,GAClBy1B,EAAyBz1B,GACzB,IAAM,EAAS,EAAAQ,UAAUR,GAGzB,IAFMo2B,EAAe,GAEZx5B,EAAI,EAAGA,EAAI,EAAQA,IAAK,CAChC,IAAM85B,EAAQjB,EAAyBz1B,GACvC,EAAAgB,cAAchB,GAEd,EAAAgB,cAAchB,GAGd,IAFA,IAAM22B,EAAc,EAAAn2B,UAAUR,GACxBge,EAAmB,GAChBjX,EAAI,EAAGA,EAAI4vB,EAAa5vB,IAChCiX,EAAOtb,KAAK,EAAA9B,YAAYZ,IAGzBo2B,EAAM1zB,KAAK,CAAE4F,KAAMouB,EAAO1Y,OAAM,IAGjC,OAAOoY,EAER,IAAK,OACe,EAAA51B,UAAUR,GAC7B,IAAMgG,EAAM,EAAAhF,cAAchB,GACL,EAAA42B,YAAY52B,GACjC,IAAM62B,EAAa,EAAAD,YAAY52B,GAE/B,MAAO,CAAEgG,IAAG,EAAE8M,KADD,EAAAxR,4BAA4BtB,EAAQ62B,IAGlD,QACC,MAAM,IAAI/6B,MAAM,mCAAmCwM,EAAI,OAAOtI,EAAOzC,OAAOsE,SAAS,MAhLxF,6BAoBA,4BAkBA,6BA8IA,IAAMi1B,EAAoD,CACzDjZ,WAAY,gBACZK,YAAa,OACbC,YAAa,QAGd,SAASgY,EAAYppB,EAAmBzE,EAAc1M,EAAYZ,EAAak7B,EAAkCV,GAChH,OAAQltB,GACP,IAAK,QAqIP,SAAiCyE,EAAmBgqB,EAAcX,GACjE,EAAA9oB,WAAWP,EAAQqpB,EAAM14B,QAEzB,IAAK,IAAId,EAAI,EAAGA,EAAIw5B,EAAM14B,OAAQd,IAAK,CACtC,IAAMhB,EAAQw6B,EAAMx5B,GAChB0L,EAAO,UAYX,OAVqB,kBAAV1M,IAET0M,EADG,oBAAoB0uB,KAAKp7B,GACrB,OAEA,QAIT,EAAAoS,eAAejB,EAAQzE,GAEfA,GAGP,IAAK,OACE,MAAsB1M,EAAMC,MAAM,KAAjCy6B,EAAM,KAAEW,EAAS,KACxBC,EAAoBnqB,EAAQ,KAAMupB,GAClCZ,EAA0B3oB,EAAQupB,GAClCZ,EAA0B3oB,EAAQkqB,GAClC,MAKD,IAAK,OACJC,EAAoBnqB,EAAQ,KAAM,QAClC,EAAAsM,mBAAmBtM,EAAQnR,EAAQ,MACnC,MAED,QACC,MAAM,IAAIE,MAAM,sCAAsCwM,KAxKvD6uB,CAAwBpqB,EAAQ/R,EAAKY,GACrC,MACD,IAAK,OACL,IAAK,OACJ,IAAKs6B,EAAS,MAAM,IAAIp6B,MAAM,0BAA0Bd,EAAG,MAAMo8B,KAAKC,UAAUz7B,GAAM,KACtFo6B,EAAyBjpB,EAAQmpB,EAAQ3xB,KAAM2xB,EAAQxB,QAAS94B,EAAO45B,GACvE,MACD,IAAK,OACJ,EAAAloB,WAAWP,EAAQnR,EAAM8B,QAEzB,IAAK,IAAId,EAAI,EAAGA,EAAIhB,EAAM8B,OAAQd,IAAK,CACtC,IAAM,EAAOw4B,EAAiBp6B,GAC9B,EAAAgT,eAAejB,EAAQ,GAAQ,QAC/BopB,EAAYppB,EAAQ,GAAQ,OAAQnR,EAAMgB,GAAI,GAAIs4B,EAAoBl6B,GAAMw6B,GACxEhB,IAAc,GAAM1wB,QAAQC,IAAI,uCAAuC/I,EAAG,OAAQY,GAEvF,MACD,IAAK,OACJ,EAAA8R,aAAaX,EAAQnR,GACrB,MACD,IAAK,OACJ,IAAK24B,EAAY34B,EAAM0gB,OAAQ,MAAM,IAAIxgB,MAAM,kBAAkBF,EAAM0gB,MAAK,OAAOthB,GACnF,EAAAgT,eAAejB,EAAQwnB,EAAY34B,EAAM0gB,QACzC,EAAA5O,aAAaX,EAAQnR,EAAMA,OAC3B,MACD,IAAK,OACJ,IAAK24B,EAAY34B,EAAM0gB,OAAQ,MAAM,IAAIxgB,MAAM,kBAAkBF,EAAM0gB,MAAK,OAAOthB,GACnF,EAAAgT,eAAejB,EAAQwnB,EAAY34B,EAAM0gB,QACzC,EAAA5G,aAAa3I,EAAQnR,EAAMA,OAC3B,MACD,IAAK,OACJ,EAAA8oB,8BAA8B3X,EAAQnR,GACtC,MACD,IAAK,OACE,MAAeA,EAAMC,MAAM,KAA1By7B,EAAK,KAAE37B,EAAG,KACjB+5B,EAA0B3oB,EAAQuqB,GAClC5B,EAA0B3oB,EAAQpR,GAClC,MAED,IAAK,OACJ,EAAA2R,WAAWP,EAAQnR,GACnB,MAGD,IAAK,OACJ,EAAAkR,WAAWC,EAAQnR,EAAQ,EAAI,GAC/B,MAMD,IAAK,OACJ,EAAA0R,WAAWP,EAAQnR,EAAMyO,YACzB,EAAAuD,WAAWb,EAAQnR,GACnB,MACD,IAAK,OACJ,EAAA0R,WAAWP,EAAQ,IACnB,EAAA2X,8BAA8B3X,EAAQ,IACtC,IAAM,EAAO+pB,EAAU97B,GACvB,IAAK,EAAM,MAAM,IAAIc,MAAM,iCAAiCd,GAC5D06B,EAA0B3oB,EAAQ,GAClC,EAAAO,WAAWP,EAAQnR,EAAM8B,QAEzB,IAASd,EAAI,EAAGA,EAAIhB,EAAM8B,OAAQd,IAAK,CACtC84B,EAA0B3oB,EAAQnR,EAAMgB,GAAG0L,MAC3C,EAAA0F,eAAejB,EAAQ,QACvB,EAAAiB,eAAejB,EAAQ,QACvB,EAAAO,WAAWP,EAAQnR,EAAMgB,GAAGohB,OAAOtgB,QAEnC,IAAK,IAAIqJ,EAAI,EAAGA,EAAInL,EAAMgB,GAAGohB,OAAOtgB,OAAQqJ,IAC3C,EAAA2G,aAAaX,EAAQnR,EAAMgB,GAAGohB,OAAOjX,IAGvC,MAID,QACC,MAAM,IAAIjL,MAAM,sCAAsCwM,IAgGzD,SAASutB,EAAmB71B,GAI3B,MAAO,CAAEuE,KAHI,EAAAlD,kBAAkBrB,GAGhB00B,QAFCe,EAAyBz1B,IAK1C,SAASk3B,EAAoBnqB,EAAmBxI,EAAcmwB,GAC7D,EAAArb,mBAAmBtM,EAAQxI,GAC3BmxB,EAA0B3oB,EAAQ2nB,GA4LnC,SAAgB3d,EAAW,G,IAAEuF,EAAK,QAAE1gB,EAAK,QACxC,GACW,WAAV0gB,GAAgC,gBAAVA,GAAqC,WAAVA,GAAgC,SAAVA,GAC7D,UAAVA,GAA+B,WAAVA,GAAgC,gBAAVA,GAAqC,YAAVA,EAEtE,MAAM,IAAIxgB,MAAM,kBAAkBs7B,KAAKC,UAAU,CAAE/a,MAAK,EAAE1gB,MAAK,KAEhE,MAAO,CAAEA,MAAK,EAAE0gB,MAAK,GAhMtB,oCAAyCtc,GACxC,IAAMuH,EAAU,EAAA7G,WAAWV,GAC3B,GAAgB,KAAZuH,EAAgB,MAAM,IAAIzL,MAAM,+BAA+ByL,GAGnE,OAFaouB,EAAwB31B,IAKtC,qCAA0C+M,EAAmBxI,EAAcmwB,EAAiB7e,EAAiB2f,QAAA,IAAAA,MAAA,IAC5G,EAAAhoB,YAAYT,EAAQ,IACpBipB,EAAyBjpB,EAAQxI,EAAMmwB,EAAS7e,EAAY2f,IA4J7D,sBAA2Bp4B,GAC1B,QAAU0B,IAAN1B,EAAiB,OAAO,EAC5B,GAAgB,UAAZA,EAAEkf,MAAmB,MAAM,IAAIxgB,MAAM,kBAAkBsB,EAAEkf,OAC7D,OAAOlf,EAAExB,OAGV,wBAA6BwB,GAC5B,QAAU0B,IAAN1B,EAAiB,OAAO,EAC5B,GAAgB,YAAZA,EAAEkf,MAAqB,MAAM,IAAIxgB,MAAM,kBAAkBsB,EAAEkf,OAC/D,OAAOlf,EAAExB,MAAQ,KAGlB,+BAAoCwB,GACnC,QAAU0B,IAAN1B,EAAiB,OAAO,EAC5B,GAAgB,YAAZA,EAAEkf,MAAqB,OAAOlf,EAAExB,MAAQ,IAC5C,GAAgB,UAAZwB,EAAEkf,MAAmB,OAAOlf,EAAExB,MAAQ,IAC1C,MAAM,IAAIE,MAAM,kBAAkBsB,EAAEkf,QAGrC,eAUA,8BAAmC1gB,EAAsC0gB,GACxE,YADwE,IAAAA,MAAA,UACnD,kBAAV1gB,EAA2B,CAAEA,MAAK,EAAE0gB,MAAK,GAC7CvF,EAAWnb,IAGnB,8BAAmC,EAAwC27B,G,IAAtCjb,EAAK,QAAE1gB,EAAK,QAChD,GAAI0gB,IAAUib,EAAe,MAAM,IAAIz7B,MAAM,kBAAkBs7B,KAAKC,UAAU,CAAE/a,MAAK,EAAE1gB,MAAK,KAC5F,OAAOA,GAGR,sBAA2BA,GAC1B,MAAO,CAAE0gB,MAAO,QAAS1gB,MAAOA,GAAS,IAG1C,wBAA6BA,GAC5B,MAAO,CAAE0gB,MAAO,UAAW1gB,MAAO2N,KAAKvC,MAAqB,KAAdpL,GAAS,MAGxD,sBAA2BwB,EAA2BpC,GACrD,GAAS,MAALoC,EAAW,MAAO,CAAEkf,MAAO,SAAU1gB,MAAO,GAEhD,GAAiB,kBAANwB,EACV,MAAM,IAAItB,MAAM,kBAAkBs7B,KAAKC,UAAUj6B,GAAE,UAAUpC,EAAG,mCAEzD,IAAAshB,EAAiBlf,EAAZ,MAAExB,EAAUwB,EAAL,MAEpB,GAAqB,kBAAVxB,EACV,MAAM,IAAIE,MAAM,oBAAoBs7B,KAAKC,UAAUj6B,GAAE,UAAUpC,EAAG,KAEnE,GACW,WAAVshB,GAAgC,gBAAVA,GAAqC,WAAVA,GAAgC,SAAVA,GAC7D,UAAVA,GAA+B,WAAVA,GAAgC,gBAAVA,GAAqC,YAAVA,EAEtE,MAAM,IAAIxgB,MAAM,oBAAoBs7B,KAAKC,UAAUj6B,GAAE,UAAUpC,EAAG,KAGnE,MAAO,CAAEshB,MAAK,EAAE1gB,MAAK,IAGT,EAAAsY,aAAe,EAAA+S,WAAyB,eAAgB,OAAQ,CAC5EuQ,KAAM,OACNxwB,MAAO,SAGK,EAAAuN,KAAO,EAAA0S,WAAwB,OAAQ,aAAc,CACjE6L,WAAY,OACZC,SAAU,SAGE,EAAA3e,KAAO,EAAA6S,WAAsB,OAAQ,QAAS,CAC1DuQ,KAAM,OACNC,MAAO,iBACPC,MAAO,OACPC,OAAQ,OACRC,OAAQ,OACRC,SAAU,wBACVC,YAAa,yBAGD,EAAArjB,UAAY,EAAAwS,WAAsB,YAAa,OAAQ,CACnEuQ,KAAM,WACNO,IAAK,UACLC,SAAU,eACVC,SAAU,eACVC,KAAM,WACNC,MAAO,YACPC,WAAY,iBACZC,WAAY,iBACZC,KAAM,WACNC,KAAM,WACNC,KAAM,WACNC,KAAM,WACNC,QAAS,cACTC,QAAS,cACTC,QAAS,cACTC,MAAO,YACPC,OAAQ,eAGI,EAAAjd,KAAO,EAAAoL,WAAsB,OAAQ,SAAU,CAC3D,OAAU,OACV,SAAY,OACZ,OAAU,OACV,SAAY,OACZ,aAAc,OACd,cAAe,aACf,eAAgB,cAChB,QAAW,OACX,OAAU,OACV,cAAe,OACf,eAAgB,cAChB,gBAAiB,eACjB,QAAW,OACX,aAAc,OACd,aAAc,OACd,cAAe,aACf,eAAgB,cAChB,YAAa,WACb,WAAY,UACZ,WAAc,OACd,UAAa,OACb,SAAY,mBACZ,OAAU,cACV,IAAO,OACP,WAAc,OACd,MAAS,OACT,WAAc,SAGF,EAAA8H,KAAO,EAAA9H,WAAuB,OAAQ,cAAe,CACjE,cAAe,OACf,cAAe,OACf,OAAU,OACV,gBAAiB,OACjB,gBAAiB,iBAGL,EAAAkI,KAAO,EAAAlI,WAA2B,OAAQ,SAAU,CAChE,OAAU,OACV,cAAe,OACf,cAAe,SAGH,EAAAgI,KAAO,EAAAhI,WAA2B,OAAQ,KAAM,CAC5D8R,GAAI,OACJC,KAAM,SAGM,EAAA5J,KAAO,EAAAnI,WAA0B,OAAQ,SAAU,CAC/DgS,OAAQ,OACRC,QAAS,SAGG,EAAA5J,KAAO,EAAArI,WAAuB,OAAQ,OAAQ,CAC1DkS,KAAM,OACNC,OAAQ,SAGI,EAAA7L,KAAO,EAAAtG,WAA0B,OAAQ,SAAU,CAC/DoS,OAAQ,OACRC,OAAQ,OACR3L,MAAO,OACP4L,UAAW,OACXC,QAAS,SAGG,EAAAzM,KAAO,EAAA9F,WAAkC,OAAQ,MAAO,CACpE7B,IAAK,OACLqU,IAAK,OACLC,IAAK,SAGO,EAAA3Q,KAAO,EAAA9B,WAA4C,OAAQ,UAAW,CAClF0S,QAAS,OACTP,OAAQ,OACRQ,OAAQ,SAGI,EAAA1Q,KAAO,EAAAjC,WAA6C,OAAQ,QAAS,CACjFrV,MAAO,OACP6X,SAAU,OACVG,QAAS,SAGG,EAAA1O,uBAAyB,EAAA+L,WAAwB,yBAA0B,OAAQ,CAC/F4S,KAAM,qBACN7yB,MAAO,sBACP8yB,OAAQ,yBAGI,EAAA1e,wBAA0B,EAAA6L,WAAyB,0BAA2B,QAAS,CACnG8S,MAAO,uBACP/yB,MAAO,uBACP+jB,MAAO,yBAGK,EAAAzP,yBAA2B,EAAA2L,WAA0B,2BAA4B,SAAU,CACvG2S,OAAQ,yBACRR,OAAQ,yBACRO,QAAS,6B,iICx8BV,YAEA,QAKA,QAIA,QACA,QACA,QAYA,SAAS9nB,EACR7W,EACAyT,EACApI,EACAqI,GAEA,IAAMvI,EAA2B,CAAEnL,IAAG,EAAEyT,IAAG,EAAEpI,KAAI,EAAEqI,MAAK,GACxD,EAAAyB,iBAAiBzN,KAAKyD,GACtB,EAAAuB,oBAAoBvB,EAAQnL,KAAOmL,EAXvB,EAAAgK,iBAAsC,GACtC,EAAAzI,oBAA0D,GAavE,IACMsyB,EAAmB,MAACl7B,EAAW,MAAO,QACtCm7B,EAAoB,MAACn7B,EAAW,SAAU,cAAe,SAAU,QAAS,WAC5Eo7B,EAAM,mBAEZ,SAASC,EAAavtB,GACrB,OAAOA,GAAQ,GAAKA,EAAO,GAAKA,EAAO,GAOxC,SAASwtB,EAAep6B,EAAmBtC,GAC1C,IAAMb,EAAS,EAAAiE,UAAUd,EAAQtC,GACjC,OAAO,EAAA28B,aAAax9B,GAGrB,SAASy9B,EAAgBvtB,EAAmBnR,GAC3C,IAAMiB,EAAS,EAAA09B,aAAa3+B,GAC5B,EAAAgS,WAAWb,EAAQlQ,GAGpB,EAAA5B,eAAiB4W,EAChB,MACA,SAAA9L,GAAU,gBAACA,EAAey0B,WAC1B,SAACx6B,EAAQ+F,EAAQ5D,GAEf4D,EAAey0B,QAAU,EAAA15B,UAAUd,EAAQmC,QAE7C,SAAC4K,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAey0B,YAIrC3oB,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO00B,iBACjB,SAACz6B,EAAQ+F,GAGR,IAFA,IAAI00B,EAAgB,GAEX79B,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC5B,IAAM89B,EAAO,EAAA36B,UAAUC,GACvBy6B,GAAiBP,EAAIQ,GAAQ,GAC7BD,GAAiBP,EAAW,GAAPQ,GAGtB30B,EAAO00B,cAAgBA,KAExB,SAAC1tB,EAAQhH,GACR,IAAK,IAAInJ,EAAI,EAAGA,EAAI,GAAIA,IACvB,EAAAkQ,WAAWC,GA1CEnR,EA0CamK,EAAO00B,cA1CL1mB,EA0CyB,EAAJnX,EAzC3Cu9B,EAAav+B,EAAMsQ,WAAW6H,KAAW,EAAKomB,EAAav+B,EAAMsQ,WAAW6H,EAAQ,MAD7F,IAAgBnY,EAAemY,KA+C/BlC,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO40B,eACjB,SAAC36B,EAAQ+F,EAAQ5D,GAAS,OAAA4D,EAAO40B,YAAcP,EAAep6B,EAAQmC,QACtE,SAAC4K,EAAQhH,GAAW,OAAAu0B,EAAgBvtB,EAAQhH,EAAxB,gBAGrB,IAAM60B,EAAO,EAAA3T,WAA4B,OAAQ,aAAc,CAC9D,WAAc,OACd,WAAc,OACd,wBAAyB,OACzB,wBAAyB,SAsB1BpV,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO80B,oBACjB,SAAC76B,EAAQ+F,G,QACFiQ,EAAmC,EAAArC,yBAAyB3T,GAElE+F,EAAO80B,iBAAmB,CACzBC,YAAa9kB,EAAK8kB,aAAe,GACjCC,gBAAiBH,EAAKl/B,OAAgB,QAAT,EAAAsa,EAAK4kB,YAAI,QAAI,cAG3C,IAAMlpB,EAAO3L,EAAO80B,sBAEF/7B,IAAdkX,EAAKglB,OAAoBtpB,EAAKupB,qBAAuBjlB,EAAKglB,WACzCl8B,IAAjBkX,EAAK,UAAuBtE,EAAKwpB,eAAiBllB,EAAK,cACzClX,IAAdkX,EAAKmlB,OAAoBzpB,EAAK0pB,uBAAyBplB,EAAKmlB,WACnCr8B,IAAzBkX,EAAKqlB,kBAA+B3pB,EAAK2pB,gBAAkBrlB,EAAKqlB,sBAC7Cv8B,IAAnBkX,EAAKslB,YAAyB5pB,EAAK4pB,UAAYtlB,EAAKslB,WACpDtlB,EAAK4e,kBACJ,SAAU5e,EAAK4e,gBAClBljB,EAAK6pB,WAAa,CAAEC,QAASxlB,EAAK4e,gBAAgB6G,KAAK5/B,MAAM,KAAK,IAElE6V,EAAK6pB,WAAa,CACjB3T,QAAS5R,EAAK4e,gBAAgBhN,QAC9BmT,gBAAiBH,EAAKl/B,OAAgC,QAAzB,EAAAsa,EAAK4e,gBAAgBgG,YAAI,QAAI,aAC1DQ,yBAA0BplB,EAAK4e,gBAAgBuG,KAC/CO,aAAc1lB,EAAK4e,gBAAgB8G,gBAKvC,SAAC3uB,EAAQhH,G,QACF2L,EAAO3L,EAAO80B,iBACd7kB,EAAmC,GAErCtE,EAAKupB,qBACRjlB,EAAKglB,MAAO,QAEWl8B,IAAnB4S,EAAK4pB,YAAyBtlB,EAAKslB,YAAc5pB,EAAK4pB,WAC1DtlB,EAAK+W,KAAO,YACZ/W,EAAK,QAA6B,QAAnB,EAAAtE,EAAKwpB,sBAAc,QAAI,WAGvCllB,EAAK4kB,KAAOA,EAAK7+B,OAAO2V,EAAKqpB,iBAExBrpB,EAAKupB,uBAAsBjlB,EAAKmlB,OAASzpB,EAAK0pB,wBAEnDplB,EAAKqlB,kBAAoB3pB,EAAK2pB,gBAC9BrlB,EAAK8kB,YAAcppB,EAAKopB,aAAe,GAEnCppB,EAAK6pB,YAAc,YAAa7pB,EAAK6pB,WACxCvlB,EAAK4e,gBAAkB,CACtBhN,QAASlW,EAAK6pB,WAAW3T,SAAW,GACpCgT,KAAMA,EAAK7+B,OAAO2V,EAAK6pB,WAAWR,iBAClCI,OAAQzpB,EAAK6pB,WAAWH,uBACxBM,aAAchqB,EAAK6pB,WAAWG,YAG/B1lB,EAAK4e,gBAAkB,CACtB6G,MAAqB,QAAf,EAAA/pB,EAAK6pB,kBAAU,eAAEC,SAAU,gBAAgB9pB,EAAK6pB,WAAWC,QAAY,0BAI/E,EAAAhmB,0BAA0BzI,EAAQ,GAAI,cAAeiJ,MAIvD,EAAA/a,eAAiB4W,EAChB,MACA,SAAA9L,GAAU,gBAACA,EAAe41B,WAC1B,SAAC37B,EAAQ+F,EAAQ5D,GAEf4D,EAAe41B,QAAU,EAAA76B,UAAUd,EAAQmC,QAM7C,SAAC4K,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAe41B,YAIrC9pB,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO61B,kBACjB,SAAC57B,EAAQ+F,GACR,IAAM81B,EAAuB,EAAAC,iBAAiB97B,GACxC+7B,EAA2B,EAAAz7B,WAAWN,GACtCg8B,EAAY,EAAA17B,WAAWN,GACvBi8B,EAAqB,EAAAH,iBAAiB97B,GACtCk8B,EAAyB,EAAA57B,WAAWN,GACpCm8B,EAAa,EAAA77B,WAAWN,GAE9B+F,EAAO61B,eAAiB,CACvBC,qBAAoB,EACpBE,yBAA0B/B,EAAiB+B,IAA6B,MACxEC,UAAW/B,EAAkB+B,IAAc,SAC3CC,mBAAkB,EAClBC,uBAAwBlC,EAAiBkC,IAA2B,MACpEC,WAAYlC,EAAkBkC,IAAe,aAG/C,SAACpvB,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO61B,eAEpB,EAAAQ,kBAAkBrvB,EAAQ2E,EAAKmqB,sBAAwB,GACvD,EAAAzuB,YAAYL,EAAQxD,KAAKhN,IAAI,EAAGy9B,EAAiB9zB,QAAQwL,EAAKqqB,4BAC9D,EAAA3uB,YAAYL,EAAQxD,KAAKhN,IAAI,EAAG09B,EAAkB/zB,QAAQwL,EAAKsqB,aAC/D,EAAAI,kBAAkBrvB,EAAQ2E,EAAKuqB,oBAAsB,GACrD,EAAA7uB,YAAYL,EAAQxD,KAAKhN,IAAI,EAAGy9B,EAAiB9zB,QAAQwL,EAAKwqB,0BAC9D,EAAA9uB,YAAYL,EAAQxD,KAAKhN,IAAI,EAAG09B,EAAkB/zB,QAAQwL,EAAKyqB,iBAIjE,IAAME,EAAmB,CAAC,WAAY,cAAe,gBAErDxqB,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAOu2B,cACjB,SAACt8B,EAAQ+F,GACRA,EAAOu2B,WAAa,CACnB9nB,MAAO6nB,EAAiB,EAAAj8B,UAAUJ,IAClC5C,EAAG,EAAAyW,YAAY7T,GACf9C,EAAG,EAAA2W,YAAY7T,GACfqP,MAAO,EAAAwE,YAAY7T,OAGrB,SAAC+M,EAAQhH,GACF,MAAyBA,EAAOu2B,WAA9B9nB,EAAK,QAAEpX,EAAC,IAAEF,EAAC,IAAEmS,EAAK,QAC1B,EAAAnC,WAAWH,EAAQxD,KAAKhN,IAAI,EAAG8/B,EAAiBn2B,QAAQsO,KACxD,EAAAkB,aAAa3I,EAAQ3P,GAAK,GAC1B,EAAAsY,aAAa3I,EAAQ7P,GAAK,GAC1B,EAAAwY,aAAa3I,EAAQsC,GAAS,MAIhCwC,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAOw2B,qBACjB,SAACv8B,EAAQ+F,EAAQ5D,GAGhB,IAFA4D,EAAOw2B,kBAAoB,GAEpBp6B,KAAQ,CACd,IAAMvG,EAAQ,EAAAsF,iBAAiBlB,EAAQ,GACvC+F,EAAOw2B,kBAAkB75B,KAAK9G,OAGhC,SAACmR,EAAQhH,GACR,IAAmB,UAAAA,EAAOw2B,kBAAP,eAA2B,CAAzC,IAAM,EAAI,KACd,EAAAtuB,kBAAkBlB,EAAQ,EAAM,OAKnC8E,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAOw2B,qBACjB,SAACv8B,EAAQ+F,EAAQ5D,GAGhB,IAFA4D,EAAOw2B,kBAAoB,GAEpBp6B,KACN4D,EAAOw2B,kBAAkB75B,KAAK,EAAArB,kBAAkBrB,OAGlD,SAAC+M,EAAQhH,GACR,IAAmB,UAAAA,EAAOw2B,kBAAP,eAA2B,CAAzC,IAAM,EAAI,KACd,EAAA7X,8BAA8B3X,EAAQ,OAKzC,EAAA9R,eAAiB4W,EAChB,MACA,SAAA9L,GAAU,gBAACA,EAAey2B,WAC1B,SAACx8B,EAAQ+F,EAAQ5D,GAEf4D,EAAey2B,QAAU,EAAA17B,UAAUd,EAAQmC,QAE7C,SAAC4K,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAey2B,YAIrC3qB,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO02B,oBACjB,SAACz8B,EAAQ+F,EAAQ5D,GAGhB,IAFA4D,EAAO02B,iBAAmB,GAEnBt6B,KAAU,GAChB4D,EAAO02B,iBAAiB/5B,KAAK,EAAAhC,WAAWV,OAG1C,SAAC+M,EAAQhH,GACR,IAAiB,UAAAA,EAAO02B,iBAAP,eAA0B,CAAtC,IAAM95B,EAAE,KACZ,EAAA6K,YAAYT,EAAQpK,OAKvBkP,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO22B,mBACjB,SAAC18B,EAAQ+F,GAAW,OAAAA,EAAO22B,gBAAkB,EAAAna,UAAzB,MACpB,SAACxV,EAAQhH,GAAW,SAAAgd,WAAWhW,EAAQhH,EAAnB,oBAGrB8L,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO42B,eACjB,SAAC38B,EAAQ+F,GAAW,OAAAA,EAAO42B,YAAc,EAAAj8B,WAArB,MACpB,SAACqM,EAAQhH,GAAW,SAAAyH,YAAYT,EAAQhH,EAApB,gBAGrB8L,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO62B,kBACjB,SAAC58B,EAAQ+F,GAAW,OAAAA,EAAO62B,eAAiB,EAAAl8B,WAAxB,MACpB,SAACqM,EAAQhH,GAAW,SAAAyH,YAAYT,EAAQhH,EAApB,mBAGrB8L,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO82B,cACjB,SAAC78B,EAAQ+F,GACRA,EAAO82B,WAAa,CACnBC,SAAU,EAAA/8B,UAAUC,GACpB+8B,YAAa,EAAAh9B,UAAUC,GACvBg9B,YAAa,EAAAj9B,UAAUC,GACvBi9B,oBAAqB,EAAAl9B,UAAUC,GAC/Bk9B,WAAY,EAAAn9B,UAAUC,GACtBm9B,OAAQ,EAAAp9B,UAAUC,GAClBo9B,cAAe,EAAAr9B,UAAUC,GACzBq9B,UAAW,EAAAt9B,UAAUC,GACrB68B,aAAc,EAAA98B,UAAUC,OAG1B,SAAC+M,EAAQhH,GACR,IAAMhD,EAAQgD,EAAO82B,WACrB,EAAA/vB,WAAWC,EAAQhK,EAAM+5B,OAAS,EAAI,GACtC,EAAAhwB,WAAWC,EAAQhK,EAAMg6B,UAAY,EAAI,GACzC,EAAAjwB,WAAWC,EAAQhK,EAAMi6B,UAAY,EAAI,GACzC,EAAAlwB,WAAWC,EAAQhK,EAAMk6B,kBAAoB,EAAI,GACjD,EAAAnwB,WAAWC,EAAQhK,EAAMm6B,SAAW,EAAI,GACxC,EAAApwB,WAAWC,EAAQhK,EAAMo6B,KAAO,EAAI,GACpC,EAAArwB,WAAWC,EAAQhK,EAAMq6B,YAAc,EAAI,GAC3C,EAAAtwB,WAAWC,EAAQhK,EAAMs6B,QAAU,EAAI,GACvC,EAAAvwB,WAAWC,EAAQhK,EAAM85B,WAAa,EAAI,MAI5C,EAAA5hC,eAAiB4W,EAChB,KACA,SAAA9L,GAAU,gBAACA,EAAeu3B,YAC1B,SAACt9B,EAAQ+F,EAAQ5D,GAEf4D,EAAeu3B,SAAW,EAAAx8B,UAAUd,EAAQmC,QAE9C,SAAC4K,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAeu3B,aAIrC,EAAAriC,eAAiB4W,EAChB,MACA,SAAA9L,GAAU,gBAACA,EAAew3B,WAC1B,SAACv9B,EAAQ+F,EAAQ5D,GAEf4D,EAAew3B,QAAU,EAAAz8B,UAAUd,EAAQmC,QAE7C,SAAC4K,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAew3B,YAIrC,EAAAtiC,eAAiB4W,EAChB,MACA,SAAA9L,GAAU,gBAACA,EAAey3B,WAC1B,SAACx9B,EAAQ+F,EAAQ5D,GAEf4D,EAAey3B,QAAU,EAAA18B,UAAUd,EAAQmC,QAE7C,SAAC4K,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAey3B,YAIrC3rB,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO03B,cACjB,SAACz9B,EAAQ+F,GAAW,OAAAA,EAAO03B,WAAa,EAAAn9B,WAApB,MACpB,SAACyM,EAAQhH,GAAW,SAAAqH,YAAYL,EAAQhH,EAApB,eAGrB8L,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO23B,eACjB,SAAC19B,EAAQ+F,EAAQ5D,GAGhB,IAFA4D,EAAO23B,YAAc,GAEdv7B,KACN4D,EAAO23B,YAAYh7B,KAAK,EAAApC,WAAWN,OAGrC,SAAC+M,EAAQhH,GACR,IAAgB,UAAAA,EAAO23B,YAAP,eAAqB,CAAhC,IAAM9zB,EAAC,KACX,EAAAwD,YAAYL,EAAQnD,OAKvBiI,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO43B,wBACjB,SAAC39B,EAAQ+F,EAAQ5D,GAGhB,IAFA4D,EAAO43B,qBAAuB,GAEvBx7B,KACN4D,EAAO43B,qBAAqBj7B,KAAK,EAAA3C,UAAUC,OAG7C,SAAC+M,EAAQhH,GACR,IAAiB,UAAAA,EAAO43B,qBAAP,eAA8B,CAA1C,IAAMh7B,EAAE,KACZ,EAAAmK,WAAWC,EAAQpK,OAKtBkP,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO63B,qBACjB,SAAC59B,EAAQ+F,GACR,IAAIxH,EAAQ,EAAA+B,WAAWN,GAGvB,IAFA+F,EAAO63B,kBAAoB,GAEpBr/B,KACNwH,EAAO63B,kBAAkBl7B,KAAK,EAAAhC,WAAWV,OAG3C,SAAC+M,EAAQhH,GACR,EAAAqH,YAAYL,EAAQhH,EAAO63B,kBAAmBlgC,QAE9C,IAAiB,UAAAqI,EAAO63B,kBAAP,eAA2B,CAAvC,IAAMj7B,EAAE,KACZ,EAAA6K,YAAYT,EAAQpK,OAKvBkP,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAO83B,4BACjB,SAAC79B,EAAQ+F,GACR,IAAMwB,EAAU,EAAA7G,WAAWV,GACrB8yB,EAAa,EAAApyB,WAAWV,GACxB+yB,EAAW,EAAAryB,WAAWV,GACtBzB,EAAQ,EAAAmC,WAAWV,GAEzB,GAAgB,IAAZuH,EAAe,MAAM,IAAIzL,MAAM,kCAAkCyL,GAErExB,EAAO83B,yBAA2B,CACjCC,KAAM,CAAEhL,WAAU,EAAEC,SAAQ,GAC5BgL,OAAQ,IAGT,IAAK,IAAInhC,EAAI,EAAGA,EAAI2B,EAAO3B,IAC1BmJ,EAAO83B,yBAAyBE,OAAQr7B,KAAK,CAC5C4pB,SAAU,EAAA5rB,WAAWV,GAAU,GAC/BgvB,UAAW,EAAAjvB,UAAUC,GAAU,aAAe,gBAIjD,SAAC+M,EAAQhH,GACR,IAAM2L,EAAO3L,EAAO83B,yBACdC,EAAOpsB,EAAKosB,MAAQ,CAAEhL,WAAY,IAASC,SAAU,KACrDgL,EAASrsB,EAAKqsB,QAAU,GAE9B,EAAAvwB,YAAYT,EAAQ,GACpB,EAAAS,YAAYT,EAAQ+wB,EAAKhL,YACzB,EAAAtlB,YAAYT,EAAQ+wB,EAAK/K,UACzB,EAAAvlB,YAAYT,EAAQgxB,EAAOrgC,QAE3B,IAAgB,UAAAqgC,EAAA,eAAQ,CAAnB,IAAMn0B,EAAC,KACX,EAAA4D,YAAYT,EAAqB,GAAbnD,EAAE0iB,UACtB,EAAAxf,WAAWC,EAAwB,eAAhBnD,EAAEolB,UAA6B,EAAI,OAKzDnd,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAOi4B,YACjB,SAACh+B,EAAQ+F,EAAQiT,EAAGhX,GAGnB,GAFc,EAAAtB,WAAWV,GAEd,CACV,IAAKgC,EAAQ2D,wBAAyB,OACtC,MAAM,IAAI7J,MAAM,6BAIjBiK,EAAOi4B,SAAW,MAEnB,SAACjxB,EAAQhH,GAIR,GAHA,EAAAyH,YAAYT,EAAQhH,EAAOi4B,SAAUtgC,QAGjCqI,EAAOi4B,SAAUtgC,OACpB,MAAM,IAAI5B,MAAM,gCAKnB,EAAAb,eAAiB4W,EAChB,MACA,SAAA9L,GAAU,gBAACA,EAAek4B,WAC1B,SAACj+B,EAAQ+F,EAAQ5D,GAEf4D,EAAek4B,QAAU,EAAAn9B,UAAUd,EAAQmC,QAE7C,SAAC4K,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAek4B,YAIrCpsB,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAOm4B,oBACjB,SAACl+B,EAAQ+F,GACR,GAAI,EAAArF,WAAWV,GAAU,EAAG,MAAM,IAAIlE,MAAM,oCAC5CiK,EAAOm4B,iBAAmB,CAAEC,OAAQ,EAAAv9B,YAAYZ,OAEjD,SAAC+M,EAAQhH,GACR,EAAAyH,YAAYT,EAAQ,GACpB,EAAAW,aAAaX,EAAQhH,EAAOm4B,iBAAkBC,WAIhDtsB,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAOq4B,sBACjB,SAACp+B,EAAQ+F,GACRA,EAAOq4B,qBAAuB,EAAAr+B,UAAUC,MAEzC,SAAC+M,EAAQhH,GACR,EAAA+G,WAAWC,EAAQhH,EAAOq4B,mBAAqB,EAAI,MAIrD,EAAAnjC,eAAiB4W,EAChB,MACA,SAAA9L,GAAU,gBAACA,EAAes4B,WAC1B,SAACr+B,EAAQ+F,EAAQ5D,GAEf4D,EAAes4B,QAAU,EAAAv9B,UAAUd,EAAQmC,QAE7C,SAAC4K,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAes4B,YAIrCxsB,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAOu4B,iBACjB,SAACt+B,EAAQ+F,GAAW,OAAAA,EAAOu4B,cAAgB,EAAA59B,WAAvB,MACpB,SAACqM,EAAQhH,GAAW,SAAAyH,YAAYT,EAAQhH,EAApB,kBAGrB8L,EACC,MACA,SAAA9L,GAAU,YAAqBjH,IAArBiH,EAAO+J,gBAAP,IAAkC/J,EAAOw4B,gBACnD,SAACv+B,EAAQ+F,EAAQ5D,EAAMH,GACtB,IAAMw8B,EAAS,EAAA99B,WAAWV,GACpBtD,EAAQ,EAAAgE,WAAWV,GACnBrD,EAAS,EAAA+D,WAAWV,GAC1B,EAAAU,WAAWV,GACX,EAAAU,WAAWV,GACX,EAAAU,WAAWV,GACX,IAAMy+B,EAAe,EAAAn+B,WAAWN,GAC1B0+B,EAAS,EAAAp+B,WAAWN,GAE1B,GAAe,IAAXw+B,GAAiC,KAAjBC,GAAkC,IAAXC,EAG1C,OAFA18B,EAAQ6B,oBAAsBC,QAAQC,IAAI,mCAAmCy6B,EAAM,mBAAmBC,EAAY,aAAaC,EAAM,UACrI,EAAAj9B,UAAUzB,EAAQmC,KAInB,IAAM1F,EAAO0F,IACP3F,EAAO,EAAAsE,UAAUd,EAAQvD,GAE3BuF,EAAQ28B,gBACX54B,EAAOw4B,aAAe,CAAE7hC,MAAK,EAAEC,OAAM,EAAEH,KAAI,GAE3CuJ,EAAO+J,UAAY,EAAAlR,qBAAqBpC,MAG1C,SAACuQ,EAAQhH,GACR,IAEIvJ,EAFAE,EAAQ,EACRC,EAAS,EAGToJ,EAAOw4B,cACV7hC,EAAQqJ,EAAOw4B,aAAa7hC,MAC5BC,EAASoJ,EAAOw4B,aAAa5hC,OAC7BH,EAAOuJ,EAAOw4B,aAAa/hC,OAE3BE,EAAQqJ,EAAO+J,UAAWpT,MAC1BC,EAASoJ,EAAO+J,UAAWnT,OAC3BH,EAAO,EAAAkP,YAAY3F,EAAO+J,UAAW8uB,UAAU,aAAc,GAAGja,OAAO,0BAA0BjnB,UAGlG,IACMmhC,EAA4D,EAA/Ct1B,KAAK+F,OADH,GACU5S,EAAuB,IAAM,IAEtDoiC,EAAYD,EAAaliC,EADhB,EAEToiC,EAAuBviC,EAAKkB,OAElC,EAAA8P,YAAYT,EAAQ,GACpB,EAAAS,YAAYT,EAAQrQ,GACpB,EAAA8Q,YAAYT,EAAQpQ,GACpB,EAAA6Q,YAAYT,EAAQ8xB,GACpB,EAAArxB,YAAYT,EAAQ+xB,GACpB,EAAAtxB,YAAYT,EAAQgyB,GACpB,EAAA3xB,YAAYL,EAZS,IAarB,EAAAK,YAAYL,EAXG,GAYf,EAAAa,WAAWb,EAAQvQ,MAIrBqV,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAOi5B,eACjB,SAACh/B,EAAQ+F,EAAQ5D,GAEhB,GAAgB,IADA,EAAAzB,WAAWV,GACR,MAAM,IAAIlE,MAAM,+BAEnCiK,EAAOi5B,YAAc,CACpBC,oBAAqB,EAAAl/B,UAAUC,GAC/Bk/B,WAAY,EAAA79B,kBAAkBrB,GAC9Bm/B,WAAY,EAAA99B,kBAAkBrB,GAC9Bo/B,YAAa,EAAA1+B,WAAWV,IAGzB,EAAAyB,UAAUzB,EAAQmC,QAEnB,SAAC4K,EAAQhH,GACR,IAAMi5B,EAAcj5B,EAAOi5B,YAC3B,EAAAxxB,YAAYT,EAAQ,GACpB,EAAAD,WAAWC,EAAQiyB,EAAYC,kBAAoB,EAAI,GACvD,EAAA5lB,mBAAmBtM,EAAQiyB,EAAYE,YACvC,EAAA7lB,mBAAmBtM,EAAQiyB,EAAYG,YACvC,EAAA3xB,YAAYT,EAAQiyB,EAAYI,gBAIlC,EAAAnkC,eAAiB4W,EAChB,MACA,SAAA9L,GAAU,gBAACA,EAAes5B,WAC1B,SAACr/B,EAAQ+F,EAAQ5D,GAEf4D,EAAes5B,QAAU,EAAAv+B,UAAUd,EAAQmC,QAE7C,SAAC4K,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAes5B,YAIrCxtB,EACC,KACA,SAAA9L,GAAU,gBAAAA,EAAOu5B,uBACjB,SAACt/B,EAAQ+F,EAAQ5D,GAChB4D,EAAOu5B,oBAAsBlF,EAAep6B,EAAQmC,QAErD,SAAC4K,EAAQhH,GACRu0B,EAAgBvtB,EAAQhH,EAAOu5B,wBAIjCztB,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAOw5B,sBACjB,SAACv/B,EAAQ+F,EAAQ5D,GAChB4D,EAAOw5B,mBAAqBnF,EAAep6B,EAAQmC,QAEpD,SAAC4K,EAAQhH,GACRu0B,EAAgBvtB,EAAQhH,EAAOw5B,uBAQjC1tB,EACC,MACA,SAAA9L,GAAU,gBAAAA,EAAOy5B,sBACjB,SAACx/B,EAAQ+F,EAAQ05B,GAChB,IAAMzpB,EAAuB,EAAArC,yBAAyB3T,GAEtD+F,EAAOy5B,mBAAqBxpB,EAAI,QAEjC,SAACjJ,EAAQhH,GACR,IAAMiQ,EAAuB,CAAE,KAAQjQ,EAAOy5B,oBAC9C,EAAAhqB,0BAA0BzI,EAAQ,GAAI,OAAQiJ,MAIhD,EAAA/a,eAAiB4W,EAChB,MACA,SAAA9L,GAAU,gBAACA,EAAe25B,WAC1B,SAAC1/B,EAAQ+F,EAAQ5D,GAEf4D,EAAe25B,QAAU,EAAA5+B,UAAUd,EAAQmC,QAE7C,SAAC4K,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAe25B,YAIrC,IAAMC,EAAO,EAAA1Y,WAAwC,OAAQ,GAAI,CAChEwL,KAAM,OACN+E,KAAM,OACNoI,QAAS,SAiCV,EAAA3kC,eAAiB4W,EAChB,KACA,SAAA9L,GAAU,gBAACA,EAAe85B,WAC1B,SAAC7/B,EAAQ+F,EAAQ5D,EAAM,G,IAAE0B,EAAkB,qBAAEsW,EAAc,iBAC1D,GAAI,EAAAlf,cAEF8K,EAAe85B,QAAU,EAAA/+B,UAAUd,EAAQmC,SAF7C,CAMA,IAAMnH,EAAM,EAAAgG,cAAchB,GAE1B,GAAY,SAARhF,EACH,EAAA0G,eAAe1B,EAAQ,QACvB,EAAAkD,YAAYlD,EAAQ,GAAG,SAAAmC,GACtB,I,iBACC,EAAAT,eAAe1B,EAAQ,QACvB,IAAM,EAAM,EAAAgB,cAAchB,GAE1B,EAAAkD,YAAYlD,EAAQ,GAAG,SAAAmC,GACtB,GAAY,SAAR,EAAgB,CACnB,IAAM6T,EAAO,EAAArC,yBAAyB3T,GAEtCma,GAAkBrW,QAAQC,IAAI,aAAciS,GAG5C,IAAMpb,EAAqB,CAE1BklC,OAAQ9pB,EAAK+pB,KAAKplC,KAAI,SAAAyC,GAAK,MAAC,CAC3BuF,GAAIvF,EAAE4iC,KACNC,MAAO7iC,EAAE8iC,KAAO,IAChBN,QAASxiC,EAAE+iC,KAAOR,EAAKjkC,OAAO0B,EAAE+iC,MAAQ,WAGzCC,WAAYpqB,EAAKqqB,KAAK1lC,KAAI,SAAAyC,GAAK,MAAC,CAC/BuF,GAAIvF,EAAEkjC,KACNR,OAAQ1iC,EAAEmjC,KACVC,QAASpjC,EAAEqjC,UAKbtmB,GAAkBrW,QAAQC,IAAI,oBAAqBnJ,QAE7C,GAAY,SAAR,EAAgB,CAC1B,IAAM0O,EAAQ,EAAAxI,UAAUd,EAAQmC,KAChCgY,GAAkBrW,QAAQC,IAAI,aAAcuF,QAE5CzF,GAAsBC,QAAQC,IAAI,gCAAiC,OAjC/D5B,K,WAsCF,IAAY,SAARnH,EAKV,YADA6I,GAAsBC,QAAQC,IAAI,0BAA2B/I,IAH7D,IAAMsO,EAAQ,EAAAxI,UAAUd,EAAQmC,KAChCgY,GAAkBrW,QAAQC,IAAI,aAAcuF,QAM9C,SAACyD,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAe85B,YAKrC,EAAA5kC,eAAiB4W,EAChB,MACA,SAAA9L,GAAU,gBAACA,EAAe26B,WAC1B,SAAC1gC,EAAQ+F,EAAQ5D,EAAM,G,IAAE0B,EAAkB,qBAAEsW,EAAc,iBAC1D,GAAI,EAAAlf,cAEF8K,EAAe26B,QAAU,EAAA5/B,UAAUd,EAAQmC,SAF7C,CAMA,IAAMnH,EAAM,EAAAgG,cAAchB,GAE1B,GAAY,SAARhF,EAAgB,CAEnB,GAAgB,IADA,EAAA0F,WAAWV,GACR,MAAM,IAAIlE,MAAM,wBAEnC,IAAM,EAAS,EAAA4E,WAAWV,GACpBsJ,EAAQ,EAAAxI,UAAUd,EAAQ,GAChCma,GAAkBrW,QAAQC,IAAI,OAAQuF,QAChC,GAAY,SAARtO,EAAgB,CAC1B,IAAMgb,EAAO,EAAArC,yBAAyB3T,GACtCma,GAAkBrW,QAAQC,IAAI,OAAQiS,QAEtCnS,GAAsBC,QAAQC,IAAI,yBAA0B/I,OAG9D,SAAC+R,EAAQhH,GACR,EAAA6H,WAAWb,EAAShH,EAAe26B,a,iCC12BrC,YAUA,IAAIC,EAASC,EAAQ,IACjBC,EAAUD,EAAQ,IAClBhV,EAAUgV,EAAQ,IAmDtB,SAASE,IACP,OAAOC,EAAOC,oBACV,WACA,WAGN,SAASC,EAAcC,EAAMxjC,GAC3B,GAAIojC,IAAepjC,EACjB,MAAM,IAAIyjC,WAAW,8BAcvB,OAZIJ,EAAOC,qBAETE,EAAO,IAAIzjC,WAAWC,IACjB0jC,UAAYL,EAAOM,WAGX,OAATH,IACFA,EAAO,IAAIH,EAAOrjC,IAEpBwjC,EAAKxjC,OAASA,GAGTwjC,EAaT,SAASH,EAAQO,EAAKC,EAAkB7jC,GACtC,IAAKqjC,EAAOC,uBAAyBQ,gBAAgBT,GACnD,OAAO,IAAIA,EAAOO,EAAKC,EAAkB7jC,GAI3C,GAAmB,kBAAR4jC,EAAkB,CAC3B,GAAgC,kBAArBC,EACT,MAAM,IAAIzlC,MACR,qEAGJ,OAAO2lC,EAAYD,KAAMF,GAE3B,OAAOI,EAAKF,KAAMF,EAAKC,EAAkB7jC,GAW3C,SAASgkC,EAAMR,EAAMtlC,EAAO2lC,EAAkB7jC,GAC5C,GAAqB,kBAAV9B,EACT,MAAM,IAAI+lC,UAAU,yCAGtB,MAA2B,qBAAhB3yB,aAA+BpT,aAAiBoT,YA6H7D,SAA0BkyB,EAAM1jC,EAAOuD,EAAYrD,GAGjD,GAFAF,EAAM6M,WAEFtJ,EAAa,GAAKvD,EAAM6M,WAAatJ,EACvC,MAAM,IAAIogC,WAAW,6BAGvB,GAAI3jC,EAAM6M,WAAatJ,GAAcrD,GAAU,GAC7C,MAAM,IAAIyjC,WAAW,6BAIrB3jC,OADiBsB,IAAfiC,QAAuCjC,IAAXpB,EACtB,IAAID,WAAWD,QACHsB,IAAXpB,EACD,IAAID,WAAWD,EAAOuD,GAEtB,IAAItD,WAAWD,EAAOuD,EAAYrD,GAGxCqjC,EAAOC,qBAETE,EAAO1jC,GACF4jC,UAAYL,EAAOM,UAGxBH,EAAOU,EAAcV,EAAM1jC,GAE7B,OAAO0jC,EAvJEW,CAAgBX,EAAMtlC,EAAO2lC,EAAkB7jC,GAGnC,kBAAV9B,EAwFb,SAAqBslC,EAAMY,EAAQC,GACT,kBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAKhB,EAAOiB,WAAWD,GACrB,MAAM,IAAIJ,UAAU,8CAGtB,IAAIjkC,EAAwC,EAA/B2M,EAAWy3B,EAAQC,GAG5BE,GAFJf,EAAOD,EAAaC,EAAMxjC,IAERgR,MAAMozB,EAAQC,GAE5BE,IAAWvkC,IAIbwjC,EAAOA,EAAKxiC,MAAM,EAAGujC,IAGvB,OAAOf,EA5GEgB,CAAWhB,EAAMtlC,EAAO2lC,GAsJnC,SAAqBL,EAAM3S,GACzB,GAAIwS,EAAOoB,SAAS5T,GAAM,CACxB,IAAIviB,EAA4B,EAAtBo2B,EAAQ7T,EAAI7wB,QAGtB,OAAoB,KAFpBwjC,EAAOD,EAAaC,EAAMl1B,IAEjBtO,QAIT6wB,EAAI8T,KAAKnB,EAAM,EAAG,EAAGl1B,GAHZk1B,EAOX,GAAI3S,EAAK,CACP,GAA4B,qBAAhBvf,aACRuf,EAAI1xB,kBAAkBmS,aAAgB,WAAYuf,EACpD,MAA0B,kBAAfA,EAAI7wB,SA+8CL/B,EA/8CkC4yB,EAAI7wB,UAg9CrC/B,EA/8CFslC,EAAaC,EAAM,GAErBU,EAAcV,EAAM3S,GAG7B,GAAiB,WAAbA,EAAIjmB,MAAqBsjB,EAAQ2C,EAAI/xB,MACvC,OAAOolC,EAAcV,EAAM3S,EAAI/xB,MAw8CrC,IAAgBb,EAp8Cd,MAAM,IAAIgmC,UAAU,sFA9KbW,CAAWpB,EAAMtlC,GA4B1B,SAAS2mC,EAAY9lC,GACnB,GAAoB,kBAATA,EACT,MAAM,IAAIklC,UAAU,oCACf,GAAIllC,EAAO,EAChB,MAAM,IAAI0kC,WAAW,wCA4BzB,SAASM,EAAaP,EAAMzkC,GAG1B,GAFA8lC,EAAW9lC,GACXykC,EAAOD,EAAaC,EAAMzkC,EAAO,EAAI,EAAoB,EAAhB2lC,EAAQ3lC,KAC5CskC,EAAOC,oBACV,IAAK,IAAIpkC,EAAI,EAAGA,EAAIH,IAAQG,EAC1BskC,EAAKtkC,GAAK,EAGd,OAAOskC,EAwCT,SAASU,EAAeV,EAAM1jC,GAC5B,IAAIE,EAASF,EAAME,OAAS,EAAI,EAA4B,EAAxB0kC,EAAQ5kC,EAAME,QAClDwjC,EAAOD,EAAaC,EAAMxjC,GAC1B,IAAK,IAAId,EAAI,EAAGA,EAAIc,EAAQd,GAAK,EAC/BskC,EAAKtkC,GAAgB,IAAXY,EAAMZ,GAElB,OAAOskC,EA+DT,SAASkB,EAAS1kC,GAGhB,GAAIA,GAAUojC,IACZ,MAAM,IAAIK,WAAW,0DACaL,IAAaj/B,SAAS,IAAM,UAEhE,OAAgB,EAATnE,EAsFT,SAAS2M,EAAYy3B,EAAQC,GAC3B,GAAIhB,EAAOoB,SAASL,GAClB,OAAOA,EAAOpkC,OAEhB,GAA2B,qBAAhBsR,aAA6D,oBAAvBA,YAAYwzB,SACxDxzB,YAAYwzB,OAAOV,IAAWA,aAAkB9yB,aACnD,OAAO8yB,EAAOz3B,WAEM,kBAAXy3B,IACTA,EAAS,GAAKA,GAGhB,IAAI91B,EAAM81B,EAAOpkC,OACjB,GAAY,IAARsO,EAAW,OAAO,EAItB,IADA,IAAIy2B,GAAc,IAEhB,OAAQV,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO/1B,EACT,IAAK,OACL,IAAK,QACL,UAAKlN,EACH,OAAO4jC,EAAYZ,GAAQpkC,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANsO,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAO22B,EAAcb,GAAQpkC,OAC/B,QACE,GAAI+kC,EAAa,OAAOC,EAAYZ,GAAQpkC,OAC5CqkC,GAAY,GAAKA,GAAUa,cAC3BH,GAAc,GAMtB,SAASI,EAAcd,EAAU38B,EAAOgC,GACtC,IAAIq7B,GAAc,EAclB,SALc3jC,IAAVsG,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQo8B,KAAK9jC,OACf,MAAO,GAOT,SAJYoB,IAARsI,GAAqBA,EAAMo6B,KAAK9jC,UAClC0J,EAAMo6B,KAAK9jC,QAGT0J,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACThC,KAAW,GAGT,MAAO,GAKT,IAFK28B,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOe,EAAStB,KAAMp8B,EAAOgC,GAE/B,IAAK,OACL,IAAK,QACH,OAAO27B,EAAUvB,KAAMp8B,EAAOgC,GAEhC,IAAK,QACH,OAAO47B,EAAWxB,KAAMp8B,EAAOgC,GAEjC,IAAK,SACL,IAAK,SACH,OAAO67B,EAAYzB,KAAMp8B,EAAOgC,GAElC,IAAK,SACH,OAAO87B,EAAY1B,KAAMp8B,EAAOgC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO+7B,EAAa3B,KAAMp8B,EAAOgC,GAEnC,QACE,GAAIq7B,EAAa,MAAM,IAAId,UAAU,qBAAuBI,GAC5DA,GAAYA,EAAW,IAAIa,cAC3BH,GAAc,GAStB,SAASW,EAAM/lC,EAAGgiB,EAAGtV,GACnB,IAAInN,EAAIS,EAAEgiB,GACVhiB,EAAEgiB,GAAKhiB,EAAE0M,GACT1M,EAAE0M,GAAKnN,EAmIT,SAASymC,EAAsBxmC,EAAQlB,EAAKoF,EAAYghC,EAAUuB,GAEhE,GAAsB,IAAlBzmC,EAAOa,OAAc,OAAQ,EAmBjC,GAhB0B,kBAAfqD,GACTghC,EAAWhhC,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAEhBA,GAAcA,EACVwiC,MAAMxiC,KAERA,EAAauiC,EAAM,EAAKzmC,EAAOa,OAAS,GAItCqD,EAAa,IAAGA,EAAalE,EAAOa,OAASqD,GAC7CA,GAAclE,EAAOa,OAAQ,CAC/B,GAAI4lC,EAAK,OAAQ,EACZviC,EAAalE,EAAOa,OAAS,OAC7B,GAAIqD,EAAa,EAAG,CACzB,IAAIuiC,EACC,OAAQ,EADJviC,EAAa,EAUxB,GALmB,kBAARpF,IACTA,EAAMolC,EAAOW,KAAK/lC,EAAKomC,IAIrBhB,EAAOoB,SAASxmC,GAElB,OAAmB,IAAfA,EAAI+B,QACE,EAEH8lC,EAAa3mC,EAAQlB,EAAKoF,EAAYghC,EAAUuB,GAClD,GAAmB,kBAAR3nC,EAEhB,OADAA,GAAY,IACRolC,EAAOC,qBACiC,oBAAjCvjC,WAAW4jC,UAAUn7B,QAC1Bo9B,EACK7lC,WAAW4jC,UAAUn7B,QAAQu9B,KAAK5mC,EAAQlB,EAAKoF,GAE/CtD,WAAW4jC,UAAUqC,YAAYD,KAAK5mC,EAAQlB,EAAKoF,GAGvDyiC,EAAa3mC,EAAQ,CAAElB,GAAOoF,EAAYghC,EAAUuB,GAG7D,MAAM,IAAI3B,UAAU,wCAGtB,SAAS6B,EAAc53B,EAAKjQ,EAAKoF,EAAYghC,EAAUuB,GACrD,IA0BI1mC,EA1BA+mC,EAAY,EACZC,EAAYh4B,EAAIlO,OAChBmmC,EAAYloC,EAAI+B,OAEpB,QAAiBoB,IAAbijC,IAEe,UADjBA,EAAWxgC,OAAOwgC,GAAUa,gBACY,UAAbb,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIn2B,EAAIlO,OAAS,GAAK/B,EAAI+B,OAAS,EACjC,OAAQ,EAEVimC,EAAY,EACZC,GAAa,EACbC,GAAa,EACb9iC,GAAc,EAIlB,SAASsF,EAAMy9B,EAAKlnC,GAClB,OAAkB,IAAd+mC,EACKG,EAAIlnC,GAEJknC,EAAIC,aAAannC,EAAI+mC,GAKhC,GAAIL,EAAK,CACP,IAAIU,GAAc,EAClB,IAAKpnC,EAAImE,EAAYnE,EAAIgnC,EAAWhnC,IAClC,GAAIyJ,EAAKuF,EAAKhP,KAAOyJ,EAAK1K,GAAqB,IAAhBqoC,EAAoB,EAAIpnC,EAAIonC,IAEzD,IADoB,IAAhBA,IAAmBA,EAAapnC,GAChCA,EAAIonC,EAAa,IAAMH,EAAW,OAAOG,EAAaL,OAEtC,IAAhBK,IAAmBpnC,GAAKA,EAAIonC,GAChCA,GAAc,OAKlB,IADIjjC,EAAa8iC,EAAYD,IAAW7iC,EAAa6iC,EAAYC,GAC5DjnC,EAAImE,EAAYnE,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAIqnC,GAAQ,EACHl9B,EAAI,EAAGA,EAAI88B,EAAW98B,IAC7B,GAAIV,EAAKuF,EAAKhP,EAAImK,KAAOV,EAAK1K,EAAKoL,GAAI,CACrCk9B,GAAQ,EACR,MAGJ,GAAIA,EAAO,OAAOrnC,EAItB,OAAQ,EAeV,SAASsnC,EAAUJ,EAAKhC,EAAQvkC,EAAQG,GACtCH,EAAS4mC,OAAO5mC,IAAW,EAC3B,IAAI6mC,EAAYN,EAAIpmC,OAASH,EACxBG,GAGHA,EAASymC,OAAOzmC,IACH0mC,IACX1mC,EAAS0mC,GAJX1mC,EAAS0mC,EASX,IAAIC,EAASvC,EAAOpkC,OACpB,GAAI2mC,EAAS,IAAM,EAAG,MAAM,IAAI1C,UAAU,sBAEtCjkC,EAAS2mC,EAAS,IACpB3mC,EAAS2mC,EAAS,GAEpB,IAAK,IAAIznC,EAAI,EAAGA,EAAIc,IAAUd,EAAG,CAC/B,IAAI0nC,EAASC,SAASzC,EAAOnd,OAAW,EAAJ/nB,EAAO,GAAI,IAC/C,GAAI2mC,MAAMe,GAAS,OAAO1nC,EAC1BknC,EAAIvmC,EAASX,GAAK0nC,EAEpB,OAAO1nC,EAGT,SAAS4nC,EAAWV,EAAKhC,EAAQvkC,EAAQG,GACvC,OAAO+mC,EAAW/B,EAAYZ,EAAQgC,EAAIpmC,OAASH,GAASumC,EAAKvmC,EAAQG,GAG3E,SAASgnC,EAAYZ,EAAKhC,EAAQvkC,EAAQG,GACxC,OAAO+mC,EAq6BT,SAAuBE,GAErB,IADA,IAAIC,EAAY,GACPhoC,EAAI,EAAGA,EAAI+nC,EAAIjnC,SAAUd,EAEhCgoC,EAAUliC,KAAyB,IAApBiiC,EAAIz4B,WAAWtP,IAEhC,OAAOgoC,EA36BWC,CAAa/C,GAASgC,EAAKvmC,EAAQG,GAGvD,SAASonC,EAAahB,EAAKhC,EAAQvkC,EAAQG,GACzC,OAAOgnC,EAAWZ,EAAKhC,EAAQvkC,EAAQG,GAGzC,SAASqnC,EAAajB,EAAKhC,EAAQvkC,EAAQG,GACzC,OAAO+mC,EAAW9B,EAAcb,GAASgC,EAAKvmC,EAAQG,GAGxD,SAASsnC,EAAWlB,EAAKhC,EAAQvkC,EAAQG,GACvC,OAAO+mC,EAk6BT,SAAyBE,EAAKroB,GAG5B,IAFA,IAAIzV,EAAGo+B,EAAIC,EACPN,EAAY,GACPhoC,EAAI,EAAGA,EAAI+nC,EAAIjnC,WACjB4e,GAAS,GAAK,KADa1f,EAIhCqoC,GADAp+B,EAAI89B,EAAIz4B,WAAWtP,KACT,EACVsoC,EAAKr+B,EAAI,IACT+9B,EAAUliC,KAAKwiC,GACfN,EAAUliC,KAAKuiC,GAGjB,OAAOL,EA/6BWO,CAAerD,EAAQgC,EAAIpmC,OAASH,GAASumC,EAAKvmC,EAAQG,GAkF9E,SAASwlC,EAAaY,EAAK1+B,EAAOgC,GAChC,OAAc,IAAVhC,GAAegC,IAAQ08B,EAAIpmC,OACtBijC,EAAOphC,cAAcukC,GAErBnD,EAAOphC,cAAcukC,EAAIplC,MAAM0G,EAAOgC,IAIjD,SAAS27B,EAAWe,EAAK1+B,EAAOgC,GAC9BA,EAAMmC,KAAKjN,IAAIwnC,EAAIpmC,OAAQ0J,GAI3B,IAHA,IAAIg+B,EAAM,GAENxoC,EAAIwI,EACDxI,EAAIwK,GAAK,CACd,IAQMi+B,EAAYC,EAAWC,EAAYC,EARrCC,EAAY3B,EAAIlnC,GAChB8oC,EAAY,KACZC,EAAoBF,EAAY,IAAQ,EACvCA,EAAY,IAAQ,EACpBA,EAAY,IAAQ,EACrB,EAEJ,GAAI7oC,EAAI+oC,GAAoBv+B,EAG1B,OAAQu+B,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EAEyB,OAAV,KADlBJ,EAAavB,EAAIlnC,EAAI,OAEnB4oC,GAA6B,GAAZC,IAAqB,EAAoB,GAAbJ,GACzB,MAClBK,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAavB,EAAIlnC,EAAI,GACrB0oC,EAAYxB,EAAIlnC,EAAI,GACQ,OAAV,IAAbyoC,IAAsD,OAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAmB,GAAZC,GACrD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAavB,EAAIlnC,EAAI,GACrB0oC,EAAYxB,EAAIlnC,EAAI,GACpB2oC,EAAazB,EAAIlnC,EAAI,GACO,OAAV,IAAbyoC,IAAsD,OAAV,IAAZC,IAAsD,OAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,GAClF,OAAUC,EAAgB,UAC5CE,EAAYF,GAMJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbN,EAAI1iC,KAAKgjC,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBN,EAAI1iC,KAAKgjC,GACT9oC,GAAK+oC,EAGP,OAQF,SAAgCC,GAC9B,IAAI55B,EAAM45B,EAAWloC,OACrB,GAAIsO,GAAO65B,EACT,OAAOtkC,OAAOC,aAAaskC,MAAMvkC,OAAQqkC,GAI3C,IAAIR,EAAM,GACNxoC,EAAI,EACR,KAAOA,EAAIoP,GACTo5B,GAAO7jC,OAAOC,aAAaskC,MACzBvkC,OACAqkC,EAAWlnC,MAAM9B,EAAGA,GAAKipC,IAG7B,OAAOT,EAvBAW,CAAsBX,GA98B/Bh6B,EAAQ21B,OAASA,EACjB31B,EAAQ46B,WAoTR,SAAqBtoC,IACdA,GAAUA,IACbA,EAAS,GAEX,OAAOqjC,EAAOkF,OAAOvoC,IAvTvB0N,EAAQ86B,kBAAoB,GA0B5BnF,EAAOC,yBAAqDliC,IAA/BqnC,EAAOnF,oBAChCmF,EAAOnF,oBAQX,WACE,IACE,IAAIp1B,EAAM,IAAInO,WAAW,GAEzB,OADAmO,EAAIw1B,UAAY,CAACA,UAAW3jC,WAAW4jC,UAAW+E,IAAK,WAAc,OAAO,KACvD,KAAdx6B,EAAIw6B,OACiB,oBAAjBx6B,EAAIy6B,UACuB,IAAlCz6B,EAAIy6B,SAAS,EAAG,GAAGh8B,WACvB,MAAO/D,GACP,OAAO,GAfPggC,GAKJl7B,EAAQ01B,WAAaA,IAkErBC,EAAOwF,SAAW,KAGlBxF,EAAOyF,SAAW,SAAU56B,GAE1B,OADAA,EAAIw1B,UAAYL,EAAOM,UAChBz1B,GA2BTm1B,EAAOW,KAAO,SAAU9lC,EAAO2lC,EAAkB7jC,GAC/C,OAAOgkC,EAAK,KAAM9lC,EAAO2lC,EAAkB7jC,IAGzCqjC,EAAOC,sBACTD,EAAOM,UAAUD,UAAY3jC,WAAW4jC,UACxCN,EAAOK,UAAY3jC,WACG,qBAAXgpC,QAA0BA,OAAOC,SACxC3F,EAAO0F,OAAOC,WAAa3F,GAE7BlmC,OAAO8rC,eAAe5F,EAAQ0F,OAAOC,QAAS,CAC5C9qC,MAAO,KACPgrC,cAAc,KAiCpB7F,EAAOkF,MAAQ,SAAUxpC,EAAMoqC,EAAM9E,GACnC,OArBF,SAAgBb,EAAMzkC,EAAMoqC,EAAM9E,GAEhC,OADAQ,EAAW9lC,GACPA,GAAQ,EACHwkC,EAAaC,EAAMzkC,QAEfqC,IAAT+nC,EAIyB,kBAAb9E,EACVd,EAAaC,EAAMzkC,GAAMoqC,KAAKA,EAAM9E,GACpCd,EAAaC,EAAMzkC,GAAMoqC,KAAKA,GAE7B5F,EAAaC,EAAMzkC,GAQnBwpC,CAAM,KAAMxpC,EAAMoqC,EAAM9E,IAiBjChB,EAAOU,YAAc,SAAUhlC,GAC7B,OAAOglC,EAAY,KAAMhlC,IAK3BskC,EAAO+F,gBAAkB,SAAUrqC,GACjC,OAAOglC,EAAY,KAAMhlC,IAiH3BskC,EAAOoB,SAAW,SAAmB9kC,GACnC,QAAe,MAALA,IAAaA,EAAE0pC,YAG3BhG,EAAOiG,QAAU,SAAkBrlC,EAAGtE,GACpC,IAAK0jC,EAAOoB,SAASxgC,KAAOo/B,EAAOoB,SAAS9kC,GAC1C,MAAM,IAAIskC,UAAU,6BAGtB,GAAIhgC,IAAMtE,EAAG,OAAO,EAKpB,IAHA,IAAID,EAAIuE,EAAEjE,OACNR,EAAIG,EAAEK,OAEDd,EAAI,EAAGoP,EAAMzC,KAAKjN,IAAIc,EAAGF,GAAIN,EAAIoP,IAAOpP,EAC/C,GAAI+E,EAAE/E,KAAOS,EAAET,GAAI,CACjBQ,EAAIuE,EAAE/E,GACNM,EAAIG,EAAET,GACN,MAIJ,OAAIQ,EAAIF,GAAW,EACfA,EAAIE,EAAU,EACX,GAGT2jC,EAAOiB,WAAa,SAAqBD,GACvC,OAAQxgC,OAAOwgC,GAAUa,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,IAIb7B,EAAOkG,OAAS,SAAiBC,EAAMxpC,GACrC,IAAKkuB,EAAQsb,GACX,MAAM,IAAIvF,UAAU,+CAGtB,GAAoB,IAAhBuF,EAAKxpC,OACP,OAAOqjC,EAAOkF,MAAM,GAGtB,IAAIrpC,EACJ,QAAekC,IAAXpB,EAEF,IADAA,EAAS,EACJd,EAAI,EAAGA,EAAIsqC,EAAKxpC,SAAUd,EAC7Bc,GAAUwpC,EAAKtqC,GAAGc,OAItB,IAAIb,EAASkkC,EAAOU,YAAY/jC,GAC5BypC,EAAM,EACV,IAAKvqC,EAAI,EAAGA,EAAIsqC,EAAKxpC,SAAUd,EAAG,CAChC,IAAIknC,EAAMoD,EAAKtqC,GACf,IAAKmkC,EAAOoB,SAAS2B,GACnB,MAAM,IAAInC,UAAU,+CAEtBmC,EAAIzB,KAAKxlC,EAAQsqC,GACjBA,GAAOrD,EAAIpmC,OAEb,OAAOb,GA8CTkkC,EAAO12B,WAAaA,EA0EpB02B,EAAOM,UAAU0F,WAAY,EAQ7BhG,EAAOM,UAAU+F,OAAS,WACxB,IAAIp7B,EAAMw1B,KAAK9jC,OACf,GAAIsO,EAAM,IAAM,EACd,MAAM,IAAIm1B,WAAW,6CAEvB,IAAK,IAAIvkC,EAAI,EAAGA,EAAIoP,EAAKpP,GAAK,EAC5BwmC,EAAK5B,KAAM5kC,EAAGA,EAAI,GAEpB,OAAO4kC,MAGTT,EAAOM,UAAUgG,OAAS,WACxB,IAAIr7B,EAAMw1B,KAAK9jC,OACf,GAAIsO,EAAM,IAAM,EACd,MAAM,IAAIm1B,WAAW,6CAEvB,IAAK,IAAIvkC,EAAI,EAAGA,EAAIoP,EAAKpP,GAAK,EAC5BwmC,EAAK5B,KAAM5kC,EAAGA,EAAI,GAClBwmC,EAAK5B,KAAM5kC,EAAI,EAAGA,EAAI,GAExB,OAAO4kC,MAGTT,EAAOM,UAAUiG,OAAS,WACxB,IAAIt7B,EAAMw1B,KAAK9jC,OACf,GAAIsO,EAAM,IAAM,EACd,MAAM,IAAIm1B,WAAW,6CAEvB,IAAK,IAAIvkC,EAAI,EAAGA,EAAIoP,EAAKpP,GAAK,EAC5BwmC,EAAK5B,KAAM5kC,EAAGA,EAAI,GAClBwmC,EAAK5B,KAAM5kC,EAAI,EAAGA,EAAI,GACtBwmC,EAAK5B,KAAM5kC,EAAI,EAAGA,EAAI,GACtBwmC,EAAK5B,KAAM5kC,EAAI,EAAGA,EAAI,GAExB,OAAO4kC,MAGTT,EAAOM,UAAUx/B,SAAW,WAC1B,IAAInE,EAAuB,EAAd8jC,KAAK9jC,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArB6pC,UAAU7pC,OAAqBqlC,EAAUvB,KAAM,EAAG9jC,GAC/CmlC,EAAaiD,MAAMtE,KAAM+F,YAGlCxG,EAAOM,UAAUmG,OAAS,SAAiBnqC,GACzC,IAAK0jC,EAAOoB,SAAS9kC,GAAI,MAAM,IAAIskC,UAAU,6BAC7C,OAAIH,OAASnkC,GACsB,IAA5B0jC,EAAOiG,QAAQxF,KAAMnkC,IAG9B0jC,EAAOM,UAAUoG,QAAU,WACzB,IAAI9C,EAAM,GACNpoC,EAAM6O,EAAQ86B,kBAKlB,OAJI1E,KAAK9jC,OAAS,IAChBinC,EAAMnD,KAAK3/B,SAAS,MAAO,EAAGtF,GAAKmrC,MAAM,SAASh7B,KAAK,KACnD80B,KAAK9jC,OAASnB,IAAKooC,GAAO,UAEzB,WAAaA,EAAM,KAG5B5D,EAAOM,UAAU2F,QAAU,SAAkBjhC,EAAQX,EAAOgC,EAAKugC,EAAWC,GAC1E,IAAK7G,EAAOoB,SAASp8B,GACnB,MAAM,IAAI47B,UAAU,6BAgBtB,QAbc7iC,IAAVsG,IACFA,EAAQ,QAEEtG,IAARsI,IACFA,EAAMrB,EAASA,EAAOrI,OAAS,QAEfoB,IAAd6oC,IACFA,EAAY,QAEE7oC,IAAZ8oC,IACFA,EAAUpG,KAAK9jC,QAGb0H,EAAQ,GAAKgC,EAAMrB,EAAOrI,QAAUiqC,EAAY,GAAKC,EAAUpG,KAAK9jC,OACtE,MAAM,IAAIyjC,WAAW,sBAGvB,GAAIwG,GAAaC,GAAWxiC,GAASgC,EACnC,OAAO,EAET,GAAIugC,GAAaC,EACf,OAAQ,EAEV,GAAIxiC,GAASgC,EACX,OAAO,EAQT,GAAIo6B,OAASz7B,EAAQ,OAAO,EAS5B,IAPA,IAAI3I,GAJJwqC,KAAa,IADbD,KAAe,GAMXzqC,GAPJkK,KAAS,IADThC,KAAW,GASP4G,EAAMzC,KAAKjN,IAAIc,EAAGF,GAElB2qC,EAAWrG,KAAK9iC,MAAMipC,EAAWC,GACjCE,EAAa/hC,EAAOrH,MAAM0G,EAAOgC,GAE5BxK,EAAI,EAAGA,EAAIoP,IAAOpP,EACzB,GAAIirC,EAASjrC,KAAOkrC,EAAWlrC,GAAI,CACjCQ,EAAIyqC,EAASjrC,GACbM,EAAI4qC,EAAWlrC,GACf,MAIJ,OAAIQ,EAAIF,GAAW,EACfA,EAAIE,EAAU,EACX,GA6HT2jC,EAAOM,UAAU0G,SAAW,SAAmBpsC,EAAKoF,EAAYghC,GAC9D,OAAoD,IAA7CP,KAAKt7B,QAAQvK,EAAKoF,EAAYghC,IAGvChB,EAAOM,UAAUn7B,QAAU,SAAkBvK,EAAKoF,EAAYghC,GAC5D,OAAOsB,EAAqB7B,KAAM7lC,EAAKoF,EAAYghC,GAAU,IAG/DhB,EAAOM,UAAUqC,YAAc,SAAsB/nC,EAAKoF,EAAYghC,GACpE,OAAOsB,EAAqB7B,KAAM7lC,EAAKoF,EAAYghC,GAAU,IAkD/DhB,EAAOM,UAAU3yB,MAAQ,SAAgBozB,EAAQvkC,EAAQG,EAAQqkC,GAE/D,QAAejjC,IAAXvB,EACFwkC,EAAW,OACXrkC,EAAS8jC,KAAK9jC,OACdH,EAAS,OAEJ,QAAeuB,IAAXpB,GAA0C,kBAAXH,EACxCwkC,EAAWxkC,EACXG,EAAS8jC,KAAK9jC,OACdH,EAAS,MAEJ,KAAIyqC,SAASzqC,GAWlB,MAAM,IAAIzB,MACR,2EAXFyB,GAAkB,EACdyqC,SAAStqC,IACXA,GAAkB,OACDoB,IAAbijC,IAAwBA,EAAW,UAEvCA,EAAWrkC,EACXA,OAASoB,GASb,IAAIslC,EAAY5C,KAAK9jC,OAASH,EAG9B,SAFeuB,IAAXpB,GAAwBA,EAAS0mC,KAAW1mC,EAAS0mC,GAEpDtC,EAAOpkC,OAAS,IAAMA,EAAS,GAAKH,EAAS,IAAOA,EAASikC,KAAK9jC,OACrE,MAAM,IAAIyjC,WAAW,0CAGlBY,IAAUA,EAAW,QAG1B,IADA,IAAIU,GAAc,IAEhB,OAAQV,GACN,IAAK,MACH,OAAOmC,EAAS1C,KAAMM,EAAQvkC,EAAQG,GAExC,IAAK,OACL,IAAK,QACH,OAAO8mC,EAAUhD,KAAMM,EAAQvkC,EAAQG,GAEzC,IAAK,QACH,OAAOgnC,EAAWlD,KAAMM,EAAQvkC,EAAQG,GAE1C,IAAK,SACL,IAAK,SACH,OAAOonC,EAAYtD,KAAMM,EAAQvkC,EAAQG,GAE3C,IAAK,SAEH,OAAOqnC,EAAYvD,KAAMM,EAAQvkC,EAAQG,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOsnC,EAAUxD,KAAMM,EAAQvkC,EAAQG,GAEzC,QACE,GAAI+kC,EAAa,MAAM,IAAId,UAAU,qBAAuBI,GAC5DA,GAAY,GAAKA,GAAUa,cAC3BH,GAAc,IAKtB1B,EAAOM,UAAU4G,OAAS,WACxB,MAAO,CACL3/B,KAAM,SACN9L,KAAMmQ,MAAM00B,UAAU3iC,MAAM+kC,KAAKjC,KAAK0G,MAAQ1G,KAAM,KAwFxD,IAAIqE,EAAuB,KAoB3B,SAAS7C,EAAYc,EAAK1+B,EAAOgC,GAC/B,IAAI+gC,EAAM,GACV/gC,EAAMmC,KAAKjN,IAAIwnC,EAAIpmC,OAAQ0J,GAE3B,IAAK,IAAIxK,EAAIwI,EAAOxI,EAAIwK,IAAOxK,EAC7BurC,GAAO5mC,OAAOC,aAAsB,IAATsiC,EAAIlnC,IAEjC,OAAOurC,EAGT,SAASlF,EAAaa,EAAK1+B,EAAOgC,GAChC,IAAI+gC,EAAM,GACV/gC,EAAMmC,KAAKjN,IAAIwnC,EAAIpmC,OAAQ0J,GAE3B,IAAK,IAAIxK,EAAIwI,EAAOxI,EAAIwK,IAAOxK,EAC7BurC,GAAO5mC,OAAOC,aAAasiC,EAAIlnC,IAEjC,OAAOurC,EAGT,SAASrF,EAAUgB,EAAK1+B,EAAOgC,GAC7B,IAAI4E,EAAM83B,EAAIpmC,SAET0H,GAASA,EAAQ,KAAGA,EAAQ,KAC5BgC,GAAOA,EAAM,GAAKA,EAAM4E,KAAK5E,EAAM4E,GAGxC,IADA,IAAI0M,EAAM,GACD9b,EAAIwI,EAAOxI,EAAIwK,IAAOxK,EAC7B8b,GAAO0vB,EAAMtE,EAAIlnC,IAEnB,OAAO8b,EAGT,SAASyqB,EAAcW,EAAK1+B,EAAOgC,GAGjC,IAFA,IAAIkC,EAAQw6B,EAAIplC,MAAM0G,EAAOgC,GACzBg+B,EAAM,GACDxoC,EAAI,EAAGA,EAAI0M,EAAM5L,OAAQd,GAAK,EACrCwoC,GAAO7jC,OAAOC,aAAa8H,EAAM1M,GAAoB,IAAf0M,EAAM1M,EAAI,IAElD,OAAOwoC,EA0CT,SAASiD,EAAa9qC,EAAQ+qC,EAAK5qC,GACjC,GAAKH,EAAS,IAAO,GAAKA,EAAS,EAAG,MAAM,IAAI4jC,WAAW,sBAC3D,GAAI5jC,EAAS+qC,EAAM5qC,EAAQ,MAAM,IAAIyjC,WAAW,yCA+JlD,SAASoH,EAAUzE,EAAKloC,EAAO2B,EAAQ+qC,EAAK/rC,EAAKD,GAC/C,IAAKykC,EAAOoB,SAAS2B,GAAM,MAAM,IAAInC,UAAU,+CAC/C,GAAI/lC,EAAQW,GAAOX,EAAQU,EAAK,MAAM,IAAI6kC,WAAW,qCACrD,GAAI5jC,EAAS+qC,EAAMxE,EAAIpmC,OAAQ,MAAM,IAAIyjC,WAAW,sBAkDtD,SAASqH,EAAmB1E,EAAKloC,EAAO2B,EAAQkrC,GAC1C7sC,EAAQ,IAAGA,EAAQ,MAASA,EAAQ,GACxC,IAAK,IAAIgB,EAAI,EAAGmK,EAAIwC,KAAKjN,IAAIwnC,EAAIpmC,OAASH,EAAQ,GAAIX,EAAImK,IAAKnK,EAC7DknC,EAAIvmC,EAASX,IAAMhB,EAAS,KAAS,GAAK6sC,EAAe7rC,EAAI,EAAIA,MAClC,GAA5B6rC,EAAe7rC,EAAI,EAAIA,GA8B9B,SAAS8rC,EAAmB5E,EAAKloC,EAAO2B,EAAQkrC,GAC1C7sC,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C,IAAK,IAAIgB,EAAI,EAAGmK,EAAIwC,KAAKjN,IAAIwnC,EAAIpmC,OAASH,EAAQ,GAAIX,EAAImK,IAAKnK,EAC7DknC,EAAIvmC,EAASX,GAAMhB,IAAuC,GAA5B6sC,EAAe7rC,EAAI,EAAIA,GAAU,IAmJnE,SAAS+rC,EAAc7E,EAAKloC,EAAO2B,EAAQ+qC,EAAK/rC,EAAKD,GACnD,GAAIiB,EAAS+qC,EAAMxE,EAAIpmC,OAAQ,MAAM,IAAIyjC,WAAW,sBACpD,GAAI5jC,EAAS,EAAG,MAAM,IAAI4jC,WAAW,sBAGvC,SAASyH,EAAY9E,EAAKloC,EAAO2B,EAAQkrC,EAAcI,GAKrD,OAJKA,GACHF,EAAa7E,EAAKloC,EAAO2B,EAAQ,GAEnCsjC,EAAQnyB,MAAMo1B,EAAKloC,EAAO2B,EAAQkrC,EAAc,GAAI,GAC7ClrC,EAAS,EAWlB,SAASurC,EAAahF,EAAKloC,EAAO2B,EAAQkrC,EAAcI,GAKtD,OAJKA,GACHF,EAAa7E,EAAKloC,EAAO2B,EAAQ,GAEnCsjC,EAAQnyB,MAAMo1B,EAAKloC,EAAO2B,EAAQkrC,EAAc,GAAI,GAC7ClrC,EAAS,EA/clBwjC,EAAOM,UAAU3iC,MAAQ,SAAgB0G,EAAOgC,GAC9C,IAoBI2hC,EApBA/8B,EAAMw1B,KAAK9jC,OAqBf,IApBA0H,IAAUA,GAGE,GACVA,GAAS4G,GACG,IAAG5G,EAAQ,GACdA,EAAQ4G,IACjB5G,EAAQ4G,IANV5E,OAActI,IAARsI,EAAoB4E,IAAQ5E,GASxB,GACRA,GAAO4E,GACG,IAAG5E,EAAM,GACVA,EAAM4E,IACf5E,EAAM4E,GAGJ5E,EAAMhC,IAAOgC,EAAMhC,GAGnB27B,EAAOC,qBACT+H,EAASvH,KAAK6E,SAASjhC,EAAOgC,IACvBg6B,UAAYL,EAAOM,cACrB,CACL,IAAI2H,EAAW5hC,EAAMhC,EACrB2jC,EAAS,IAAIhI,EAAOiI,OAAUlqC,GAC9B,IAAK,IAAIlC,EAAI,EAAGA,EAAIosC,IAAYpsC,EAC9BmsC,EAAOnsC,GAAK4kC,KAAK5kC,EAAIwI,GAIzB,OAAO2jC,GAWThI,EAAOM,UAAU4H,WAAa,SAAqB1rC,EAAQ8M,EAAYw+B,GACrEtrC,GAAkB,EAClB8M,GAA0B,EACrBw+B,GAAUR,EAAY9qC,EAAQ8M,EAAYm3B,KAAK9jC,QAKpD,IAHA,IAAI/B,EAAM6lC,KAAKjkC,GACX2rC,EAAM,EACNtsC,EAAI,IACCA,EAAIyN,IAAe6+B,GAAO,MACjCvtC,GAAO6lC,KAAKjkC,EAASX,GAAKssC,EAG5B,OAAOvtC,GAGTolC,EAAOM,UAAU8H,WAAa,SAAqB5rC,EAAQ8M,EAAYw+B,GACrEtrC,GAAkB,EAClB8M,GAA0B,EACrBw+B,GACHR,EAAY9qC,EAAQ8M,EAAYm3B,KAAK9jC,QAKvC,IAFA,IAAI/B,EAAM6lC,KAAKjkC,IAAW8M,GACtB6+B,EAAM,EACH7+B,EAAa,IAAM6+B,GAAO,MAC/BvtC,GAAO6lC,KAAKjkC,IAAW8M,GAAc6+B,EAGvC,OAAOvtC,GAGTolC,EAAOM,UAAU+H,UAAY,SAAoB7rC,EAAQsrC,GAEvD,OADKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QACpC8jC,KAAKjkC,IAGdwjC,EAAOM,UAAUgI,aAAe,SAAuB9rC,EAAQsrC,GAE7D,OADKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QACpC8jC,KAAKjkC,GAAWikC,KAAKjkC,EAAS,IAAM,GAG7CwjC,EAAOM,UAAU0C,aAAe,SAAuBxmC,EAAQsrC,GAE7D,OADKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QACnC8jC,KAAKjkC,IAAW,EAAKikC,KAAKjkC,EAAS,IAG7CwjC,EAAOM,UAAUiI,aAAe,SAAuB/rC,EAAQsrC,GAG7D,OAFKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,SAElC8jC,KAAKjkC,GACTikC,KAAKjkC,EAAS,IAAM,EACpBikC,KAAKjkC,EAAS,IAAM,IACD,SAAnBikC,KAAKjkC,EAAS,IAGrBwjC,EAAOM,UAAUkI,aAAe,SAAuBhsC,EAAQsrC,GAG7D,OAFKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QAEpB,SAAf8jC,KAAKjkC,IACTikC,KAAKjkC,EAAS,IAAM,GACrBikC,KAAKjkC,EAAS,IAAM,EACrBikC,KAAKjkC,EAAS,KAGlBwjC,EAAOM,UAAUmI,UAAY,SAAoBjsC,EAAQ8M,EAAYw+B,GACnEtrC,GAAkB,EAClB8M,GAA0B,EACrBw+B,GAAUR,EAAY9qC,EAAQ8M,EAAYm3B,KAAK9jC,QAKpD,IAHA,IAAI/B,EAAM6lC,KAAKjkC,GACX2rC,EAAM,EACNtsC,EAAI,IACCA,EAAIyN,IAAe6+B,GAAO,MACjCvtC,GAAO6lC,KAAKjkC,EAASX,GAAKssC,EAM5B,OAFIvtC,IAFJutC,GAAO,OAESvtC,GAAO4N,KAAKkgC,IAAI,EAAG,EAAIp/B,IAEhC1O,GAGTolC,EAAOM,UAAUqI,UAAY,SAAoBnsC,EAAQ8M,EAAYw+B,GACnEtrC,GAAkB,EAClB8M,GAA0B,EACrBw+B,GAAUR,EAAY9qC,EAAQ8M,EAAYm3B,KAAK9jC,QAKpD,IAHA,IAAId,EAAIyN,EACJ6+B,EAAM,EACNvtC,EAAM6lC,KAAKjkC,IAAWX,GACnBA,EAAI,IAAMssC,GAAO,MACtBvtC,GAAO6lC,KAAKjkC,IAAWX,GAAKssC,EAM9B,OAFIvtC,IAFJutC,GAAO,OAESvtC,GAAO4N,KAAKkgC,IAAI,EAAG,EAAIp/B,IAEhC1O,GAGTolC,EAAOM,UAAUsI,SAAW,SAAmBpsC,EAAQsrC,GAErD,OADKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QACtB,IAAf8jC,KAAKjkC,IAC0B,GAA5B,IAAOikC,KAAKjkC,GAAU,GADKikC,KAAKjkC,IAI3CwjC,EAAOM,UAAUuI,YAAc,SAAsBrsC,EAAQsrC,GACtDA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QAC3C,IAAI/B,EAAM6lC,KAAKjkC,GAAWikC,KAAKjkC,EAAS,IAAM,EAC9C,OAAc,MAAN5B,EAAsB,WAANA,EAAmBA,GAG7ColC,EAAOM,UAAUwI,YAAc,SAAsBtsC,EAAQsrC,GACtDA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QAC3C,IAAI/B,EAAM6lC,KAAKjkC,EAAS,GAAMikC,KAAKjkC,IAAW,EAC9C,OAAc,MAAN5B,EAAsB,WAANA,EAAmBA,GAG7ColC,EAAOM,UAAUzK,YAAc,SAAsBr5B,EAAQsrC,GAG3D,OAFKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QAEnC8jC,KAAKjkC,GACVikC,KAAKjkC,EAAS,IAAM,EACpBikC,KAAKjkC,EAAS,IAAM,GACpBikC,KAAKjkC,EAAS,IAAM,IAGzBwjC,EAAOM,UAAUyI,YAAc,SAAsBvsC,EAAQsrC,GAG3D,OAFKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QAEnC8jC,KAAKjkC,IAAW,GACrBikC,KAAKjkC,EAAS,IAAM,GACpBikC,KAAKjkC,EAAS,IAAM,EACpBikC,KAAKjkC,EAAS,IAGnBwjC,EAAOM,UAAU0I,YAAc,SAAsBxsC,EAAQsrC,GAE3D,OADKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QACpCmjC,EAAQx6B,KAAKm7B,KAAMjkC,GAAQ,EAAM,GAAI,IAG9CwjC,EAAOM,UAAU2I,YAAc,SAAsBzsC,EAAQsrC,GAE3D,OADKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QACpCmjC,EAAQx6B,KAAKm7B,KAAMjkC,GAAQ,EAAO,GAAI,IAG/CwjC,EAAOM,UAAU4I,aAAe,SAAuB1sC,EAAQsrC,GAE7D,OADKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QACpCmjC,EAAQx6B,KAAKm7B,KAAMjkC,GAAQ,EAAM,GAAI,IAG9CwjC,EAAOM,UAAU6I,aAAe,SAAuB3sC,EAAQsrC,GAE7D,OADKA,GAAUR,EAAY9qC,EAAQ,EAAGikC,KAAK9jC,QACpCmjC,EAAQx6B,KAAKm7B,KAAMjkC,GAAQ,EAAO,GAAI,IAS/CwjC,EAAOM,UAAU8I,YAAc,SAAsBvuC,EAAO2B,EAAQ8M,EAAYw+B,IAC9EjtC,GAASA,EACT2B,GAAkB,EAClB8M,GAA0B,EACrBw+B,IAEHN,EAAS/G,KAAM5lC,EAAO2B,EAAQ8M,EADfd,KAAKkgC,IAAI,EAAG,EAAIp/B,GAAc,EACO,GAGtD,IAAI6+B,EAAM,EACNtsC,EAAI,EAER,IADA4kC,KAAKjkC,GAAkB,IAAR3B,IACNgB,EAAIyN,IAAe6+B,GAAO,MACjC1H,KAAKjkC,EAASX,GAAMhB,EAAQstC,EAAO,IAGrC,OAAO3rC,EAAS8M,GAGlB02B,EAAOM,UAAU+I,YAAc,SAAsBxuC,EAAO2B,EAAQ8M,EAAYw+B,IAC9EjtC,GAASA,EACT2B,GAAkB,EAClB8M,GAA0B,EACrBw+B,IAEHN,EAAS/G,KAAM5lC,EAAO2B,EAAQ8M,EADfd,KAAKkgC,IAAI,EAAG,EAAIp/B,GAAc,EACO,GAGtD,IAAIzN,EAAIyN,EAAa,EACjB6+B,EAAM,EAEV,IADA1H,KAAKjkC,EAASX,GAAa,IAARhB,IACVgB,GAAK,IAAMssC,GAAO,MACzB1H,KAAKjkC,EAASX,GAAMhB,EAAQstC,EAAO,IAGrC,OAAO3rC,EAAS8M,GAGlB02B,EAAOM,UAAUgJ,WAAa,SAAqBzuC,EAAO2B,EAAQsrC,GAMhE,OALAjtC,GAASA,EACT2B,GAAkB,EACbsrC,GAAUN,EAAS/G,KAAM5lC,EAAO2B,EAAQ,EAAG,IAAM,GACjDwjC,EAAOC,sBAAqBplC,EAAQ2N,KAAK+F,MAAM1T,IACpD4lC,KAAKjkC,GAAmB,IAAR3B,EACT2B,EAAS,GAWlBwjC,EAAOM,UAAUiJ,cAAgB,SAAwB1uC,EAAO2B,EAAQsrC,GAUtE,OATAjtC,GAASA,EACT2B,GAAkB,EACbsrC,GAAUN,EAAS/G,KAAM5lC,EAAO2B,EAAQ,EAAG,MAAQ,GACpDwjC,EAAOC,qBACTQ,KAAKjkC,GAAmB,IAAR3B,EAChB4lC,KAAKjkC,EAAS,GAAM3B,IAAU,GAE9B4sC,EAAkBhH,KAAM5lC,EAAO2B,GAAQ,GAElCA,EAAS,GAGlBwjC,EAAOM,UAAUkJ,cAAgB,SAAwB3uC,EAAO2B,EAAQsrC,GAUtE,OATAjtC,GAASA,EACT2B,GAAkB,EACbsrC,GAAUN,EAAS/G,KAAM5lC,EAAO2B,EAAQ,EAAG,MAAQ,GACpDwjC,EAAOC,qBACTQ,KAAKjkC,GAAW3B,IAAU,EAC1B4lC,KAAKjkC,EAAS,GAAc,IAAR3B,GAEpB4sC,EAAkBhH,KAAM5lC,EAAO2B,GAAQ,GAElCA,EAAS,GAUlBwjC,EAAOM,UAAUmJ,cAAgB,SAAwB5uC,EAAO2B,EAAQsrC,GAYtE,OAXAjtC,GAASA,EACT2B,GAAkB,EACbsrC,GAAUN,EAAS/G,KAAM5lC,EAAO2B,EAAQ,EAAG,WAAY,GACxDwjC,EAAOC,qBACTQ,KAAKjkC,EAAS,GAAM3B,IAAU,GAC9B4lC,KAAKjkC,EAAS,GAAM3B,IAAU,GAC9B4lC,KAAKjkC,EAAS,GAAM3B,IAAU,EAC9B4lC,KAAKjkC,GAAmB,IAAR3B,GAEhB8sC,EAAkBlH,KAAM5lC,EAAO2B,GAAQ,GAElCA,EAAS,GAGlBwjC,EAAOM,UAAUoJ,cAAgB,SAAwB7uC,EAAO2B,EAAQsrC,GAYtE,OAXAjtC,GAASA,EACT2B,GAAkB,EACbsrC,GAAUN,EAAS/G,KAAM5lC,EAAO2B,EAAQ,EAAG,WAAY,GACxDwjC,EAAOC,qBACTQ,KAAKjkC,GAAW3B,IAAU,GAC1B4lC,KAAKjkC,EAAS,GAAM3B,IAAU,GAC9B4lC,KAAKjkC,EAAS,GAAM3B,IAAU,EAC9B4lC,KAAKjkC,EAAS,GAAc,IAAR3B,GAEpB8sC,EAAkBlH,KAAM5lC,EAAO2B,GAAQ,GAElCA,EAAS,GAGlBwjC,EAAOM,UAAUqJ,WAAa,SAAqB9uC,EAAO2B,EAAQ8M,EAAYw+B,GAG5E,GAFAjtC,GAASA,EACT2B,GAAkB,GACbsrC,EAAU,CACb,IAAI8B,EAAQphC,KAAKkgC,IAAI,EAAG,EAAIp/B,EAAa,GAEzCk+B,EAAS/G,KAAM5lC,EAAO2B,EAAQ8M,EAAYsgC,EAAQ,GAAIA,GAGxD,IAAI/tC,EAAI,EACJssC,EAAM,EACN0B,EAAM,EAEV,IADApJ,KAAKjkC,GAAkB,IAAR3B,IACNgB,EAAIyN,IAAe6+B,GAAO,MAC7BttC,EAAQ,GAAa,IAARgvC,GAAsC,IAAzBpJ,KAAKjkC,EAASX,EAAI,KAC9CguC,EAAM,GAERpJ,KAAKjkC,EAASX,IAAOhB,EAAQstC,GAAQ,GAAK0B,EAAM,IAGlD,OAAOrtC,EAAS8M,GAGlB02B,EAAOM,UAAUwJ,WAAa,SAAqBjvC,EAAO2B,EAAQ8M,EAAYw+B,GAG5E,GAFAjtC,GAASA,EACT2B,GAAkB,GACbsrC,EAAU,CACb,IAAI8B,EAAQphC,KAAKkgC,IAAI,EAAG,EAAIp/B,EAAa,GAEzCk+B,EAAS/G,KAAM5lC,EAAO2B,EAAQ8M,EAAYsgC,EAAQ,GAAIA,GAGxD,IAAI/tC,EAAIyN,EAAa,EACjB6+B,EAAM,EACN0B,EAAM,EAEV,IADApJ,KAAKjkC,EAASX,GAAa,IAARhB,IACVgB,GAAK,IAAMssC,GAAO,MACrBttC,EAAQ,GAAa,IAARgvC,GAAsC,IAAzBpJ,KAAKjkC,EAASX,EAAI,KAC9CguC,EAAM,GAERpJ,KAAKjkC,EAASX,IAAOhB,EAAQstC,GAAQ,GAAK0B,EAAM,IAGlD,OAAOrtC,EAAS8M,GAGlB02B,EAAOM,UAAUyJ,UAAY,SAAoBlvC,EAAO2B,EAAQsrC,GAO9D,OANAjtC,GAASA,EACT2B,GAAkB,EACbsrC,GAAUN,EAAS/G,KAAM5lC,EAAO2B,EAAQ,EAAG,KAAO,KAClDwjC,EAAOC,sBAAqBplC,EAAQ2N,KAAK+F,MAAM1T,IAChDA,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtC4lC,KAAKjkC,GAAmB,IAAR3B,EACT2B,EAAS,GAGlBwjC,EAAOM,UAAU0J,aAAe,SAAuBnvC,EAAO2B,EAAQsrC,GAUpE,OATAjtC,GAASA,EACT2B,GAAkB,EACbsrC,GAAUN,EAAS/G,KAAM5lC,EAAO2B,EAAQ,EAAG,OAAS,OACrDwjC,EAAOC,qBACTQ,KAAKjkC,GAAmB,IAAR3B,EAChB4lC,KAAKjkC,EAAS,GAAM3B,IAAU,GAE9B4sC,EAAkBhH,KAAM5lC,EAAO2B,GAAQ,GAElCA,EAAS,GAGlBwjC,EAAOM,UAAU2J,aAAe,SAAuBpvC,EAAO2B,EAAQsrC,GAUpE,OATAjtC,GAASA,EACT2B,GAAkB,EACbsrC,GAAUN,EAAS/G,KAAM5lC,EAAO2B,EAAQ,EAAG,OAAS,OACrDwjC,EAAOC,qBACTQ,KAAKjkC,GAAW3B,IAAU,EAC1B4lC,KAAKjkC,EAAS,GAAc,IAAR3B,GAEpB4sC,EAAkBhH,KAAM5lC,EAAO2B,GAAQ,GAElCA,EAAS,GAGlBwjC,EAAOM,UAAU4J,aAAe,SAAuBrvC,EAAO2B,EAAQsrC,GAYpE,OAXAjtC,GAASA,EACT2B,GAAkB,EACbsrC,GAAUN,EAAS/G,KAAM5lC,EAAO2B,EAAQ,EAAG,YAAa,YACzDwjC,EAAOC,qBACTQ,KAAKjkC,GAAmB,IAAR3B,EAChB4lC,KAAKjkC,EAAS,GAAM3B,IAAU,EAC9B4lC,KAAKjkC,EAAS,GAAM3B,IAAU,GAC9B4lC,KAAKjkC,EAAS,GAAM3B,IAAU,IAE9B8sC,EAAkBlH,KAAM5lC,EAAO2B,GAAQ,GAElCA,EAAS,GAGlBwjC,EAAOM,UAAU6J,aAAe,SAAuBtvC,EAAO2B,EAAQsrC,GAapE,OAZAjtC,GAASA,EACT2B,GAAkB,EACbsrC,GAAUN,EAAS/G,KAAM5lC,EAAO2B,EAAQ,EAAG,YAAa,YACzD3B,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GACxCmlC,EAAOC,qBACTQ,KAAKjkC,GAAW3B,IAAU,GAC1B4lC,KAAKjkC,EAAS,GAAM3B,IAAU,GAC9B4lC,KAAKjkC,EAAS,GAAM3B,IAAU,EAC9B4lC,KAAKjkC,EAAS,GAAc,IAAR3B,GAEpB8sC,EAAkBlH,KAAM5lC,EAAO2B,GAAQ,GAElCA,EAAS,GAgBlBwjC,EAAOM,UAAU8J,aAAe,SAAuBvvC,EAAO2B,EAAQsrC,GACpE,OAAOD,EAAWpH,KAAM5lC,EAAO2B,GAAQ,EAAMsrC,IAG/C9H,EAAOM,UAAU+J,aAAe,SAAuBxvC,EAAO2B,EAAQsrC,GACpE,OAAOD,EAAWpH,KAAM5lC,EAAO2B,GAAQ,EAAOsrC,IAWhD9H,EAAOM,UAAUgK,cAAgB,SAAwBzvC,EAAO2B,EAAQsrC,GACtE,OAAOC,EAAYtH,KAAM5lC,EAAO2B,GAAQ,EAAMsrC,IAGhD9H,EAAOM,UAAUiK,cAAgB,SAAwB1vC,EAAO2B,EAAQsrC,GACtE,OAAOC,EAAYtH,KAAM5lC,EAAO2B,GAAQ,EAAOsrC,IAIjD9H,EAAOM,UAAUgB,KAAO,SAAet8B,EAAQwlC,EAAanmC,EAAOgC,GAQjE,GAPKhC,IAAOA,EAAQ,GACfgC,GAAe,IAARA,IAAWA,EAAMo6B,KAAK9jC,QAC9B6tC,GAAexlC,EAAOrI,SAAQ6tC,EAAcxlC,EAAOrI,QAClD6tC,IAAaA,EAAc,GAC5BnkC,EAAM,GAAKA,EAAMhC,IAAOgC,EAAMhC,GAG9BgC,IAAQhC,EAAO,OAAO,EAC1B,GAAsB,IAAlBW,EAAOrI,QAAgC,IAAhB8jC,KAAK9jC,OAAc,OAAO,EAGrD,GAAI6tC,EAAc,EAChB,MAAM,IAAIpK,WAAW,6BAEvB,GAAI/7B,EAAQ,GAAKA,GAASo8B,KAAK9jC,OAAQ,MAAM,IAAIyjC,WAAW,6BAC5D,GAAI/5B,EAAM,EAAG,MAAM,IAAI+5B,WAAW,2BAG9B/5B,EAAMo6B,KAAK9jC,SAAQ0J,EAAMo6B,KAAK9jC,QAC9BqI,EAAOrI,OAAS6tC,EAAcnkC,EAAMhC,IACtCgC,EAAMrB,EAAOrI,OAAS6tC,EAAcnmC,GAGtC,IACIxI,EADAoP,EAAM5E,EAAMhC,EAGhB,GAAIo8B,OAASz7B,GAAUX,EAAQmmC,GAAeA,EAAcnkC,EAE1D,IAAKxK,EAAIoP,EAAM,EAAGpP,GAAK,IAAKA,EAC1BmJ,EAAOnJ,EAAI2uC,GAAe/J,KAAK5kC,EAAIwI,QAEhC,GAAI4G,EAAM,MAAS+0B,EAAOC,oBAE/B,IAAKpkC,EAAI,EAAGA,EAAIoP,IAAOpP,EACrBmJ,EAAOnJ,EAAI2uC,GAAe/J,KAAK5kC,EAAIwI,QAGrC3H,WAAW4jC,UAAUvzB,IAAI21B,KACvB19B,EACAy7B,KAAK6E,SAASjhC,EAAOA,EAAQ4G,GAC7Bu/B,GAIJ,OAAOv/B,GAOT+0B,EAAOM,UAAUwF,KAAO,SAAelrC,EAAKyJ,EAAOgC,EAAK26B,GAEtD,GAAmB,kBAARpmC,EAAkB,CAS3B,GARqB,kBAAVyJ,GACT28B,EAAW38B,EACXA,EAAQ,EACRgC,EAAMo6B,KAAK9jC,QACa,kBAAR0J,IAChB26B,EAAW36B,EACXA,EAAMo6B,KAAK9jC,QAEM,IAAf/B,EAAI+B,OAAc,CACpB,IAAIkP,EAAOjR,EAAIuQ,WAAW,GACtBU,EAAO,MACTjR,EAAMiR,GAGV,QAAiB9N,IAAbijC,GAA8C,kBAAbA,EACnC,MAAM,IAAIJ,UAAU,6BAEtB,GAAwB,kBAAbI,IAA0BhB,EAAOiB,WAAWD,GACrD,MAAM,IAAIJ,UAAU,qBAAuBI,OAErB,kBAARpmC,IAChBA,GAAY,KAId,GAAIyJ,EAAQ,GAAKo8B,KAAK9jC,OAAS0H,GAASo8B,KAAK9jC,OAAS0J,EACpD,MAAM,IAAI+5B,WAAW,sBAGvB,GAAI/5B,GAAOhC,EACT,OAAOo8B,KAQT,IAAI5kC,EACJ,GANAwI,KAAkB,EAClBgC,OAActI,IAARsI,EAAoBo6B,KAAK9jC,OAAS0J,IAAQ,EAE3CzL,IAAKA,EAAM,GAGG,kBAARA,EACT,IAAKiB,EAAIwI,EAAOxI,EAAIwK,IAAOxK,EACzB4kC,KAAK5kC,GAAKjB,MAEP,CACL,IAAI2N,EAAQy3B,EAAOoB,SAASxmC,GACxBA,EACA+mC,EAAY,IAAI3B,EAAOplC,EAAKomC,GAAUlgC,YACtCmK,EAAM1C,EAAM5L,OAChB,IAAKd,EAAI,EAAGA,EAAIwK,EAAMhC,IAASxI,EAC7B4kC,KAAK5kC,EAAIwI,GAASkE,EAAM1M,EAAIoP,GAIhC,OAAOw1B,MAMT,IAAIgK,EAAoB,qBAmBxB,SAASpD,EAAO/oB,GACd,OAAIA,EAAI,GAAW,IAAMA,EAAExd,SAAS,IAC7Bwd,EAAExd,SAAS,IAGpB,SAAS6gC,EAAaZ,EAAQxlB,GAE5B,IAAIopB,EADJppB,EAAQA,GAASmvB,IAMjB,IAJA,IAAI/tC,EAASokC,EAAOpkC,OAChBguC,EAAgB,KAChBpiC,EAAQ,GAEH1M,EAAI,EAAGA,EAAIc,IAAUd,EAAG,CAI/B,IAHA8oC,EAAY5D,EAAO51B,WAAWtP,IAGd,OAAU8oC,EAAY,MAAQ,CAE5C,IAAKgG,EAAe,CAElB,GAAIhG,EAAY,MAAQ,EAEjBppB,GAAS,IAAM,GAAGhT,EAAM5G,KAAK,IAAM,IAAM,KAC9C,SACK,GAAI9F,EAAI,IAAMc,EAAQ,EAEtB4e,GAAS,IAAM,GAAGhT,EAAM5G,KAAK,IAAM,IAAM,KAC9C,SAIFgpC,EAAgBhG,EAEhB,SAIF,GAAIA,EAAY,MAAQ,EACjBppB,GAAS,IAAM,GAAGhT,EAAM5G,KAAK,IAAM,IAAM,KAC9CgpC,EAAgBhG,EAChB,SAIFA,EAAkE,OAArDgG,EAAgB,OAAU,GAAKhG,EAAY,YAC/CgG,IAEJpvB,GAAS,IAAM,GAAGhT,EAAM5G,KAAK,IAAM,IAAM,KAMhD,GAHAgpC,EAAgB,KAGZhG,EAAY,IAAM,CACpB,IAAKppB,GAAS,GAAK,EAAG,MACtBhT,EAAM5G,KAAKgjC,QACN,GAAIA,EAAY,KAAO,CAC5B,IAAKppB,GAAS,GAAK,EAAG,MACtBhT,EAAM5G,KACJgjC,GAAa,EAAM,IACP,GAAZA,EAAmB,UAEhB,GAAIA,EAAY,MAAS,CAC9B,IAAKppB,GAAS,GAAK,EAAG,MACtBhT,EAAM5G,KACJgjC,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,SAEhB,MAAIA,EAAY,SASrB,MAAM,IAAI5pC,MAAM,sBARhB,IAAKwgB,GAAS,GAAK,EAAG,MACtBhT,EAAM5G,KACJgjC,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,MAOzB,OAAOp8B,EA4BT,SAASq5B,EAAegC,GACtB,OAAOhE,EAAOj1B,YAhIhB,SAAsBi5B,GAIpB,IAFAA,EAUF,SAAqBA,GACnB,OAAIA,EAAIvhB,KAAauhB,EAAIvhB,OAClBuhB,EAAI7wB,QAAQ,aAAc,IAZ3B63B,CAAWhH,GAAK7wB,QAAQ03B,EAAmB,KAEzC9tC,OAAS,EAAG,MAAO,GAE3B,KAAOinC,EAAIjnC,OAAS,IAAM,GACxBinC,GAAY,IAEd,OAAOA,EAuHmBiH,CAAYjH,IAGxC,SAASF,EAAYnlC,EAAK4L,EAAK3N,EAAQG,GACrC,IAAK,IAAId,EAAI,EAAGA,EAAIc,KACbd,EAAIW,GAAU2N,EAAIxN,QAAYd,GAAK0C,EAAI5B,UADhBd,EAE5BsO,EAAItO,EAAIW,GAAU+B,EAAI1C,GAExB,OAAOA,K,mCCtvDTwO,EAAQ/E,KAAO,SAAUxJ,EAAQU,EAAQsuC,EAAMC,EAAMC,GACnD,IAAIzlC,EAAGyD,EACHiiC,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTvvC,EAAIivC,EAAQE,EAAS,EAAK,EAC1BxsB,EAAIssB,GAAQ,EAAI,EAChB/hC,EAAIjN,EAAOU,EAASX,GAOxB,IALAA,GAAK2iB,EAELjZ,EAAIwD,GAAM,IAAOqiC,GAAU,EAC3BriC,KAAQqiC,EACRA,GAASH,EACFG,EAAQ,EAAG7lC,EAAS,IAAJA,EAAWzJ,EAAOU,EAASX,GAAIA,GAAK2iB,EAAG4sB,GAAS,GAKvE,IAHApiC,EAAIzD,GAAM,IAAO6lC,GAAU,EAC3B7lC,KAAQ6lC,EACRA,GAASL,EACFK,EAAQ,EAAGpiC,EAAS,IAAJA,EAAWlN,EAAOU,EAASX,GAAIA,GAAK2iB,EAAG4sB,GAAS,GAEvE,GAAU,IAAN7lC,EACFA,EAAI,EAAI4lC,MACH,IAAI5lC,IAAM2lC,EACf,OAAOliC,EAAIqiC,IAAsBX,KAAd3hC,GAAK,EAAI,GAE5BC,GAAQR,KAAKkgC,IAAI,EAAGqC,GACpBxlC,GAAQ4lC,EAEV,OAAQpiC,GAAK,EAAI,GAAKC,EAAIR,KAAKkgC,IAAI,EAAGnjC,EAAIwlC,IAG5C1gC,EAAQsD,MAAQ,SAAU7R,EAAQjB,EAAO2B,EAAQsuC,EAAMC,EAAMC,GAC3D,IAAIzlC,EAAGyD,EAAGlD,EACNmlC,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBI,EAAe,KAATP,EAAcviC,KAAKkgC,IAAI,GAAI,IAAMlgC,KAAKkgC,IAAI,GAAI,IAAM,EAC1D7sC,EAAIivC,EAAO,EAAKE,EAAS,EACzBxsB,EAAIssB,EAAO,GAAK,EAChB/hC,EAAIlO,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQ2N,KAAK6M,IAAIxa,GAEb2nC,MAAM3nC,IAAUA,IAAU6vC,KAC5B1hC,EAAIw5B,MAAM3nC,GAAS,EAAI,EACvB0K,EAAI2lC,IAEJ3lC,EAAIiD,KAAK+F,MAAM/F,KAAKxF,IAAInI,GAAS2N,KAAK+iC,KAClC1wC,GAASiL,EAAI0C,KAAKkgC,IAAI,GAAInjC,IAAM,IAClCA,IACAO,GAAK,IAGLjL,GADE0K,EAAI4lC,GAAS,EACNG,EAAKxlC,EAELwlC,EAAK9iC,KAAKkgC,IAAI,EAAG,EAAIyC,IAEpBrlC,GAAK,IACfP,IACAO,GAAK,GAGHP,EAAI4lC,GAASD,GACfliC,EAAI,EACJzD,EAAI2lC,GACK3lC,EAAI4lC,GAAS,GACtBniC,GAAMnO,EAAQiL,EAAK,GAAK0C,KAAKkgC,IAAI,EAAGqC,GACpCxlC,GAAQ4lC,IAERniC,EAAInO,EAAQ2N,KAAKkgC,IAAI,EAAGyC,EAAQ,GAAK3iC,KAAKkgC,IAAI,EAAGqC,GACjDxlC,EAAI,IAIDwlC,GAAQ,EAAGjvC,EAAOU,EAASX,GAAS,IAAJmN,EAAUnN,GAAK2iB,EAAGxV,GAAK,IAAK+hC,GAAQ,GAI3E,IAFAxlC,EAAKA,GAAKwlC,EAAQ/hC,EAClBiiC,GAAQF,EACDE,EAAO,EAAGnvC,EAAOU,EAASX,GAAS,IAAJ0J,EAAU1J,GAAK2iB,EAAGjZ,GAAK,IAAK0lC,GAAQ,GAE1EnvC,EAAOU,EAASX,EAAI2iB,IAAU,IAAJzV,I,iBCnF5B,IAAIjI,EAAW,GAAGA,SAElB0qC,EAAOnhC,QAAUuB,MAAMif,SAAW,SAAUhgB,GAC1C,MAA6B,kBAAtB/J,EAAS4hC,KAAK73B,K,qHCFvB,YACA,QAIA,QAKM4gC,EAA4B,MACjC1tC,EAAkB,cAAe,cAAe,SAAU,gBAAiB,iBAG5E,SAAS2tC,EAAczsC,GAEtB,OADA,EAAA0B,eAAe1B,EAAQ,QAChB,EAAA5E,YAAY,EAAA4F,cAAchB,KAAY,SAG9C,SAAS0sC,EAAe3/B,EAAmB+kB,GAC1C,EAAA9jB,eAAejB,EAAQ,QACvB,EAAAiB,eAAejB,EAAQ,EAAA5R,cAAc22B,IAAU,QAGhD,SAAS6a,EAAgB3sC,GACxB,OAAO,EAAAD,UAAUC,GAAU,IAG5B,SAAS4sC,EAAiB7/B,EAAmBnR,GAC5C,EAAAkR,WAAWC,EAAmC,EAA3BxD,KAAKvC,MAAc,IAARpL,IA8J/B,SAASixC,EAAgB9/B,EAAmB+/B,G,MAC3C,EAAAt/B,YAAYT,EAAQ,IACpB,EAAAS,YAAYT,EAAQ,GACpB,EAAAqvB,kBAAkBrvB,EAAQ+/B,EAAOrwC,MAAQqwC,EAAOrwC,KAAKb,OAAS,GAC9D,EAAAwgC,kBAAkBrvB,EAAQ,GAC1B,EAAAqvB,kBAAkBrvB,EAAQ+/B,EAAOnf,OAAS,GAC1C,EAAAyO,kBAAkBrvB,EAAQ+/B,EAAO9c,UAAY8c,EAAO9c,SAASp0B,OAAS,GACtE,EAAAmnB,WAAWhW,EAAQ+/B,EAAOl7B,OAC1B86B,EAAe3/B,EAAQ+/B,EAAOlqC,WAC9B,EAAAkK,WAAWC,EAAQ+/B,EAAOjkB,QAAU,EAAI,GACxC,EAAA/b,WAAWC,EAAQ+/B,EAAOre,eAAiB,EAAI,GAC/Cme,EAAiB7/B,EAAsB,QAAd,EAAA+/B,EAAOjqC,eAAO,QAAI,GAC3C,EAAAkgB,WAAWhW,EAAQ+/B,EAAOl7B,OAvK3B,uBAA4B5R,GAC3B,IAAMuH,EAAU,EAAAjH,WAAWN,GAC3B,GAAgB,IAAZuH,EAAe,MAAM,IAAIzL,MAAM,kCAAkCyL,GAKrE,IAHA,IAAMwlC,EAAe,EAAAzsC,WAAWN,GAC1BqR,EAAiC,GAE9BzU,EAAI,EAAGA,EAAImwC,EAAcnwC,IAAK,CACtC,EAAA8E,eAAe1B,EAAQ,QACvB,IAAMsI,EAAO,EAAAtH,cAAchB,GAE3B,OAAQsI,GACP,IAAK,OACJ,IAAM7L,EAAO,EAAAiE,WAAWV,GAClB,EAAU,EAAAU,WAAWV,GACrBgtC,IAAY,EAAAjtC,UAAUC,GAG5B,GAFA,EAAAyB,UAAUzB,EAAQ,GAEL,IAATvD,GAA0B,IAAZ,IAAkBuwC,EAAS,MAAM,IAAIlxC,MAAM,gCAC7D,MAED,IAAK,OACL,IAAK,OACJ,IAAMmxC,EAAY,EAAAvsC,WAAWV,GACvB,EAAU,EAAAU,WAAWV,GAE3B,GAAkB,KAAditC,GAAkC,KAAdA,EAAkB,MAAM,IAAInxC,MAAM,wBAAwBmxC,GAClF,GAAgB,IAAZ,GAA6B,IAAZ,EAAe,MAAM,IAAInxC,MAAM,2BAA2B,GAEzEW,EAAO,EAAAq/B,iBAAiB97B,GAC9B,EAAA87B,iBAAiB97B,GACjB,IAAM2tB,EAAQ,EAAAmO,iBAAiB97B,GACzBgwB,EAAW,EAAA8L,iBAAiB97B,GAC5B4R,EAAQ,EAAA2Q,UAAUviB,GAClB4C,EAAY6pC,EAAczsC,GAC1B6oB,IAAY,EAAA9oB,UAAUC,GACtByuB,IAAmB,EAAA1uB,UAAUC,GAC7B6C,EAAU8pC,EAAgB3sC,GAC5BitC,GAAa,IAAI,EAAA1qB,UAAUviB,GAC/B,IAAMktC,EAAgC,CACrCzwC,KAAM,CAAE6f,MAAO,SAAU1gB,MAAOa,GAChCuzB,SAAU,CAAE1T,MAAO,SAAU1gB,MAAOo0B,GACpCrC,MAAK,EAAE/b,MAAK,EAAEhP,UAAS,EAAEimB,QAAO,EAAE4F,eAAc,EAAE5rB,QAAO,GAG7C,SAATyF,EACH+I,EAAQ+Y,WAAa,CAAC8iB,GAEtB77B,EAAQmZ,YAAc,CAAC0iB,GAExB,MAED,IAAK,OACED,EAAY,EAAAvsC,WAAWV,GAA7B,IACM,EAAU,EAAAU,WAAWV,GAE3B,GAAkB,KAAditC,GAAkC,KAAdA,EAAkB,MAAM,IAAInxC,MAAM,4BAA4BmxC,GACtF,GAAgB,IAAZ,GAA6B,IAAZ,EAAe,MAAM,IAAInxC,MAAM,+BAA+B,GAE7EW,EAAO,EAAAq/B,iBAAiB97B,GAC9B,EAAA87B,iBAAiB97B,GACX4R,EAAQ,EAAA2Q,UAAUviB,GAClB4C,EAAY6pC,EAAczsC,GAC1B6oB,IAAY,EAAA9oB,UAAUC,GACtB6C,EAAU8pC,EAAgB3sC,GAC5BitC,GAAa,IAAI,EAAA1qB,UAAUviB,GAE/BqR,EAAQsZ,UAAY,CACnBluB,KAAM,CAAE6f,MAAO,SAAU1gB,MAAOa,GAChCmV,MAAK,EAAEhP,UAAS,EAAEimB,QAAO,EAAEhmB,QAAO,GAEnC,MAED,IAAK,OACEoqC,EAAY,EAAAvsC,WAAWV,GAA7B,IACM,EAAU,EAAAU,WAAWV,GAE3B,GAAkB,KAAditC,GAAkC,KAAdA,EAAkB,MAAM,IAAInxC,MAAM,4BAA4BmxC,GACtF,GAAgB,IAAZ,GAA6B,IAAZ,EAAe,MAAM,IAAInxC,MAAM,+BAA+B,GAE7EW,EAAO,EAAAq/B,iBAAiB97B,GAC9B,EAAA87B,iBAAiB97B,GACX4R,EAAQ,EAAA2Q,UAAUviB,GAClB4C,EAAY6pC,EAAczsC,GAC1B6oB,IAAY,EAAA9oB,UAAUC,GACtB6C,EAAU8pC,EAAgB3sC,GAE5BitC,GAAa,KAChB,EAAAltC,UAAUC,GACV,EAAAuiB,UAAUviB,IAGXqR,EAAQwZ,UAAY,CACnBpuB,KAAM,CAAE6f,MAAO,SAAU1gB,MAAOa,GAChCmV,MAAK,EAAEhP,UAAS,EAAEimB,QAAO,EAAEhmB,QAAO,GAEnC,MAED,IAAK,OACEoqC,EAAY,EAAAvsC,WAAWV,GAA7B,IACM,EAAU,EAAAU,WAAWV,GAE3B,GAAkB,KAAditC,GAAkC,KAAdA,EAAkB,MAAM,IAAInxC,MAAM,uBAAuBmxC,GACjF,GAAgB,IAAZ,GAA6B,IAAZ,EAAe,MAAM,IAAInxC,MAAM,0BAA0B,GAExE6xB,EAAQ,EAAAmO,iBAAiB97B,GAA/B,IACM2vB,EAAW,EAAAmM,iBAAiB97B,GAE5B6uB,GADApyB,EAAO,EAAAq/B,iBAAiB97B,GACHysC,EAAczsC,IACnC8uB,EAAkB2d,EAAczsC,GAChC2uB,EAAiB,EAAApM,UAAUviB,GAC3B4uB,EAAc,EAAArM,UAAUviB,GACxBwU,EAAQg4B,EAAY,EAAAzsC,UAAUC,KAAY,cAC1CuvB,EAAmBod,EAAgB3sC,GACnCwvB,EAAgBmd,EAAgB3sC,GAGhCgvB,GAFAnG,IAAY,EAAA9oB,UAAUC,GACtByuB,IAAmB,EAAA1uB,UAAUC,GACjB,EAAAD,UAAUC,GAAU,OAAS,MAE3CitC,GAAa,KAChB,EAAA1qB,UAAUviB,GACV,EAAAuiB,UAAUviB,IAGXqR,EAAQ0Z,MAAQ,CACftuB,KAAM,CAAE6f,MAAO,SAAU1gB,MAAOa,GAChCkxB,MAAK,EAAEgC,SAAQ,EAAEd,mBAAkB,EAAEC,gBAAe,EAAEH,eAAc,EAAEC,YAAW,EACjFpa,MAAK,EAAE+a,iBAAgB,EAAEC,cAAa,EAAE3G,QAAO,EAAE4F,eAAc,EAAEO,UAAS,GAE3E,MAED,IAAK,OACEvyB,EAAO,EAAAiE,WAAWV,GAAxB,IACM,EAAU,EAAAU,WAAWV,GAE3B,GAAa,KAATvD,EAAa,MAAM,IAAIX,MAAM,yCAAyCW,GAC1E,GAAgB,IAAZ,EAAe,MAAM,IAAIX,MAAM,4CAA4C,GAEzE8G,EAAY6pC,EAAczsC,GAC1B4R,EAAQ,EAAA2Q,UAAUviB,GAClB6C,EAAU8pC,EAAgB3sC,GAC1B6oB,IAAY,EAAA9oB,UAAUC,GAC5B,EAAAuiB,UAAUviB,GAEVqR,EAAQ4Z,UAAY,CAAC,CAAEroB,UAAS,EAAEgP,MAAK,EAAE/O,QAAO,EAAEgmB,QAAO,IACzD,MAED,QACC,MAAM,IAAI/sB,MAAM,yBAAyBwM,EAAI,MAIhD,OAAO+I,GAkBR,wBAA6BtE,EAAmBsE,G,gBACzC+Y,EAA+B,QAAlB,EAAA/Y,EAAQ+Y,kBAAU,eAAG,GAClCI,EAAiC,QAAnB,EAAAnZ,EAAQmZ,mBAAW,eAAG,GACpCG,EAAYtZ,EAAQsZ,UACpBE,EAAYxZ,EAAQwZ,UACpBE,EAAQ1Z,EAAQ0Z,MAChBE,EAA6B,QAAjB,EAAA5Z,EAAQ4Z,iBAAS,eAAG,GAElC1sB,EAAQ,EA2DZ,GA1DI6rB,GAAY7rB,IACZisB,GAAajsB,IACbosB,GAAWpsB,IACXssB,GAAWtsB,IACXwsB,GAAOxsB,IACP0sB,GAAW1sB,IAEf,EAAA6O,YAAYL,EAAQ,GACpB,EAAAK,YAAYL,EAAQxO,GAEpB,EAAAyP,eAAejB,EAAQ,QACvB,EAAAiB,eAAejB,EAAQ,QACvB,EAAAS,YAAYT,EAAQ,GACpB,EAAAS,YAAYT,EAAQ,GACpB,EAAAD,WAAWC,EAAQ,GACnB,EAAAgB,WAAWhB,EAAQ,GAEfqd,IACH,EAAApc,eAAejB,EAAQ,QACvB,EAAAiB,eAAejB,EAAQ,QACvB8/B,EAAgB9/B,EAAQqd,IAGrBI,IACH,EAAAxc,eAAejB,EAAQ,QACvB,EAAAiB,eAAejB,EAAQ,QACvB8/B,EAAgB9/B,EAAQyd,IAGrBG,IACH,EAAA3c,eAAejB,EAAQ,QACvB,EAAAiB,eAAejB,EAAQ,QACvB,EAAAS,YAAYT,EAAQ,IACpB,EAAAS,YAAYT,EAAQ,GACpB,EAAAqvB,kBAAkBrvB,GAAsB,QAAd,EAAA4d,EAAUluB,YAAI,eAAEb,QAAS,GACnD,EAAAwgC,kBAAkBrvB,EAAQ,GAC1B,EAAAgW,WAAWhW,EAAQ4d,EAAU/Y,OAC7B86B,EAAe3/B,EAAQ4d,EAAU/nB,WACjC,EAAAkK,WAAWC,EAAQ4d,EAAU9B,QAAU,EAAI,GAC3C+jB,EAAiB7/B,EAAQ4d,EAAU9nB,SAAW,GAC9C,EAAAkgB,WAAWhW,EAAQ4d,EAAU/Y,QAG1BiZ,IACH,EAAA7c,eAAejB,EAAQ,QACvB,EAAAiB,eAAejB,EAAQ,QACvB,EAAAS,YAAYT,EAAQ,IACpB,EAAAS,YAAYT,EAAQ,GACpB,EAAAqvB,kBAAkBrvB,GAAsB,QAAd,EAAA8d,EAAUpuB,YAAI,eAAEb,QAAS,GACnD,EAAAwgC,kBAAkBrvB,EAAQ,GAC1B,EAAAgW,WAAWhW,EAAQ8d,EAAUjZ,OAC7B86B,EAAe3/B,EAAQ8d,EAAUjoB,WACjC,EAAAkK,WAAWC,EAAQ8d,EAAUhC,QAAU,EAAI,GAC3C+jB,EAAiB7/B,EAAQ8d,EAAUhoB,SAAW,GAC9C,EAAAiK,WAAWC,EAAQ,GACnB,EAAAgW,WAAWhW,EAAQ8d,EAAUjZ,QAG1BmZ,EAAO,CACV,EAAA/c,eAAejB,EAAQ,QACvB,EAAAiB,eAAejB,EAAQ,QACvB,EAAAS,YAAYT,EAAQ,IACpB,EAAAS,YAAYT,EAAQ,GACpB,EAAAqvB,kBAAkBrvB,EAAQge,EAAM4C,OAAS,GACzC,EAAAyO,kBAAkBrvB,EAAQge,EAAM4E,UAAY,GAC5C,EAAAyM,kBAAkBrvB,GAAkB,QAAV,EAAAge,EAAMtuB,YAAI,eAAEb,QAAS,GAC/C8wC,EAAe3/B,EAAQge,EAAM8D,oBAC7B6d,EAAe3/B,EAAQge,EAAM+D,iBAC7B,EAAA/L,WAAWhW,EAAQge,EAAM4D,gBACzB,EAAA5L,WAAWhW,EAAQge,EAAM6D,aACzB,IAAMpa,EAAQg4B,EAAYtmC,QAAQ6kB,EAAMvW,OACxC,EAAA1H,WAAWC,EAAQyH,GAAS,EAAI,EAAIA,GACpCo4B,EAAiB7/B,EAAQge,EAAMwE,kBAAoB,GACnDqd,EAAiB7/B,EAAQge,EAAMyE,eAAiB,GAChD,EAAA1iB,WAAWC,EAAQge,EAAMlC,QAAU,EAAI,GACvC,EAAA/b,WAAWC,EAAQge,EAAM0D,eAAiB,EAAI,GAC9C,EAAA3hB,WAAWC,EAA4B,SAApBge,EAAMiE,UAAuB,EAAI,GACpD,EAAAjM,WAAWhW,EAAQge,EAAM4D,gBACzB,EAAA5L,WAAWhW,EAAQge,EAAM6D,aAGtB3D,IACH,EAAAjd,eAAejB,EAAQ,QACvB,EAAAiB,eAAejB,EAAQ,QACvB,EAAAS,YAAYT,EAAQ,IACpB,EAAAS,YAAYT,EAAQ,GACpB2/B,EAAe3/B,EAAQke,EAAUroB,WACjC,EAAAmgB,WAAWhW,EAAQke,EAAUrZ,OAC7Bg7B,EAAiB7/B,EAAQke,EAAUpoB,SAAW,GAC9C,EAAAiK,WAAWC,EAAQke,EAAUpC,QAAU,EAAI,GAC3C,EAAA9F,WAAWhW,EAAQke,EAAUrZ,U,gCC9S/B,SAASu7B,EAAkBvgC,GAC1B,OAA4B,KAAhB,WAAPA,GACG,EAC2B,KAAhB,WAAPA,GACJ,EAC2B,KAAhB,WAAPA,GACJ,EAEA,EAIT,SAAgBwgC,EAAoBxxC,GAGnC,IAFA,IAAIhB,EAAS,EAEJgC,EAAI,EAAGA,EAAIhB,EAAM8B,OAAQd,IAAK,CACtC,IAAMgQ,EAAOhR,EAAMsQ,WAAWtP,GAG9B,GAAIgQ,GAAQ,OAAUA,GAAQ,OAC7B,GAAKhQ,EAAI,EAAKhB,EAAM8B,OAAQ,CAC3B,IAAM2vC,EAAQzxC,EAAMsQ,WAAWtP,EAAI,GAGV,SAAZ,MAARywC,KACJzwC,IACAhC,GAAUuyC,IAA2B,KAAPvgC,IAAiB,KAAe,KAARygC,GAAiB,cAIzEzyC,GAAUuyC,EAAkBvgC,GAI9B,OAAOhS,EAGR,SAAS0yC,EAAezwC,EAA6BU,EAAgBqP,GACpE,IAAMlP,EAASyvC,EAAkBvgC,GAEjC,OAAQlP,GACP,KAAK,EACJb,EAAOU,GAAUqP,EACjB,MACD,KAAK,EACJ/P,EAAOU,GAAYqP,GAAQ,EAAK,GAAQ,IACxC/P,EAAOU,EAAS,GAAa,GAAPqP,EAAe,IACrC,MACD,KAAK,EACJ/P,EAAOU,GAAYqP,GAAQ,GAAM,GAAQ,IACzC/P,EAAOU,EAAS,GAAOqP,GAAQ,EAAK,GAAQ,IAC5C/P,EAAOU,EAAS,GAAa,GAAPqP,EAAe,IACrC,MACD,QACC/P,EAAOU,GAAYqP,GAAQ,GAAM,EAAQ,IACzC/P,EAAOU,EAAS,GAAOqP,GAAQ,GAAM,GAAQ,IAC7C/P,EAAOU,EAAS,GAAOqP,GAAQ,EAAK,GAAQ,IAC5C/P,EAAOU,EAAS,GAAa,GAAPqP,EAAe,IAIvC,OAAOlP,EAGR,SAAgB6vC,EAAe1wC,EAA6BU,EAAgB3B,GAC3E,IAAK,IAAIgB,EAAI,EAAGA,EAAIhB,EAAM8B,OAAQd,IAAK,CACtC,IAAMgQ,EAAOhR,EAAMsQ,WAAWtP,GAG9B,GAAIgQ,GAAQ,OAAUA,GAAQ,OAC7B,GAAKhQ,EAAI,EAAKhB,EAAM8B,OAAQ,CAC3B,IAAM2vC,EAAQzxC,EAAMsQ,WAAWtP,EAAI,GAGnC,GAAyB,SAAZ,MAARywC,GACJzwC,IAEAW,GAAU+vC,EAAezwC,EAAQU,IADP,KAAPqP,IAAiB,KAAe,KAARygC,GAAiB,aAK9D9vC,GAAU+vC,EAAezwC,EAAQU,EAAQqP,GAI3C,OAAOrP,EASR,SAASiwC,EAAiB3wC,EAAoBkX,GAC7C,GAAIA,GAASlX,EAAOa,OACnB,MAAM5B,MAAM,sBAGb,IAAM0xC,EAAmB3wC,EAAOkX,GAEhC,GAAkC,OAAV,IAAnBy5B,GACJ,OAA0B,GAAnBA,EAEP,MAAM1xC,MAAM,6B,6HA5Fd,wBAoDA,mBAwBA,wBAA6BF,GAC5B,IAAMiB,EAAS,IAAIY,WAAW2vC,EAAoBxxC,IAElD,OADA2xC,EAAe1wC,EAAQ,EAAGjB,GACnBiB,GAiBR,wBAA6BjB,GAG5B,IAFA,IAAIhB,EAAS,GAEJgC,EAAI,EAAGA,EAAIhB,EAAM8B,QAAS,CAClC,IAAM+vC,EAAQ7xC,EAAMgB,KAChBgQ,OAAI,EAER,GAAuB,KAAV,IAAR6gC,GACJ7gC,EAAO6gC,OACD,GAAuB,OAAV,IAARA,GAAwB,CAInC,IAFA7gC,GAAiB,GAAR6gC,IAAiB,EADZD,EAAiB5xC,EAAOgB,MAG3B,IACV,MAAMd,MAAM,kCAEP,GAAuB,OAAV,IAAR2xC,GAAwB,CAKnC,IAFA7gC,GAAiB,GAAR6gC,IAAiB,GAFZD,EAAiB5xC,EAAOgB,MAEI,EAD5B4wC,EAAiB5xC,EAAOgB,MAG3B,KACV,MAAMd,MAAM,6BAGb,GAAI8Q,GAAQ,OAAUA,GAAQ,MAC7B,MAAM9Q,MAAM,oBAAoB8Q,EAAK/K,SAAS,IAAI6rC,cAAa,8BAE1D,IAAuB,OAAV,IAARD,GAUX,MAAM3xC,MAAM,0BAJZ,IAFA8Q,GAAiB,GAAR6gC,IAAiB,GAHZD,EAAiB5xC,EAAOgB,MAGM,GAF9B4wC,EAAiB5xC,EAAOgB,MAEwB,EADhD4wC,EAAiB5xC,EAAOgB,MAG3B,OAAYgQ,EAAO,QAC7B,MAAM9Q,MAAM,6BAMV8Q,EAAO,QACVA,GAAQ,MACRhS,GAAU2G,OAAOC,aAAaoL,IAAS,GAAK,KAAQ,OACpDA,EAAO,MAAgB,KAAPA,GAGjBhS,GAAU2G,OAAOC,aAAaoL,GAG/B,OAAOhS,I,gCC9JR,SAAS+yC,EAAaC,GAErB,OAAgB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAwB,IAATA,EAGrD,SAASC,EAASD,GAEjB,OAAQA,GAAQ,IAAMA,GAAQ,IAAgB,KAATA,GAAwB,KAATA,E,gGAGrD,2BAAgCpxC,GAC/B,IAAIuX,EAAQ,EAEZ,SAAS+5B,IACR,KAAO/5B,EAAQvX,EAAKkB,QAAUiwC,EAAanxC,EAAKuX,KAC/CA,IAIF,SAASg6B,IACR,IAAIrT,EAAOl+B,EAAKuX,GAQhB,OAPAA,IAEa,KAAT2mB,IACHA,EAAOl+B,EAAKuX,GACZA,KAGM2mB,EAGR,SAASsT,IACR,IAAIpzC,EAAS,GAEb,GAAoB,KAAhB4B,EAAKuX,GAER,OADAA,IACOnZ,EAIR,GAAoB,MAAhB4B,EAAKuX,IAAuC,MAApBvX,EAAKuX,EAAQ,GACxC,MAAM,IAAIjY,MAAM,sBAOjB,IAJAiY,GAAS,EAIFA,EAAQvX,EAAKkB,QAA0B,KAAhBlB,EAAKuX,IAAe,CACjD,IAEM65B,EAFOG,KAES,EADVA,IAEZnzC,GAAU2G,OAAOC,aAAaosC,GAI/B,OADA75B,IACOnZ,EAGR,IAAI46B,EAAY,KACVptB,EAAe,GAErB,SAAS6lC,EAAcryC,GACjBwM,EAAM1K,QAIVwwC,EAAUtyC,GACVwM,EAAM1F,KAAK9G,KAJXwM,EAAM1F,KAAK9G,GACX45B,EAAO55B,GAOT,SAASsyC,EAAUtyC,GAClB,IAAKwM,EAAM1K,OAAQ,MAAM,IAAI5B,MAAM,gBAEnC,IAAMoG,EAAMkG,EAAMA,EAAM1K,OAAS,GAEjC,GAAmB,kBAARwE,EACVkG,EAAMA,EAAM1K,OAAS,GAAGwE,GAAOtG,EAC/B8M,QACM,KAAIiE,MAAMif,QAAQ1pB,GAGxB,MAAM,IAAIpG,MAAM,gBAFhBoG,EAAIQ,KAAK9G,IAMX,SAASuyC,EAAa5pC,GAChB6D,EAAM1K,QAAQuwC,EAAc,IAEjC,IAAM/rC,EAAMkG,EAAMA,EAAM1K,OAAS,GAEjC,GAAIwE,GAAsB,kBAARA,EAEhBgsC,EADY,QAAT3pC,EACO,KAEA,IAAIA,OAET,KAAIrC,GAAsB,kBAARA,EAGxB,MAAM,IAAIpG,MAAM,gBAFhBsM,EAAM1F,KAAK6B,IAMb,SAASmE,IACR,IAAKN,EAAM1K,OAAQ,MAAM,IAAI5B,MAAM,gBACnCsM,EAAMM,MAKP,IAFAolC,IAEO/5B,EAAQvX,EAAKkB,QAAQ,CAC3B,IAAMd,EAAImX,EACJ65B,EAAOpxC,EAAKI,GAElB,GAAa,KAATgxC,GAA+B,KAAhBpxC,EAAKI,EAAI,GAC3BmX,GAAS,EACTk6B,EAAc,SACR,GAAa,KAATL,GAA+B,KAAhBpxC,EAAKI,EAAI,GAClCmX,GAAS,EACTrL,SACM,GAAa,KAATklC,EAAa,CAIvB,IAFA,IAAMxoC,EADN2O,GAAS,EAGFA,EAAQvX,EAAKkB,SAAWiwC,EAAanxC,EAAKuX,KAChDA,IAKD,IAFA,IAAI,EAAO,GAEF,EAAI3O,EAAO,EAAI2O,EAAO,IAC9B,GAAQxS,OAAOC,aAAahF,EAAK,IAGlC2xC,EAAa,QACP,GAAa,KAATP,EACV75B,GAAS,EACTm6B,EAAUF,UACJ,GAAa,KAATJ,EACV75B,GAAS,EACTk6B,EAAc,SACR,GAAa,KAATL,EACV75B,GAAS,EACTrL,SACM,GAAa,MAATklC,GAAgC,MAAhBpxC,EAAKI,EAAI,IAA8B,MAAhBJ,EAAKI,EAAI,IAA8B,MAAhBJ,EAAKI,EAAI,GACjFmX,GAAS,EACTm6B,EAAU,WACJ,GAAa,MAATN,GAAgC,MAAhBpxC,EAAKI,EAAI,IAA8B,MAAhBJ,EAAKI,EAAI,IAA8B,MAAhBJ,EAAKI,EAAI,GACjFmX,GAAS,EACTm6B,GAAU,QACJ,GAAa,MAATN,GAAgC,KAAhBpxC,EAAKI,EAAI,IAA6B,MAAhBJ,EAAKI,EAAI,IAA8B,MAAhBJ,EAAKI,EAAI,IAA8B,MAAhBJ,EAAKI,EAAI,GACvGmX,GAAS,EACTm6B,GAAU,QACJ,GAAIL,EAASD,GAAO,CAG1B,IAFA,IAAIhyC,EAAQ,GAELmY,EAAQvX,EAAKkB,QAAUmwC,EAASrxC,EAAKuX,KAC3CnY,GAAS2F,OAAOC,aAAahF,EAAKuX,IAClCA,IAGDm6B,EAAUE,WAAWxyC,SAErBmY,GAAS,EACTjQ,QAAQC,IAAI,iBAAiBxC,OAAOC,aAAaosC,GAAK,OAAO75B,GAK9D+5B,IAGD,OAAOtY,GAGR,IAAM6Y,EAAY,CACjB,OAAQ,KAAM,OAAQ,cAAe,kBAAmB,eAAgB,cAAe,YAAa,cACpG,aAAc,gBAAiB,SAAU,WAAY,cAAe,YAAa,YAAa,kBAAmB,kBACjH,kBAAmB,WAAY,UAAW,kBAAmB,gBAAiB,gBAAiB,QAC/F,eAAgB,eAGXC,EAAY,CAAC,kBAGnB,+BAAoC9xC,EAAW+xC,QAAA,IAAAA,OAAA,GAC9C,IAAI1xC,EAAS,IAAIY,WAAW,MACxBF,EAAS,EACTixC,EAAS,EAEb,SAAS9/B,EAAM9S,GACd,GAAI2B,GAAUV,EAAOa,OAAQ,CAC5B,IAAMqR,EAAY,IAAItR,WAA2B,EAAhBZ,EAAOa,QACxCqR,EAAUjB,IAAIjR,GACdA,EAASkS,EAGVlS,EAAOU,GAAU3B,EACjB2B,IAGD,SAASkxC,EAAY7yC,GACpB,IAAK,IAAIgB,EAAI,EAAGA,EAAIhB,EAAM8B,OAAQd,IACjC8R,EAAM9S,EAAMsQ,WAAWtP,IAIzB,SAAS8xC,IACR,GAAIH,EACHE,EAAY,UAEZ,IAAK,IAAI7xC,EAAI,EAAGA,EAAI4xC,EAAQ5xC,IAC3B6xC,EAAY,MAKf,SAASE,EAAc3zC,EAAaY,GACnC8yC,IACAD,EAAY,IAAIzzC,GAChB4zC,EAAWhzC,EAAOZ,GAAK,GAClBuzC,GAAWE,EAAY,MAO7B,SAASI,EAAejzC,GACvB,OAAOA,EAAMkzC,QAAQ,GACnBh7B,QAAQ,WAAY,MACpBA,QAAQ,gBAAiB,OACzBA,QAAQ,eAAgB,SAG3B,SAASi7B,EAAgBnzC,EAAeZ,GAEvC,OADiBA,IAAmC,IAA5BqzC,EAAUnoC,QAAQlL,KAAyB,EAARY,KAAeA,EACzDizC,EAAejzC,GAbjC,SAAsBA,GACrB,OAAOA,EAAMiG,WAY4BmtC,CAAapzC,GAGvD,SAASqzC,EAAQrzC,GAChB,IAAMd,EAAOD,OAAOC,KAAKc,GAQzB,OAN4B,IAAxBd,EAAKoL,QAAQ,OAChBpL,EAAK2N,QAAO,MAAZ3N,EAAgBA,EAAKo0C,OAAOp0C,EAAKoL,QAAQ,MAAO,KAErB,IAAxBpL,EAAKoL,QAAQ,OAChBpL,EAAK2N,QAAO,MAAZ3N,EAAgBA,EAAKo0C,OAAOp0C,EAAKoL,QAAQ,MAAO,IAE1CpL,EAGR,SAASq0C,EAAgBvzC,GACV,KAAVA,GAA0B,KAAVA,GAA0B,KAAVA,GACnC8S,EAAM,IAGPA,EAAM9S,GAGP,SAASgzC,EAAWhzC,EAAYZ,EAAco0C,GAC7C,SAASC,IACJD,EACHX,EAAY,KAEZC,IAIF,QAT6C,IAAAU,OAAA,GAS/B,OAAVxzC,EACHyzC,IACAZ,EAAYF,EAAY,OAAS,aAC3B,GAAqB,kBAAV3yC,EACjByzC,IACAZ,EAAYM,EAAgBnzC,EAAOZ,SAC7B,GAAqB,mBAAVY,EACjByzC,IACAZ,EAAY7yC,EAAQ,OAAS,cACvB,GAAqB,kBAAVA,EAGjB,GAFAyzC,IAEa,OAARr0C,GAAwB,OAARA,GAAqC,MAApBY,EAAM0zC,OAAO,GAE5C,CACNb,EAAY,KACZ//B,EAAM,KACNA,EAAM,KAEN,IAAK,IAAI9R,EAAI,EAAGA,EAAIhB,EAAM8B,OAAQd,IAAK,CACtC,IAAMgQ,EAAOhR,EAAMsQ,WAAWtP,GAC9BuyC,EAAiBviC,GAAQ,EAAK,KAC9BuiC,EAAuB,IAAPviC,GAGjB6hC,EAAY,UAZZA,EAAY7yC,QAcP,GAAI+Q,MAAMif,QAAQhwB,GAGxB,GAFAyzC,IAEIzzC,EAAM2zC,OAAM,SAAAnyC,GAAK,wBAAOA,KAAiB,CAC5CqxC,EAAY,KAIZ,IAFA,IAAMe,GAAwC,IAA7BlB,EAAUpoC,QAAQlL,GAEnB,MAAAY,EAAA,eAAO,CAAlB,IAAMwB,EAAC,KACXqxC,EAAY,KACZA,EAAYe,EAAWT,EAAgB3xC,GAAKyxC,EAAezxC,IAG5DqxC,EAAY,UACN,CACNA,EAAY,KACPF,GAAWE,EAAY,MAE5B,IAAgB,UAAA7yC,EAAA,eAAO,CACtBgzC,EADUxxC,EAAC,KACGpC,GACTuzC,GAAWE,EAAY,MAG7BC,IACAD,EAAY,UAEP,GAAqB,kBAAV7yC,EAAoB,CACjCwzC,IAAeb,GAAWE,EAAY,MAE1CC,IACAD,EAAY,MAEPF,GAAWE,EAAY,MAE5BD,IAEA,IAAkB,UAAAS,EAAQrzC,GAAR,eAAgB,CAA7B,IAAM,EAAG,KACb+yC,EAAc,EAAK/yC,EAAM,IAG1B4yC,IACAE,IACAD,EAAY,OAMd,GAAIF,GACH,GAAoB,kBAAT/xC,EACV,IAAkB,UAAAyyC,EAAQzyC,GAAR,eAAe,CAA5B,IAAMxB,EAAG,KACb2zC,EAAc3zC,EAAKwB,EAAKxB,UAI1ByzC,EAAY,QACZG,EAAWpyC,GAGZ,OAAOK,EAAO6B,MAAM,EAAGnB,K,sWC9LxB,IAAMkyC,EAAoB,CACzBlrC,KAAM,oBACNmrC,OAAQ,EACRpnC,KAAM,EACNqnC,UAAW,GAGNC,EAAwC,CAC7CC,cAAe,OACfC,gBAAiB,EACjBC,YAAa,EACbC,UAAW,EACXC,YAAa,EACbC,WAAY,EACZC,eAAe,EACfC,mBAAoB,EACpBC,UAAW,EACXC,WAAY,EACZC,mBAAoB,EACpBC,KAAM,GACNC,YAAa,CAAC,GAAK,EAAG,MACtBC,cAAe,CAAC,EAAG,EAAG,GACtBC,aAAc,CAAC,EAAG,EAAG,GACrBC,YAAa,IACbC,YAAa,EACbC,SAAS,EACTC,YAAY,EACZC,aAAc,EACdC,mBAAmB,GAGdC,EAA0B,CAC/BC,KAAM1B,EACN2B,SAAU,GACVC,UAAU,EACVC,YAAY,EACZV,aAAa,EACbW,QAAS,EACTC,gBAAiB,EACjBC,cAAe,EACfC,SAAU,EACVC,aAAa,EACbC,QAAS,EACTC,cAAe,EACfC,SAAU,EACVC,aAAc,EACdC,WAAW,EACXC,eAAe,EACfC,WAAW,EACXC,YAAY,EACZC,kBAAmB,EACnBC,MAAO,EACPC,kBAAmB,EACnBC,SAAU,EACVC,SAAS,EACTC,UAAW,CAAE9oC,EAAG,EAAGC,EAAG,EAAGvM,EAAG,GAC5Bq1C,YAAa,CAAE/oC,EAAG,EAAGC,EAAG,EAAGvM,EAAG,GAC9Bs1C,UAAU,EACVC,YAAY,EACZC,WAAW,EACXC,WAAY,EACZC,aAAc,EACdC,mBAAoB,EACpBC,cAAc,EACdC,QAAS,EACTC,aAAc,GAGTC,EAAgC,CACrCC,MAAM,EACNC,MAAM,EACN72C,KAAM,GACN80C,QAAS,GACT3/B,MAAO,CAAEjI,EAAG,EAAGC,EAAG,EAAGvM,EAAG,KACxBk2C,iBAAkB,CAAE5pC,EAAG,EAAGC,EAAG,EAAGvM,EAAG,KACnCm2C,4BAA4B,GAGvBC,EAA+C,CACpD,gBAAiB,kBAAmB,cAAe,YAAa,cAAe,aAC/E,gBAAiB,qBAAsB,YAAa,aAAc,qBAClE,OAAQ,cAAe,gBAAiB,eAAgB,cAAe,cACvE,UAAW,aAAc,eAAgB,qBAGpCC,EAAiC,CACtC,OAAQ,WAAY,WAAY,aAAc,cAAe,UAAW,kBACxE,gBAAiB,WAAY,cAAe,UAAW,gBAAiB,WAAY,eACpF,YAAa,gBAAiB,YAAa,aAAc,oBAAqB,QAC9E,oBAAqB,WAAY,UAAW,YAAa,cAAe,WACxE,aAAc,YAAa,aAAc,eAAgB,qBAAsB,eAC/E,UAAW,gBAGNC,EAAyB,CAAC,OAAQ,QAAS,SAAU,SAAU,SAC/D9D,EAAiC,CAAC,OAAQ,QAAS,UAEzD,SAAS+D,EAAWh4C,GACnB,OAAOA,EAAM+oB,OAAO,EAAG,GAAG+oB,cAAgB9xC,EAAM+oB,OAAO,GAGxD,SAASkvB,EAAYjiC,GACpB,IAAM/K,EAAI+K,EAAMkiC,OAEhB,OAAmB,IAAfliC,EAAMgP,KACF,CAAEjX,EAAU,IAAP9C,EAAE,GAAU+C,EAAU,IAAP/C,EAAE,GAAUxJ,EAAU,IAAPwJ,EAAE,IAErC,CAAE8C,EAAU,IAAP9C,EAAE,GAAU+C,EAAU,IAAP/C,EAAE,GAAUxJ,EAAU,IAAPwJ,EAAE,GAAUlF,EAAGkF,EAAE,IAI7D,SAASktC,EAAYniC,GACpB,OAAIA,GAAS,MAAOA,EACZ,CAAC,MAAOA,EAAQA,EAAMjQ,EAAI,EAAGiQ,EAAMjI,EAAI,IAAKiI,EAAMhI,EAAI,IAAKgI,EAAMvU,EAAI,KAErE,CAAC,EAAG,EAAG,EAAG,GAInB,SAAS22C,EAAYryC,EAAUtE,GAC9B,IAAKsE,IAAMtE,EAAG,OAAO,EACrB,GAAIsE,EAAEjE,SAAWL,EAAEK,OAAQ,OAAO,EAClC,IAAK,IAAId,EAAI,EAAGA,EAAI+E,EAAEjE,OAAQd,IAAK,GAAI+E,EAAE/E,KAAOS,EAAET,GAAI,OAAO,EAC7D,OAAO,EAGR,SAASq3C,EAAatyC,EAAQtE,GAC7B,IAAKsE,IAAMtE,EAAG,OAAO,EACrB,IAAkB,UAAAxC,OAAOC,KAAK6G,GAAZ,eAAc,CAAE,GAAIA,EAA3B3G,EAAG,QAAmCqC,EAAErC,GAAM,OAAO,EAChE,IAAkB,UAAAH,OAAOC,KAAKuC,GAAZ,eAAc,CAA3B,IAAMrC,EAAuB,GAAI2G,EAA3B3G,EAAG,QAAmCqC,EAAErC,GAAM,OAAO,EAChE,OAAO,EAGR,SAASk5C,EAAcC,EAAehD,GACrC,IAAK,IAAIv0C,EAAI,EAAGA,EAAIu3C,EAAMz2C,OAAQd,IACjC,GAAIu3C,EAAMv3C,GAAG2H,OAAS4sC,EAAK5sC,KAAM,OAAO3H,EAIzC,OADAu3C,EAAMzxC,KAAKyuC,GACJgD,EAAMz2C,OAAS,EAGvB,SAAS02C,EAAa7lB,EAAUzzB,EAAgBq5C,GAG/C,IAFA,IAAMv5C,EAAc,GAEF,MAAAE,EAAA,eAAM,CAAnB,IAAME,EAAG,KACPq5C,EAAMT,EAAW54C,QAEN8D,IAAbyvB,EAAI8lB,KAGPz5C,EAAOI,GADI,kBAARA,EACW60C,EAActhB,EAAI8lB,IACd,SAARr5C,EACIm5C,EAAM5lB,EAAI8lB,IACN,cAARr5C,GAA+B,gBAARA,EACnB64C,EAAYtlB,EAAI8lB,IAEhB9lB,EAAI8lB,IAIpB,OAAOz5C,EAGR,SAAS05C,EAAa/lB,EAAUzzB,EAAgBq5C,GAG/C,I,MAFMv5C,EAAc,GAEF,MAAAE,EAAA,eAAM,CAAnB,IAAME,EAAG,KACPq5C,EAAMT,EAAW54C,QAEN8D,IAAbyvB,EAAIvzB,KAGPJ,EAAOy5C,GADI,kBAARr5C,EACW60C,EAAc3pC,QAAgB,QAAR,EAAAqoB,EAAIvzB,UAAI,QAAI,QAC9B,SAARA,EACIk5C,EAAcC,EAAO5lB,EAAIvzB,IACrB,cAARA,GAA+B,gBAARA,EACnB,CAAE4lB,KAAM,EAAGkzB,OAAQC,EAAYxlB,EAAIvzB,KAEnCuzB,EAAIvzB,IAIpB,OAAOJ,EAGR,SAAS25C,EAAqBhmB,EAA0B4lB,GACvD,OAAOC,EAAa7lB,EAAKklB,EAAoBU,GAG9C,SAASK,EAAYjmB,EAAqB4lB,GACzC,OAAOC,EAAa7lB,EAAKmlB,EAAWS,GAGrC,SAASM,EAAqBlmB,EAAqB4lB,GAClD,OAAOG,EAAa/lB,EAAKklB,EAAoBU,GAG9C,SAASO,EAAYnmB,EAAgB4lB,GACpC,OAAOG,EAAa/lB,EAAKmlB,EAAWS,GAGrC,SAASQ,EAAqBC,EAASC,EAAuB/5C,GAC7D,GAAK+5C,EAAKn3C,OAAV,CAEA,I,eAAW1C,GACV,IAAMY,EAAQi5C,EAAK,GAAGrgC,MAAMxZ,GAE5B,QAAc8D,IAAVlD,EAAqB,EAGpB+Q,MAAMif,QAAQhwB,GACLi5C,EAAKtF,OAAM,SAAA5lC,GAAK,OAAAqqC,EAAYrqC,EAAE6K,MAAMxZ,GAApB,MACD,kBAAVY,EACLi5C,EAAKtF,OAAM,SAAA5lC,GAAK,OAAAsqC,EAAatqC,EAAE6K,MAAMxZ,GAArB,MAEhB65C,EAAKtF,OAAM,SAAA5lC,GAAK,OAAAA,EAAE6K,MAAMxZ,KAAR,QAI5B45C,EAAK55C,GAAOY,GAMd,QAAmBkD,IAFA81C,EAAK55C,GAGvB,IAAgB,UAAA65C,EAAA,eAAM,CAAjB,IAAMlrC,EAAC,MAGPgD,MAAMif,QAAQhwB,GACVo4C,EAAYrqC,EAAE6K,MAAMxZ,GAAaY,GACb,kBAAVA,EACVq4C,EAAatqC,EAAE6K,MAAMxZ,GAAaY,GAElC+N,EAAE6K,MAAMxZ,KAASY,WAGR+N,EAAE6K,MAAMxZ,KAjCV,MAAAF,EAAA,eAAI,C,EAAR,MAsCV+5C,EAAKtF,OAAM,SAAAnyC,GAAK,WAAAvC,OAAOC,KAAKsC,EAAEoX,OAAO9W,YACxCm3C,EAAKn3C,OAAS,IAIhB,4BAAiCwX,GAehC,I,gBAbM4/B,EAAa5/B,EAAW6/B,WACxBC,EAAe9/B,EAAW+/B,aAE1Bd,EAAQa,EAAaE,QAAQv6C,KAAU,SAAAw6C,GAAK,MAAC,CAClD5wC,KAAM4wC,EAAEC,KACR1F,OAAQyF,EAAEE,OACV/sC,KAAM6sC,EAAEG,SACR3F,UAAWwF,EAAEI,cAGVn0C,EAAO0zC,EAAWU,OAAOC,KAAK3hC,QAAQ,MAAO,MAC7C4hC,EAAoB,EAEjB,MAAM1e,KAAK51B,IACjBA,EAAOA,EAAKujB,OAAO,EAAGvjB,EAAK1D,OAAS,GACpCg4C,IAGD,IAAM96C,EAAwB,CAC7BwG,KAAI,EACJ+S,UAA0C,QAA/B,EAAAw/B,EAAUmB,EAAWa,kBAAU,QAAI,SAC9CC,2BAA4Bd,EAAWe,yBACvCC,gBAAiBd,EAAae,gBAC9BC,oBAAqBhB,EAAaiB,oBAClCC,cAAelB,EAAamB,cAC5BC,kBAAmBpB,EAAaqB,kBAChCC,aAActB,EAAauB,cAKtBC,EAA8D,QAAlD,EAA0C,QAA1C,EAAqC,QAArC,EAA2B,QAA3B,EAAmB,QAAnB,EAAA1B,EAAW2B,gBAAQ,eAAEC,cAAM,eAAEC,gBAAQ,eAAG,UAAE,eAAEC,cAAM,eAAEC,UAElEL,IACH57C,EAAOk8C,UAAoC,IAAxBN,EAAUO,UAAkB,MAAQ,QACnDP,EAAUQ,YAAWp8C,EAAOq8C,UAAYT,EAAUQ,WAClDR,EAAUU,YAAWt8C,EAAOu8C,UAAYX,EAAUU,YAQvD,IAAME,EAAeliC,EAAW6/B,WAAWsC,aAE3Cz8C,EAAO08C,eAAiB,GACxB18C,EAAO28C,mBAAqB,GAE5B,IAAK,IAAI36C,EAAI,EAAGA,EAAIw6C,EAAaI,SAAS95C,OAAQd,IAAK,CACtD,IAAM,EAAMw6C,EAAaI,SAAS56C,GAC5B,EAASw6C,EAAaK,eAAe76C,GACrC4X,EAAQ+/B,EAAqB,EAAImD,eAAeC,WAAYxD,GAKlEv5C,EAAO28C,mBAAmB70C,KAAK,CAAEhF,OAAM,EAAE8W,MAAK,IAG/C,IAAK,IAAIojC,EAAUlC,EAAmB96C,EAAO28C,mBAAmB75C,QAAUk6C,EAAU,EAAGA,IACL,MAA3Eh9C,EAAO28C,mBAAmB38C,EAAO28C,mBAAmB75C,OAAS,GAAGA,QACrE9C,EAAO28C,mBAAmB7uC,MAI5BisC,EAAkB/5C,EAAO08C,eAAgB18C,EAAO28C,mBAAoB9D,GAE/D74C,EAAO28C,mBAAmB75C,eAAe9C,EAAO28C,mBAOrD,IAAMM,EAAW3iC,EAAW6/B,WAAW+C,SAKvC,IAHAl9C,EAAO4Z,MAAQ,GACf5Z,EAAOm9C,UAAY,GAEVn7C,EAAI,EAAGA,EAAIi7C,EAASL,SAAS95C,OAAQd,IAAK,CAClD,IAAM,EAASi7C,EAASJ,eAAe76C,GACjC4X,EAAQggC,EAAYqD,EAASL,SAAS56C,GAAGo7C,WAAWC,eAAgB9D,GAC1Ev5C,EAAOm9C,UAAUr1C,KAAK,CAAEhF,OAAM,EAAE8W,MAAK,IAGtC,IAASojC,EAAUlC,EAAmB96C,EAAOm9C,UAAUr6C,QAAUk6C,EAAU,EAAGA,IACd,MAAzDh9C,EAAOm9C,UAAUn9C,EAAOm9C,UAAUr6C,OAAS,GAAGA,QACnD9C,EAAOm9C,UAAUrvC,MAQnB,OAJAisC,EAAkB/5C,EAAO4Z,MAAO5Z,EAAOm9C,UAAWrE,GAE7C94C,EAAOm9C,UAAUr6C,eAAe9C,EAAOm9C,UAErCn9C,GAGR,4BAAiC4B,G,4BAC1B4E,GAAW5E,EAAK4E,MAAQ,IAAI0S,QAAQ,SAAU,MAAK,KAEnDqgC,EAAgB,CACrB,CAAE5vC,KAAM,iBAAkBmrC,OAAQ,EAAGpnC,KAAM,EAAGqnC,UAAW,IAGpDuI,GAAoB,QAAV,EAAA17C,EAAKgY,aAAK,eAAE28B,QAA+C,QAAvC,EAAc,QAAd,EAAA30C,EAAKu7C,iBAAS,eAAEh6B,MAAK,SAAAjU,GAAK,OAAAA,EAAE0K,MAAF,eAAa,eAAEA,MAAM28B,OAAQ1B,EACrF0I,EAAoC,GACpCC,EAAoC,GACpCC,EAAgB77C,EAAK+6C,mBAE3B,GAAIc,GAAiBA,EAAc36C,OAAQ,CAG1C,IAFA,IAAI,EAAa0D,EAAK1D,OAEJ,MAAA26C,EAAA,eAAe,CAA5B,IAAM,EAAG,KAEb,GADIC,EAAY/uC,KAAKjN,IAAI,EAAIoB,OAAQ,GAGhC46C,IAGc,IAAf,GAAoB,IAAQD,EAAcA,EAAc36C,OAAS,KACpE46C,IACA,KAGDF,EAAwB11C,KAAK41C,GAC7BH,EAAkBz1C,KAAK,CACtBg1C,eAAgB,CACfa,kBAAmB,EACnBZ,WAAYlD,EAAqB,EAAD,OAAM7E,GAA0BpzC,EAAK86C,gBAAmB,EAAI9iC,OAAS2/B,IAEtGqE,YAAa,CAAEC,KAAM,CAAC,EAAG,EAAG,GAAIC,GAAI,CAAC,EAAG,OAItC,IACHN,EAAwB11C,KAAK,GAC7By1C,EAAkBz1C,KAAK,CACtBg1C,eAAgB,CACfa,kBAAmB,EACnBZ,WAAYlD,EAAqB,EAAD,KAAM7E,GAA0BpzC,EAAK86C,gBAAkBnD,IAExFqE,YAAa,CAAEC,KAAM,CAAC,EAAG,EAAG,GAAIC,GAAI,CAAC,EAAG,YAI1C,IAAK,IAAI97C,EAAI,EAAG+7C,EAAO,EAAG/7C,EAAIwE,EAAK1D,OAAQd,IACf,KAAvBwE,EAAK8K,WAAWtP,KACnBw7C,EAAwB11C,KAAK9F,EAAI+7C,EAAO,GACxCR,EAAkBz1C,KAAK,CACtBg1C,eAAgB,CACfa,kBAAmB,EACnBZ,WAAYlD,EAAqB,EAAD,KAAM7E,GAA0BpzC,EAAK86C,gBAAkBnD,IAExFqE,YAAa,CAAEC,KAAM,CAAC,EAAG,EAAG,GAAIC,GAAI,CAAC,EAAG,MAEzCC,EAAO/7C,EAAI,GAYd,IAPA,IAAMg8C,EAAiBlE,EAAY,EAAD,KAAMxD,GAAY,CAAEC,KAAM+G,IAAW/D,GACjE4D,EAAYv7C,EAAKu7C,WAAa,CAAC,CAAEr6C,OAAQ0D,EAAK1D,OAAQ8W,MAAOhY,EAAKgY,OAAS,KAC3EqkC,EAA4B,GAC5BC,EAAgC,GAElCC,EAAa33C,EAAK1D,OAEJ,MAAAq6C,EAAA,eAAW,CAAxB,IACAO,EADM,EAAG,KAEbS,GADIT,EAAY/uC,KAAKjN,IAAI,EAAIoB,OAAQq7C,GAGhCT,IAGc,IAAfS,GAAoB,IAAQhB,EAAUA,EAAUr6C,OAAS,KAC5D46C,IACAS,KAGDD,EAAoBp2C,KAAK41C,GACzBO,EAAcn2C,KAAK,CAClBs1C,WAAY,CACXC,eAAgBvD,EAAY,EAAD,GAC1B9C,QAAS,EACTD,aAAa,EACbc,UAAW,CAAE9oC,EAAG,EAAGC,EAAG,EAAGvM,EAAG,IACzBb,EAAKgY,OACL,EAAIA,OACL2/B,OAMF4E,GAAchB,EAAUr6C,SAC3Bo7C,EAAoBp2C,KAAKq2C,GACzBF,EAAcn2C,KAAK,CAClBs1C,WAAY,CACXC,eAAgBvD,EAAY,EAAD,CAC1B9C,QAAS,EACTD,aAAa,EACbc,UAAW,CAAE9oC,EAAG,EAAGC,EAAG,EAAGvM,EAAG,IACzBb,EAAKgY,OACN2/B,OAKN,IAAM6E,EAAW,EAAH,KAAQ5F,GAAoB52C,EAAKw8C,UACzCC,EAAwC,aAArBz8C,EAAK8X,YAA6B,EAAI,EACzD4kC,EAAkC,aAArB18C,EAAK8X,YAA6B,EAAI,EACnDyiC,EAA+B,QAAnBv6C,EAAKs6C,UAAsB,EAAI,EAC3CD,EAA2B,CAChCE,UAAS,GAGQ,IAAdA,EACHF,EAAUG,UAAYx6C,EAAKy6C,WAAa,CAAC,EAAG,GAE5CJ,EAAUK,UAAY16C,EAAK26C,WAAa,CAAC,EAAG,EAAG,EAAG,GAInDN,EAAUsC,KAAO,CAChBpC,UAAS,EACTqC,gBAAiB,CAAC,EAAG,GACrBC,gBAAiB,CAAC,EAAG,GACrBC,gBAAiB,CAAC,EAAG,IAGtB,IAAMC,EAAmB,CACxBC,WAAY,CACX,CACCpE,KAAM,uBACNqE,QAAS,0VACTC,MAAO,8GACPC,KAAM,eACNC,QAAS,kBAEV,CACCxE,KAAM,uBACNqE,QAAS,yJACTC,MAAO,qEACPC,KAAM,eACNC,QAAS,mBAGXC,YAAa,CACZ,CAAEC,aAAc,0BAChB,CAAEA,aAAc,0BAChB,CAAEA,aAAc,0BAChB,CAAEA,aAAc,2BAEjBC,oBAAqB,EACrBC,wBAAyB,EACzBC,kBAAmB,CAClB,CACC7E,KAAM,aACNmD,kBAAmB,EACnBZ,WAAYlD,EAAqB,EAAD,KAAM7E,GAA0BpzC,EAAK86C,gBAAkBnD,KAGzF+F,cAAe,CACd,CACC9E,KAAM,aACN6C,eAAgBW,IAGlB1D,QAASf,EAAMx5C,KAAa,SAAAw6C,GAAK,MAAC,CACjCC,KAAMD,EAAE5wC,KACR8wC,OAAQF,EAAEzF,QAAU,EACpB4F,SAAUH,EAAE7sC,MAAQ,EACpBitC,UAAWJ,EAAExF,WAAa,MAE3BoG,gBAAqC,QAApB,EAAAv5C,EAAKs5C,uBAAe,QAAI,KACzCG,oBAA6C,QAAxB,EAAAz5C,EAAKw5C,2BAAmB,QAAI,KACjDG,cAAiC,QAAlB,EAAA35C,EAAK05C,qBAAa,QAAI,KACrCG,kBAAyC,QAAtB,EAAA75C,EAAK45C,yBAAiB,QAAI,KAC7CG,aAA+B,QAAjB,EAAA/5C,EAAK85C,oBAAY,QAAI,IAoDpC,MAjD+B,CAC9BvB,WAAY,CACXS,OAAQ,CAAEC,KAAMr0C,GAChBi2C,aAAc,CACb8C,eAAgB,CACfzC,eAAgB,CAAEa,kBAAmB,EAAGZ,WAAY,IACpDa,YAAa,CAAEC,KAAM,CAAC,EAAG,EAAG,GAAIC,GAAI,CAAC,EAAG,KAEzClB,SAAUW,EACVV,eAAgBW,EAChBgC,WAAY,GAEbtC,SAAU,CACTqC,eAAgB,CAAEnC,WAAY,CAAEC,eAAgB,KAChDT,SAAUqB,EACVpB,eAAgBqB,EAChBsB,WAAY,GAEbC,SAAU,CACTC,WAAYtB,EAAS3F,KACrBkH,WAAYvB,EAAS1F,KACrBkH,SAAuB,QAAb,EAAAxB,EAASv8C,YAAI,QAAI,GAC3Bg+C,YAA6B,QAAhB,EAAAzB,EAASzH,eAAO,QAAI,GACjCmJ,UAAW,CAAE95B,KAAM,EAAGkzB,OAAQC,EAAYiF,EAASpnC,QACnD+oC,qBAAsB,CAAE/5B,KAAM,EAAGkzB,OAAQC,EAAYiF,EAASpnC,QAC9DgpC,6BAA8B5B,EAASxF,4BAExCmC,UAAWhC,EAAUztC,QAAsB,QAAd,EAAA1J,EAAK2X,iBAAS,QAAI,SAC/C0hC,yBAAuD,QAA7B,EAAAr5C,EAAKo5C,gCAAwB,SACvDa,SAAU,CACToE,QAAS,EACTnE,OAAQ,CACPuC,iBAAgB,EAChBtC,SAAU,CACT,CACCI,UAAS,EACTmC,WAAU,EACV4B,MAAO,CAAE7B,iBAAgB,EAAEtC,SAAU,IACrCC,OAAQ,CAAEC,UAAS,QAMxB5B,aAAc,EAAF,GAAOsE,GACnBwB,kBAAmB,EAAF,GAAOxB,M,kGCzuB1B,YAEA,QAwBMyB,EAAkB,CAAC,MAAO,OAAQ,eAAgB,WAAY,eAAgB,oBAAqB,YAAa,mBAAoB,YAsO1I,SAASC,EAAcjlC,GACtB,MAAO,CACNklC,QAASF,EAAgBhlC,EAAKmlC,MAC9BC,MAAOplC,EAAKqlC,KACZtrB,OAAQ,EAAAhU,aAAa/F,EAAK+Z,QAC1BurB,QAAS,EAAAv/B,aAAa/F,EAAK,UAI7B,SAASulC,EAAgBvlC,GACxB,IAAMwlC,EAAoB,CACzB/+C,KAAM,EAAAg/C,mBAAmBzlC,EAAK0lC,KAAM,UACpC/tB,MAAO,EAAAC,WAAW5X,EAAK0X,MACvBiuB,UAAW,EAAA5/B,aAAa/F,EAAK4lC,MAC7BC,UAAW7lC,EAAKkW,KAChB4vB,QAAS,EAAA//B,aAAa/F,EAAK+lC,MAC3BC,MAAOhmC,EAAKgmC,MACZC,MAAOjmC,EAAKimC,OAOb,OAJIjmC,EAAK,UAASwlC,EAAMj3C,KAAOyR,EAAK,SAChCA,EAAKkmC,OAAMV,EAAMW,SAAW,EAAApgC,aAAa/F,EAAKkmC,OAC9ClmC,EAAKomC,cAAaZ,EAAMY,YAAcpmC,EAAKomC,aAExCZ,EAGR,mBAAwB3+C,EAAyBmF,G,WAAA,IAAAA,MAAA,IAChD,IAAMhC,EAAS,EAAAq8C,aAAax/C,EAAOA,OAAQA,EAAOkE,WAAYlE,EAAOwN,YAC/D9C,EAAU,EAAAnH,UAAUJ,GACpBs8C,EAAwB,GACxBC,EAAmB,GACnBC,EAA0B,GAEhC,GAAgB,IAAZj1C,GAA6B,IAAZA,EACpB,MAAM,IAAIzL,MAAM,4BAA4ByL,EAAO,KAC7C,GAAgB,IAAZA,GAA6B,IAAZA,GAA6B,KAAZA,EA2N5C,MAAM,IAAIzL,MAAM,2BA1NhB,IAAM2gD,EAAe,EAAAr8C,UAAUJ,GAC/B,GAAqB,IAAjBy8C,GAAuC,IAAjBA,EAAoB,MAAM,IAAI3gD,MAAM,iCAE9D,KAAOkE,EAAOzC,OAASyC,EAAOC,KAAKoK,YAAY,CAC9C,EAAA3I,eAAe1B,EAAQ,QACvB,IAAMsI,EAAO,EAAAtH,cAAchB,GACvBvD,EAAO,EAAAiE,WAAWV,GAChBoH,EAAMpH,EAAOzC,OAASd,EAE5B,OAAQ6L,GACP,IAAK,OACJ,KAAOtI,EAAOzC,OAAS6J,GAAK,CAE3B,IADA,IAAIs1C,EAAc,EAAAh8C,WAAWV,GACR,EAAd08C,GAAoBA,IAC3B,IAAMC,EAAW38C,EAAOzC,OAASm/C,EAE3B/5C,EAAK,EAAAzB,iBAAiBlB,EAAQ,GAIpC,EAAAyB,UAAUzB,EAAyB,IAAjBy8C,EAAqB,GAAK,KAE5C,IAAMv/C,EAAI,EAAAsD,UAAUR,GACd5C,EAAI,EAAAoD,UAAUR,GACd6J,EAAI,EAAArJ,UAAUR,GAAU9C,EACxB6N,EAAI,EAAAvK,UAAUR,GAAU5C,EAC9B,GAAI2N,GAAK,GAAKlB,GAAK,EAAG,MAAM,IAAI/N,MAAM,kBAEtC,IAAM8gD,EAAQ,EAAAx8C,UAAUJ,GAClBgF,EAAc,EAAAjF,UAAUC,GACxB68C,EAAQ,IAAIp/C,WAAWsN,EAAIlB,GAEjC,GAAc,IAAV+yC,EACH,GAAoB,IAAhB53C,EACH63C,EAAM/uC,IAAI,EAAAhN,UAAUd,EAAQ68C,EAAMxyC,iBAC5B,IAAoB,IAAhBrF,EAGV,MAAM,IAAIlJ,MAAM,uBAFhB,EAAAgK,YAAY9F,EAAQ,CAAEtD,MAAOqO,EAAGpO,OAAQkN,EAAGrN,KAAMqgD,GAAS9xC,EAAGlB,EAAG,EAAG,CAAC,IAAI,OAInE,IAAc,KAAV+yC,EAWV,MAAM,IAAI9gD,MAAM,iBAVhB,GAAoB,IAAhBkJ,EAIG,MAAoB,IAAhBA,EACJ,IAAIlJ,MAAM,+BAEV,IAAIA,MAAM,uBANhB,IAAK,IAAIc,EAAI,EAAGA,EAAIigD,EAAMxyC,WAAYzN,IACrCigD,EAAMjgD,GAAK,EAAA0D,WAAWN,IAAW,EAWpCs8C,EAAQ55C,KAAK,CAAEC,GAAE,EAAEwI,OAAQ,CAAE/N,EAAC,EAAEF,EAAC,EAAE6N,EAAC,EAAElB,EAAC,GAAIgzC,MAAK,IAChD78C,EAAOzC,OAASo/C,EAEjB,MAED,IAAK,OAIJ,IAHA,IAGoB,OAHd3mC,EAAuB,EAAArC,yBAAyB3T,IAG7B88C,KAAL,eAAW,CAA1B,IAAMC,EAAK,KACT1/C,EAAW,CAChBkH,KAAMw4C,EAAM,QACZvB,MAAOD,EAAgBwB,EAAMD,MAC7BhB,QAAS,EAAA//B,aAAaghC,EAAMhB,MAE5BiB,SAAUD,EAAME,KAChBrtB,MAAOmtB,EAAM1rB,KAGb6rB,aAAcH,EAAMG,cAGO,MAAxBH,EAAMI,iBAAwB9/C,EAAE8/C,eAAiBJ,EAAMI,gBAC/B,MAAxBJ,EAAMK,iBAAwB//C,EAAE+/C,eAAiBL,EAAMK,gBAEvDL,EAAMM,iBACThgD,EAAEigD,cAAgB,CACjBC,UAAW,EAAAxhC,aAAaghC,EAAMQ,WAC9BC,aAAcvC,EAAc8B,EAAMU,MAClCC,cAAezC,EAAc8B,EAAMW,eACnCC,kBAAmB1C,EAAc8B,EAAMY,mBACvC3B,MAAOe,EAAMf,MACbC,MAAOc,EAAMd,MACb2B,gBAAiBb,EAAMa,gBACvBC,gBAAiB,EAAA9hC,aAAaghC,EAAMc,iBACpCC,iBAAkB,EAAA/hC,aAAaghC,EAAMe,oBAInCf,EAAMgB,aACT1gD,EAAE2gD,QAAU,CACXz/C,MAAOw+C,EAAM,QACbkB,SAAUlB,EAAMkB,SAChBC,cAAejD,EAAc8B,EAAMmB,eACnCC,gBAAiBlD,EAAc8B,EAAMoB,mBAInCpB,EAAMqB,aACT/gD,EAAEghD,QAAU,CACX17C,GAAIo6C,EAAMuB,KAAK39B,KACfpc,KAAMw4C,EAAMuB,KAAK,QACjB17C,UAAW,EAAAiZ,KAAKngB,OAAOqhD,EAAMwB,kBAC7B3B,MAAO,EAAA7gC,aAAaghC,EAAMyB,cAC1BC,aAAc,EAAA1iC,aAAaghC,EAAM2B,cACjCC,cAAe1D,EAAc8B,EAAM6B,sBACnCvvC,MAAO,EAAA0M,aAAaghC,EAAM8B,cAC1B5oC,OAAQ8mC,EAAM+B,KACd/5B,WAAYg4B,EAAMgC,kBAClB/5B,SAAU+3B,EAAMiC,kBAIlB,IAAMC,EAAKlC,EAAMmC,UACbD,GAAMA,EAAGE,eACZ9hD,EAAE6hD,UAAY,CACb/hB,KAAM8hB,EAAGG,KACT5D,MAAOD,EAAgB0D,EAAGnC,MAC1Bl6C,UAAW,EAAAiZ,KAAKngB,OAAOujD,EAAGpjC,MAC1BkiC,WAAYkB,EAAGlB,WACfjC,QAAS,EAAA//B,aAAakjC,EAAGlD,MACzBx9C,MAAO0gD,EAAG,QACVhB,SAAUgB,EAAGhB,SACbC,cAAejD,EAAcgE,EAAGf,eAChCC,gBAAiBlD,EAAcgE,EAAGd,mBAIhCpB,EAAMsC,mBACThiD,EAAEiiD,cAAgB,CACjBC,qBAAsBtE,EAAc8B,EAAMyC,MAC1ChgC,IAAK,EAAAzD,aAAaghC,EAAM,SACxBt9B,WAAY,EAAA1D,aAAaghC,EAAMt3B,MAC/BV,WAAY,EAAAhJ,aAAaghC,EAAM3uB,MAC/BqxB,OAAQ,EAAA1jC,aAAaghC,EAAM0C,QAC3BC,OAAQ3C,EAAM4C,sBAIZ5C,EAAM6C,mBACTviD,EAAEwiD,SAAW,CACZC,aAAc7E,EAAc8B,EAAMgD,MAClCC,gBAAiB/E,EAAc8B,EAAMkD,MACrCC,gBAAiBjF,EAAc8B,EAAMoD,MACrCC,YAAanF,EAAc8B,EAAMsD,QAI/BtD,EAAMuD,eACTjjD,EAAEkjD,UAAY,CACbC,cAAezD,EAAM0D,kBACrBC,cAAe3D,EAAM4D,kBACrBC,cAAe7D,EAAM8D,kBACrBC,iBAAkB/D,EAAMgE,qBACxBC,SAAU,EAAAjlC,aAAaghC,EAAMkE,mBAC7BC,MAAOnE,EAAMoE,eACbC,MAAOrE,EAAMsE,eACb1zB,MAAOovB,EAAMuE,iBAIf,IAAMC,EAAKxE,EAAMyE,YACbD,IACHlkD,EAAEmkD,YAAc,CACfC,YAAaF,EAAGE,YAChBC,KAAMH,EAAGG,KACT9pB,OAAQ2pB,EAAGI,KACX7vB,KAAM,EAAAjW,KAAKngB,OAAO6lD,EAAG,SACrB1+C,QAAS0+C,EAAGn4B,KACZw4B,UAAWL,EAAGK,UACdC,eAAgBN,EAAGM,eACnBC,oBAAqBP,EAAGO,oBACxBC,iBAAkBR,EAAGQ,iBACrBC,sBAAuBT,EAAGS,sBAC1BC,0BAA2BV,EAAGU,0BAC9BC,kBAAmBX,EAAGW,kBACtBC,yBAA0BZ,EAAGY,yBAC7BC,4BAA6Bb,EAAGa,4BAChCj9B,UAAWo8B,EAAGp8B,YAIhBo3B,EAAQ75C,KAAKrF,GAEd,MAED,IAAK,OACA2C,EAAOzC,OAAS6J,IACnBo1C,EAAS95C,KAAK,EAAA2/C,YAAYriD,IAC1BA,EAAOzC,OAAS6J,GAEjB,MAED,IAAK,OAEJ,IAAM4O,EAAuB,EAAArC,yBAAyB3T,GAClDgC,EAAQ6B,qBACO,QAAd,EAAAmS,EAAKssC,iBAAS,eAAE5kD,SACnBoG,QAAQC,IAAI,yBAA0BiS,GAGxC,MAED,QACC,MAAM,IAAIla,MAAM,uBAAuBwM,GAIzC,KAAO7L,EAAO,GACbuD,EAAOzC,SACPd,IAOH,MAAO,CAAE6/C,QAAO,EAAEE,SAAQ,EAAED,QAAO,K,0UClgBpC,YAEA,QAWA,mBAAwB1/C,GACvB,IAAMmD,EAAS,EAAAq8C,aAAax/C,EAAOA,OAAQA,EAAOkE,WAAYlE,EAAOwN,YAC/Dk4C,EAAW,CAAEC,OAAQ,IAG3B,GADA,EAAA9gD,eAAe1B,EAAQ,QACI,IAAvB,EAAAU,WAAWV,GAAe,MAAM,IAAIlE,MAAM,mBAG9C,IAFA,IAAMyC,EAAQ,EAAAmC,WAAWV,GAEhBpD,EAAI,EAAGA,EAAI2B,EAAO3B,IAAK,CAE/B,IADA,IAAM,EAAO,EAAAyE,kBAAkBrB,GACxBA,EAAOzC,OAAS,GAAGyC,EAAOzC,SACjC,GAA2B,IAAvB,EAAAmD,WAAWV,GAAe,MAAM,IAAIlE,MAAM,yBAC9C,IAAMW,EAAO,EAAAiE,WAAWV,GAClBoH,EAAMpH,EAAOzC,OAASd,EACtBkG,EAAK,EAAAzB,iBAAiBlB,EAAQ,GAE9BsS,EAAK,EAAA5R,WAAWV,GAChBuS,EAAK,EAAA7R,WAAWV,GAChBwS,EAAK,EAAA9R,WAAWV,GAEhBtD,EADK,EAAAgE,WAAWV,GACHuS,EACb5V,EAAS6V,EAAKF,EACdnP,EAAwB,CAAE0P,MAAO,IACvC,EAAAD,eAAe5S,EAAQmD,EAAMzG,EAAOC,EAAQyK,EAAMpH,EAAOzC,QACzDglD,EAAIC,OAAO9/C,KAAI,GAAG6B,KAAI,EAAE5B,GAAE,EAAEjG,MAAK,EAAEC,OAAM,GAAKwG,IAE9CnD,EAAOzC,OAAS6J,EAGjB,OAAOm7C,I,yHCpCR,SAAkBE,GACjB,uBACA,6BACA,yBACA,iBACA,mBACA,mCACA,yBACA,iBARD,CAAkB,EAAAA,YAAA,EAAAA,UAAS,KAW3B,SAAkBC,GACjB,qBACA,+BACA,mCACA,uDAJD,CAAkB,EAAAA,qBAAA,EAAAA,mBAAkB,M,ghBChBpC,YACA,QACA,WACA,WACA,YAAS,kFAAAC,oBACT,WACA,YAwBA,SAAgBC,EAAmB7gD,EAAUC,GAC5C,IAAM+K,EAAS,EAAA81C,eAEf,OADA,EAAAC,SAAiB/1C,EAAQhL,EAAKC,GACvB,EAAA+gD,sBAAsBh2C,GAlBjB,EAAAi2C,kBAAoB,EAAAzjD,cAEjC,mBAAwB1C,EAAkCmF,GACzD,IAAMhC,EAAS,WAAYnD,EAC1B,EAAAw/C,aAAax/C,EAAOA,OAAQA,EAAOkE,WAAYlE,EAAOwN,YACtD,EAAAgyC,aAAax/C,GACd,OAAO,EAAAomD,QAAgBjjD,EAAQgC,IAGhC,oBAAyBD,EAAUC,GAClC,IAAM+K,EAAS,EAAA81C,eAEf,OADA,EAAAC,SAAiB/1C,EAAQhL,EAAKC,GACvB,EAAAkhD,gBAAgBn2C,IAGxB,uBAMA,0BAA+BhL,EAAUC,GACxC,GAAsB,qBAAX++B,EACV,MAAM,IAAIjlC,MAAM,yCAGjB,OAAOilC,EAAOW,KAAKkhB,EAAmB7gD,EAAKC,O","file":"static/js/3.d88bd067.chunk.js","sourcesContent":["import { fromByteArray } from 'base64-js';\nimport { Layer, BlendMode, LayerColor } from './psd';\n\nexport const MOCK_HANDLERS = false;\nexport const RAW_IMAGE_DATA = false;\n\nexport const fromBlendMode: { [key: string]: string } = {};\nexport const toBlendMode: { [key: string]: BlendMode } = {\n\t'pass': 'pass through',\n\t'norm': 'normal',\n\t'diss': 'dissolve',\n\t'dark': 'darken',\n\t'mul ': 'multiply',\n\t'idiv': 'color burn',\n\t'lbrn': 'linear burn',\n\t'dkCl': 'darker color',\n\t'lite': 'lighten',\n\t'scrn': 'screen',\n\t'div ': 'color dodge',\n\t'lddg': 'linear dodge',\n\t'lgCl': 'lighter color',\n\t'over': 'overlay',\n\t'sLit': 'soft light',\n\t'hLit': 'hard light',\n\t'vLit': 'vivid light',\n\t'lLit': 'linear light',\n\t'pLit': 'pin light',\n\t'hMix': 'hard mix',\n\t'diff': 'difference',\n\t'smud': 'exclusion',\n\t'fsub': 'subtract',\n\t'fdiv': 'divide',\n\t'hue ': 'hue',\n\t'sat ': 'saturation',\n\t'colr': 'color',\n\t'lum ': 'luminosity',\n};\n\nObject.keys(toBlendMode).forEach(key => fromBlendMode[toBlendMode[key]] = key);\n\nexport const layerColors: LayerColor[] = [\n\t'none', 'red', 'orange', 'yellow', 'green', 'blue', 'violet', 'gray'\n];\n\nexport const largeAdditionalInfoKeys = [\n\t// from documentation\n\t'LMsk', 'Lr16', 'Lr32', 'Layr', 'Mt16', 'Mt32', 'Mtrn', 'Alph', 'FMsk', 'lnk2', 'FEid', 'FXid', 'PxSD',\n\t// from guessing\n\t'cinf',\n];\n\nexport interface Dict {\n\t[key: string]: string;\n}\n\nexport function revMap(map: Dict) {\n\tconst result: Dict = {};\n\tObject.keys(map).forEach(key => result[map[key]] = key);\n\treturn result;\n}\n\nexport function createEnum<T>(prefix: string, def: string, map: Dict) {\n\tconst rev = revMap(map);\n\tconst decode = (val: string): T => {\n\t\tconst value = val.split('.')[1];\n\t\tif (value && !rev[value]) throw new Error(`Unrecognized value for enum: '${val}'`);\n\t\treturn (rev[value] as any) || def;\n\t};\n\tconst encode = (val: T | undefined): string => {\n\t\tif (val && !map[val as any]) throw new Error(`Invalid value for enum: '${val}'`);\n\t\treturn `${prefix}.${map[val as any] || map[def]}`;\n\t};\n\treturn { decode, encode };\n}\n\nexport const enum ColorSpace {\n\tRGB = 0,\n\tHSB = 1,\n\tCMYK = 2,\n\tLab = 7,\n\tGrayscale = 8,\n}\n\nexport const enum LayerMaskFlags {\n\tPositionRelativeToLayer = 1,\n\tLayerMaskDisabled = 2,\n\tInvertLayerMaskWhenBlending = 4, // obsolete\n\tLayerMaskFromRenderingOtherData = 8,\n\tMaskHasParametersAppliedToIt = 16,\n}\n\nexport const enum MaskParams {\n\tUserMaskDensity = 1,\n\tUserMaskFeather = 2,\n\tVectorMaskDensity = 4,\n\tVectorMaskFeather = 8,\n}\n\nexport const enum ChannelID {\n\tRed = 0,\n\tGreen = 1,\n\tBlue = 2,\n\tTransparency = -1,\n\tUserMask = -2,\n\tRealUserMask = -3,\n}\n\nexport const enum Compression {\n\tRawData = 0,\n\tRleCompressed = 1,\n\tZipWithoutPrediction = 2,\n\tZipWithPrediction = 3,\n}\n\nexport interface ChannelData {\n\tchannelId: ChannelID;\n\tcompression: Compression;\n\tbuffer: Uint8Array | undefined;\n\tlength: number;\n}\n\nexport interface Bounds {\n\ttop: number;\n\tleft: number;\n\tright: number;\n\tbottom: number;\n}\n\nexport interface LayerChannelData {\n\tlayer: Layer;\n\tchannels: ChannelData[];\n\ttop: number;\n\tleft: number;\n\tright: number;\n\tbottom: number;\n\tmask?: Bounds;\n}\n\nexport type PixelArray = Uint8ClampedArray | Uint8Array;\n\nexport interface PixelData {\n\tdata: PixelArray;\n\twidth: number;\n\theight: number;\n}\n\nexport function offsetForChannel(channelId: ChannelID) {\n\tswitch (channelId) {\n\t\tcase ChannelID.Red: return 0;\n\t\tcase ChannelID.Green: return 1;\n\t\tcase ChannelID.Blue: return 2;\n\t\tcase ChannelID.Transparency: return 3;\n\t\tdefault: return channelId + 1;\n\t}\n}\n\nexport function clamp(value: number, min: number, max: number) {\n\treturn value < min ? min : (value > max ? max : value);\n}\n\nexport function hasAlpha(data: PixelData) {\n\tconst size = data.width * data.height * 4;\n\n\tfor (let i = 3; i < size; i += 4) {\n\t\tif (data.data[i] !== 255) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport function resetImageData({ width, height, data }: PixelData) {\n\tconst size = (width * height) | 0;\n\tconst buffer = new Uint32Array(data.buffer);\n\n\tfor (let p = 0; p < size; p = (p + 1) | 0) {\n\t\tbuffer[p] = 0xff000000;\n\t}\n}\n\nexport function decodeBitmap(input: PixelArray, output: PixelArray, width: number, height: number) {\n\tfor (let y = 0, p = 0, o = 0; y < height; y++) {\n\t\tfor (let x = 0; x < width;) {\n\t\t\tlet b = input[o++];\n\n\t\t\tfor (let i = 0; i < 8 && x < width; i++, x++) {\n\t\t\t\tconst v = b & 0x80 ? 0 : 255;\n\t\t\t\tb = b << 1;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = v;\n\t\t\t\toutput[p++] = 255;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function writeDataRaw(data: PixelData, offset: number, width: number, height: number) {\n\tif (!width || !height)\n\t\treturn undefined;\n\n\tconst array = new Uint8Array(width * height);\n\n\tfor (let i = 0; i < array.length; i++) {\n\t\tarray[i] = data.data[i * 4 + offset];\n\t}\n\n\treturn array;\n}\n\nexport function writeDataRLE(\n\tbuffer: Uint8Array, { data }: PixelData, width: number, height: number, offsets: number[],\n\tlarge: boolean\n) {\n\tif (!width || !height) return undefined;\n\n\tconst stride = (4 * width) | 0;\n\n\tlet ol = 0;\n\tlet o = (offsets.length * (large ? 4 : 2) * height) | 0;\n\n\tfor (const offset of offsets) {\n\t\tfor (let y = 0, p = offset | 0; y < height; y++) {\n\t\t\tconst strideStart = (y * stride) | 0;\n\t\t\tconst strideEnd = (strideStart + stride) | 0;\n\t\t\tconst lastIndex = (strideEnd + offset - 4) | 0;\n\t\t\tconst lastIndex2 = (lastIndex - 4) | 0;\n\t\t\tconst startOffset = o;\n\n\t\t\tfor (p = (strideStart + offset) | 0; p < strideEnd; p = (p + 4) | 0) {\n\t\t\t\tif (p < lastIndex2) {\n\t\t\t\t\tlet value1 = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tlet value2 = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tlet value3 = data[p];\n\n\t\t\t\t\tif (value1 === value2 && value1 === value3) {\n\t\t\t\t\t\tlet count = 3;\n\n\t\t\t\t\t\twhile (count < 128 && p < lastIndex && data[(p + 4) | 0] === value1) {\n\t\t\t\t\t\t\tcount = (count + 1) | 0;\n\t\t\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbuffer[o++] = 1 - count;\n\t\t\t\t\t\tbuffer[o++] = value1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst countIndex = o;\n\t\t\t\t\t\tlet writeLast = true;\n\t\t\t\t\t\tlet count = 1;\n\t\t\t\t\t\tbuffer[o++] = 0;\n\t\t\t\t\t\tbuffer[o++] = value1;\n\n\t\t\t\t\t\twhile (p < lastIndex && count < 128) {\n\t\t\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\t\t\tvalue1 = value2;\n\t\t\t\t\t\t\tvalue2 = value3;\n\t\t\t\t\t\t\tvalue3 = data[p];\n\n\t\t\t\t\t\t\tif (value1 === value2 && value1 === value3) {\n\t\t\t\t\t\t\t\tp = (p - 12) | 0;\n\t\t\t\t\t\t\t\twriteLast = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\tbuffer[o++] = value1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (writeLast) {\n\t\t\t\t\t\t\tif (count < 127) {\n\t\t\t\t\t\t\t\tbuffer[o++] = value2;\n\t\t\t\t\t\t\t\tbuffer[o++] = value3;\n\t\t\t\t\t\t\t\tcount += 2;\n\t\t\t\t\t\t\t} else if (count < 128) {\n\t\t\t\t\t\t\t\tbuffer[o++] = value2;\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t\tp = (p - 4) | 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tp = (p - 8) | 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbuffer[countIndex] = count - 1;\n\t\t\t\t\t}\n\t\t\t\t} else if (p === lastIndex) {\n\t\t\t\t\tbuffer[o++] = 0;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t} else { // p === lastIndex2\n\t\t\t\t\tbuffer[o++] = 1;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t\tp = (p + 4) | 0;\n\t\t\t\t\tbuffer[o++] = data[p];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst length = o - startOffset;\n\n\t\t\tif (large) {\n\t\t\t\tbuffer[ol++] = (length >> 24) & 0xff;\n\t\t\t\tbuffer[ol++] = (length >> 16) & 0xff;\n\t\t\t}\n\n\t\t\tbuffer[ol++] = (length >> 8) & 0xff;\n\t\t\tbuffer[ol++] = length & 0xff;\n\t\t}\n\t}\n\n\treturn buffer.slice(0, o);\n}\n\nexport let createCanvas: (width: number, height: number) => HTMLCanvasElement = () => {\n\tthrow new Error('Canvas not initialized, use initializeCanvas method to set up createCanvas method');\n};\n\nexport let createCanvasFromData: (data: Uint8Array) => HTMLCanvasElement = () => {\n\tthrow new Error('Canvas not initialized, use initializeCanvas method to set up createCanvasFromData method');\n};\n\nlet tempCanvas: HTMLCanvasElement | undefined = undefined;\n\nexport let createImageData: (width: number, height: number) => ImageData = (width, height) => {\n\tif (!tempCanvas) tempCanvas = createCanvas(1, 1);\n\treturn tempCanvas.getContext('2d')!.createImageData(width, height);\n};\n\nif (typeof document !== 'undefined') {\n\tcreateCanvas = (width, height) => {\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\treturn canvas;\n\t};\n\n\tcreateCanvasFromData = (data) => {\n\t\tconst image = new Image();\n\t\timage.src = 'data:image/jpeg;base64,' + fromByteArray(data);\n\t\tconst canvas = document.createElement('canvas');\n\t\tcanvas.width = image.width;\n\t\tcanvas.height = image.height;\n\t\tcanvas.getContext('2d')!.drawImage(image, 0, 0);\n\t\treturn canvas;\n\t};\n}\n\nexport function initializeCanvas(\n\tcreateCanvasMethod: (width: number, height: number) => HTMLCanvasElement,\n\tcreateCanvasFromDataMethod?: (data: Uint8Array) => HTMLCanvasElement,\n\tcreateImageDataMethod?: (width: number, height: number) => ImageData\n) {\n\tcreateCanvas = createCanvasMethod;\n\tcreateCanvasFromData = createCanvasFromDataMethod || createCanvasFromData;\n\tcreateImageData = createImageDataMethod || createImageData;\n}\n","// import * as zlib from 'zlib';\nimport {\n\tPsd, Layer, ColorMode, SectionDividerType, LayerAdditionalInfo, ReadOptions, LayerMaskData, Color,\n\tPatternInfo, GlobalLayerMaskInfo\n} from './psd';\nimport {\n\tresetImageData, offsetForChannel, decodeBitmap, PixelData, createCanvas, createImageData,\n\ttoBlendMode, ChannelID, Compression, LayerMaskFlags, MaskParams, ColorSpace, RAW_IMAGE_DATA, largeAdditionalInfoKeys\n} from './helpers';\nimport { infoHandlersMap } from './additionalInfo';\nimport { resourceHandlersMap } from './imageResources';\n\ninterface ChannelInfo {\n\tid: ChannelID;\n\tlength: number;\n}\n\ninterface ReadOptionsExt extends ReadOptions {\n\tlarge: boolean;\n}\n\nexport const supportedColorModes = [ColorMode.Bitmap, ColorMode.Grayscale, ColorMode.RGB];\nconst colorModes = ['bitmap', 'grayscale', 'indexed', 'RGB', 'CMYK', 'multichannel', 'duotone', 'lab'];\n\nfunction setupGrayscale(data: PixelData) {\n\tconst size = data.width * data.height * 4;\n\n\tfor (let i = 0; i < size; i += 4) {\n\t\tdata.data[i + 1] = data.data[i];\n\t\tdata.data[i + 2] = data.data[i];\n\t}\n}\n\nexport interface PsdReader {\n\toffset: number;\n\tview: DataView;\n}\n\nexport function createReader(buffer: ArrayBuffer, offset?: number, length?: number): PsdReader {\n\tconst view = new DataView(buffer, offset, length);\n\treturn { view, offset: 0 };\n}\n\nexport function readUint8(reader: PsdReader) {\n\treader.offset += 1;\n\treturn reader.view.getUint8(reader.offset - 1);\n}\n\nexport function peekUint8(reader: PsdReader) {\n\treturn reader.view.getUint8(reader.offset);\n}\n\nexport function readInt16(reader: PsdReader) {\n\treader.offset += 2;\n\treturn reader.view.getInt16(reader.offset - 2, false);\n}\n\nexport function readUint16(reader: PsdReader) {\n\treader.offset += 2;\n\treturn reader.view.getUint16(reader.offset - 2, false);\n}\n\nexport function readInt32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getInt32(reader.offset - 4, false);\n}\n\nexport function readInt32LE(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getInt32(reader.offset - 4, true);\n}\n\nexport function readUint32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getUint32(reader.offset - 4, false);\n}\n\nexport function readFloat32(reader: PsdReader) {\n\treader.offset += 4;\n\treturn reader.view.getFloat32(reader.offset - 4, false);\n}\n\nexport function readFloat64(reader: PsdReader) {\n\treader.offset += 8;\n\treturn reader.view.getFloat64(reader.offset - 8, false);\n}\n\n// 32-bit fixed-point number 16.16\nexport function readFixedPoint32(reader: PsdReader): number {\n\treturn readInt32(reader) / (1 << 16);\n}\n\n// 32-bit fixed-point number 8.24\nexport function readFixedPointPath32(reader: PsdReader): number {\n\treturn readInt32(reader) / (1 << 24);\n}\n\nexport function readBytes(reader: PsdReader, length: number) {\n\treader.offset += length;\n\treturn new Uint8Array(reader.view.buffer, reader.view.byteOffset + reader.offset - length, length);\n}\n\nexport function readSignature(reader: PsdReader) {\n\treturn readShortString(reader, 4);\n}\n\nexport function readPascalString(reader: PsdReader, padTo: number) {\n\tlet length = readUint8(reader);\n\tconst text = length ? readShortString(reader, length) : '';\n\n\twhile (++length % padTo) {\n\t\treader.offset++;\n\t}\n\n\treturn text;\n}\n\nexport function readUnicodeString(reader: PsdReader) {\n\tconst length = readUint32(reader);\n\treturn readUnicodeStringWithLength(reader, length);\n}\n\nexport function readUnicodeStringWithLength(reader: PsdReader, length: number) {\n\tlet text = '';\n\n\twhile (length--) {\n\t\tconst value = readUint16(reader);\n\n\t\tif (value || length > 0) { // remove trailing \\0\n\t\t\ttext += String.fromCharCode(value);\n\t\t}\n\t}\n\n\treturn text;\n}\n\nexport function readAsciiString(reader: PsdReader, length: number) {\n\tlet text = '';\n\n\twhile (length--) {\n\t\ttext += String.fromCharCode(readUint8(reader));\n\t}\n\n\treturn text;\n}\n\nexport function skipBytes(reader: PsdReader, count: number) {\n\treader.offset += count;\n}\n\nexport function checkSignature(reader: PsdReader, a: string, b?: string) {\n\tconst offset = reader.offset;\n\tconst signature = readSignature(reader);\n\n\tif (signature !== a && signature !== b) {\n\t\tthrow new Error(`Invalid signature: '${signature}' at 0x${offset.toString(16)}`);\n\t}\n}\n\nfunction readShortString(reader: PsdReader, length: number) {\n\tconst buffer = readBytes(reader, length);\n\tlet result = '';\n\n\tfor (let i = 0; i < buffer.length; i++) {\n\t\tresult += String.fromCharCode(buffer[i]);\n\t}\n\n\treturn result;\n}\n\nexport function readPsd(reader: PsdReader, options: ReadOptions = {}) {\n\t// header\n\tcheckSignature(reader, '8BPS');\n\tconst version = readUint16(reader);\n\tif (version !== 1 && version !== 2) throw new Error(`Invalid PSD file version: ${version}`);\n\n\tskipBytes(reader, 6);\n\tconst channels = readUint16(reader);\n\tconst height = readUint32(reader);\n\tconst width = readUint32(reader);\n\tconst bitsPerChannel = readUint16(reader);\n\tconst colorMode = readUint16(reader);\n\n\tif (supportedColorModes.indexOf(colorMode) === -1)\n\t\tthrow new Error(`Color mode not supported: ${colorModes[colorMode] ?? colorMode}`);\n\n\tconst psd: Psd = { width, height, channels, bitsPerChannel, colorMode };\n\tconst opt: ReadOptionsExt = { ...options, large: version === 2 };\n\n\t// color mode data\n\treadSection(reader, 1, left => {\n\t\tif (opt.throwForMissingFeatures) throw new Error('Color mode data not supported');\n\t\tskipBytes(reader, left());\n\t});\n\n\t// image resources\n\treadSection(reader, 1, left => {\n\t\twhile (left()) {\n\t\t\tconst sig = readSignature(reader);\n\n\t\t\tif (sig !== '8BIM' && sig !== 'MeSa' && sig !== 'AgHg' && sig !== 'PHUT' && sig !== 'DCSR') {\n\t\t\t\tthrow new Error(`Invalid signature: '${sig}' at 0x${(reader.offset - 4).toString(16)}`);\n\t\t\t}\n\n\t\t\tconst id = readUint16(reader);\n\t\t\treadPascalString(reader, 2); // name\n\n\t\t\treadSection(reader, 2, left => {\n\t\t\t\tconst handler = resourceHandlersMap[id];\n\t\t\t\tconst skip = id === 1036 && !!opt.skipThumbnail;\n\n\t\t\t\tif (!psd.imageResources) {\n\t\t\t\t\tpsd.imageResources = {};\n\t\t\t\t}\n\n\t\t\t\tif (handler && !skip) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandler.read(reader, psd.imageResources, left, opt);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (opt.throwForMissingFeatures) throw e;\n\t\t\t\t\t\tskipBytes(reader, left());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// options.logMissingFeatures && console.log(`Unhandled image resource: ${id}`);\n\t\t\t\t\tskipBytes(reader, left());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\t// layer and mask info\n\tlet globalAlpha = false;\n\n\treadSection(reader, 1, left => {\n\t\tglobalAlpha = readLayerInfo(reader, psd, opt);\n\n\t\t// SAI does not include this section\n\t\tif (left() > 0) {\n\t\t\tconst globalLayerMaskInfo = readGlobalLayerMaskInfo(reader);\n\t\t\tif (globalLayerMaskInfo) psd.globalLayerMaskInfo = globalLayerMaskInfo;\n\t\t} else {\n\t\t\t// revert back to end of section if exceeded section limits\n\t\t\t// opt.logMissingFeatures && console.log('reverting to end of section');\n\t\t\tskipBytes(reader, left());\n\t\t}\n\n\t\twhile (left() > 0) {\n\t\t\t// sometimes there are empty bytes here\n\t\t\twhile (left() && peekUint8(reader) === 0) {\n\t\t\t\t// opt.logMissingFeatures && console.log('skipping 0 byte');\n\t\t\t\tskipBytes(reader, 1);\n\t\t\t}\n\n\t\t\tif (left() >= 12) {\n\t\t\t\treadAdditionalLayerInfo(reader, psd, psd, opt);\n\t\t\t} else {\n\t\t\t\t// opt.logMissingFeatures && console.log('skipping leftover bytes', left());\n\t\t\t\tskipBytes(reader, left());\n\t\t\t}\n\t\t}\n\t}, undefined, opt.large);\n\n\tconst hasChildren = psd.children && psd.children.length;\n\tconst skipComposite = opt.skipCompositeImageData && (opt.skipLayerImageData || hasChildren);\n\n\tif (!skipComposite) {\n\t\treadImageData(reader, psd, globalAlpha, opt);\n\t}\n\n\treturn psd;\n}\n\nfunction readLayerInfo(reader: PsdReader, psd: Psd, options: ReadOptionsExt) {\n\tlet globalAlpha = false;\n\n\treadSection(reader, 2, left => {\n\t\tlet layerCount = readInt16(reader);\n\n\t\tif (layerCount < 0) {\n\t\t\tglobalAlpha = true;\n\t\t\tlayerCount = -layerCount;\n\t\t}\n\n\t\tconst layers: Layer[] = [];\n\t\tconst layerChannels: ChannelInfo[][] = [];\n\n\t\tfor (let i = 0; i < layerCount; i++) {\n\t\t\tconst { layer, channels } = readLayerRecord(reader, psd, options);\n\t\t\tlayers.push(layer);\n\t\t\tlayerChannels.push(channels);\n\t\t}\n\n\t\tif (!options.skipLayerImageData) {\n\t\t\tfor (let i = 0; i < layerCount; i++) {\n\t\t\t\treadLayerChannelImageData(reader, psd, layers[i], layerChannels[i], options);\n\t\t\t}\n\t\t}\n\n\t\tskipBytes(reader, left());\n\n\t\tif (!psd.children) psd.children = [];\n\n\t\tconst stack: (Layer | Psd)[] = [psd];\n\n\t\tfor (let i = layers.length - 1; i >= 0; i--) {\n\t\t\tconst l = layers[i];\n\t\t\tconst type = l.sectionDivider ? l.sectionDivider.type : SectionDividerType.Other;\n\n\t\t\tif (type === SectionDividerType.OpenFolder || type === SectionDividerType.ClosedFolder) {\n\t\t\t\tl.opened = type === SectionDividerType.OpenFolder;\n\t\t\t\tl.children = [];\n\t\t\t\tstack[stack.length - 1].children!.unshift(l);\n\t\t\t\tstack.push(l);\n\t\t\t} else if (type === SectionDividerType.BoundingSectionDivider) {\n\t\t\t\tstack.pop();\n\t\t\t\t// this was workaround because I didn't know what `lsdk` section was, now it's probably not needed anymore\n\t\t\t\t// } else if (l.name === '</Layer group>' && !l.sectionDivider && !l.top && !l.left && !l.bottom && !l.right) {\n\t\t\t\t// \t// sometimes layer group terminator doesn't have sectionDivider, so we just guess here (PS bug ?)\n\t\t\t\t// \tstack.pop();\n\t\t\t} else {\n\t\t\t\tstack[stack.length - 1].children!.unshift(l);\n\t\t\t}\n\t\t}\n\t}, undefined, options.large);\n\n\treturn globalAlpha;\n}\n\nfunction readLayerRecord(reader: PsdReader, psd: Psd, options: ReadOptionsExt) {\n\tconst layer: Layer = {};\n\tlayer.top = readInt32(reader);\n\tlayer.left = readInt32(reader);\n\tlayer.bottom = readInt32(reader);\n\tlayer.right = readInt32(reader);\n\n\tconst channelCount = readUint16(reader);\n\tconst channels: ChannelInfo[] = [];\n\n\tfor (let i = 0; i < channelCount; i++) {\n\t\tlet channelID = readInt16(reader) as ChannelID;\n\t\tlet channelLength = readUint32(reader);\n\n\t\tif (options.large) {\n\t\t\tif (channelLength !== 0) throw new Error('Sizes larger than 4GB are not supported');\n\t\t\tchannelLength = readUint32(reader);\n\t\t}\n\n\t\tchannels.push({ id: channelID, length: channelLength });\n\t}\n\n\tcheckSignature(reader, '8BIM');\n\tconst blendMode = readSignature(reader);\n\tif (!toBlendMode[blendMode]) throw new Error(`Invalid blend mode: '${blendMode}'`);\n\tlayer.blendMode = toBlendMode[blendMode];\n\n\tlayer.opacity = readUint8(reader) / 0xff;\n\tlayer.clipping = readUint8(reader) === 1;\n\n\tconst flags = readUint8(reader);\n\tlayer.transparencyProtected = (flags & 0x01) !== 0;\n\tlayer.hidden = (flags & 0x02) !== 0;\n\t// 0x04 - obsolete\n\t// 0x08 - 1 for Photoshop 5.0 and later, tells if bit 4 has useful information\n\t// 0x10 - pixel data irrelevant to appearance of document\n\n\tskipBytes(reader, 1);\n\n\treadSection(reader, 1, left => {\n\t\tconst mask = readLayerMaskData(reader, options);\n\t\tif (mask) layer.mask = mask;\n\n\t\t/*const blendingRanges =*/ readLayerBlendingRanges(reader);\n\t\tlayer.name = readPascalString(reader, 4);\n\n\t\twhile (left()) {\n\t\t\treadAdditionalLayerInfo(reader, layer, psd, options);\n\t\t}\n\t});\n\n\treturn { layer, channels };\n}\n\nfunction readLayerMaskData(reader: PsdReader, options: ReadOptions) {\n\treturn readSection<LayerMaskData | undefined>(reader, 1, left => {\n\t\tif (!left()) return undefined;\n\n\t\tconst mask: LayerMaskData = {};\n\t\tmask.top = readInt32(reader);\n\t\tmask.left = readInt32(reader);\n\t\tmask.bottom = readInt32(reader);\n\t\tmask.right = readInt32(reader);\n\t\tmask.defaultColor = readUint8(reader);\n\n\t\tconst flags = readUint8(reader);\n\t\tmask.positionRelativeToLayer = (flags & LayerMaskFlags.PositionRelativeToLayer) !== 0;\n\t\tmask.disabled = (flags & LayerMaskFlags.LayerMaskDisabled) !== 0;\n\t\tmask.fromVectorData = (flags & LayerMaskFlags.LayerMaskFromRenderingOtherData) !== 0;\n\n\t\tif (flags & LayerMaskFlags.MaskHasParametersAppliedToIt) {\n\t\t\tconst params = readUint8(reader);\n\t\t\tif (params & MaskParams.UserMaskDensity) mask.userMaskDensity = readUint8(reader) / 0xff;\n\t\t\tif (params & MaskParams.UserMaskFeather) mask.userMaskFeather = readFloat64(reader);\n\t\t\tif (params & MaskParams.VectorMaskDensity) mask.vectorMaskDensity = readUint8(reader) / 0xff;\n\t\t\tif (params & MaskParams.VectorMaskFeather) mask.vectorMaskFeather = readFloat64(reader);\n\t\t}\n\n\t\tif (left() > 2) {\n\t\t\toptions.logMissingFeatures && console.log('Unhandled extra mask params');\n\t\t\t// TODO: handle these values\n\t\t\t/*const realFlags =*/ readUint8(reader);\n\t\t\t/*const realUserMaskBackground =*/ readUint8(reader);\n\t\t\t/*const top2 =*/ readInt32(reader);\n\t\t\t/*const left2 =*/ readInt32(reader);\n\t\t\t/*const bottom2 =*/ readInt32(reader);\n\t\t\t/*const right2 =*/ readInt32(reader);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t\treturn mask;\n\t});\n}\n\nfunction readLayerBlendingRanges(reader: PsdReader) {\n\treturn readSection(reader, 1, left => {\n\t\tconst compositeGrayBlendSource = readUint32(reader);\n\t\tconst compositeGraphBlendDestinationRange = readUint32(reader);\n\t\tconst ranges = [];\n\n\t\twhile (left()) {\n\t\t\tconst sourceRange = readUint32(reader);\n\t\t\tconst destRange = readUint32(reader);\n\t\t\tranges.push({ sourceRange, destRange });\n\t\t}\n\n\t\treturn { compositeGrayBlendSource, compositeGraphBlendDestinationRange, ranges };\n\t});\n}\n\nfunction readLayerChannelImageData(\n\treader: PsdReader, psd: Psd, layer: Layer, channels: ChannelInfo[], options: ReadOptionsExt\n) {\n\tconst layerWidth = (layer.right || 0) - (layer.left || 0);\n\tconst layerHeight = (layer.bottom || 0) - (layer.top || 0);\n\n\tlet imageData: ImageData | undefined;\n\n\tif (layerWidth && layerHeight) {\n\t\timageData = createImageData(layerWidth, layerHeight);\n\t\tresetImageData(imageData);\n\t}\n\n\tif (RAW_IMAGE_DATA) {\n\t\t(layer as any).imageDataRaw = [];\n\t}\n\n\tfor (const channel of channels) {\n\t\tconst compression = readUint16(reader) as Compression;\n\n\t\tif (channel.id === ChannelID.UserMask) {\n\t\t\tconst mask = layer.mask;\n\n\t\t\tif (!mask) throw new Error(`Missing layer mask data`);\n\n\t\t\tconst maskWidth = (mask.right || 0) - (mask.left || 0);\n\t\t\tconst maskHeight = (mask.bottom || 0) - (mask.top || 0);\n\n\t\t\tif (maskWidth && maskHeight) {\n\t\t\t\tconst maskData = createImageData(maskWidth, maskHeight);\n\t\t\t\tresetImageData(maskData);\n\n\t\t\t\tconst start = reader.offset;\n\t\t\t\treadData(reader, maskData, compression, maskWidth, maskHeight, 0, options.large);\n\n\t\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t\t(layer as any).maskDataRaw = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t\t}\n\n\t\t\t\tsetupGrayscale(maskData);\n\n\t\t\t\tif (options.useImageData) {\n\t\t\t\t\tmask.imageData = maskData;\n\t\t\t\t} else {\n\t\t\t\t\tmask.canvas = createCanvas(maskWidth, maskHeight);\n\t\t\t\t\tmask.canvas.getContext('2d')!.putImageData(maskData, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconst offset = offsetForChannel(channel.id);\n\t\t\tlet targetData = imageData;\n\n\t\t\tif (offset < 0) {\n\t\t\t\ttargetData = undefined;\n\n\t\t\t\tif (options.throwForMissingFeatures) {\n\t\t\t\t\tthrow new Error(`Channel not supported: ${channel.id}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst start = reader.offset;\n\t\t\treadData(reader, targetData, compression, layerWidth, layerHeight, offset, options.large);\n\n\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t(layer as any).imageDataRaw[channel.id] = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t}\n\n\t\t\tif (targetData && psd.colorMode === ColorMode.Grayscale) {\n\t\t\t\tsetupGrayscale(targetData);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (imageData) {\n\t\tif (options.useImageData) {\n\t\t\tlayer.imageData = imageData;\n\t\t} else {\n\t\t\tlayer.canvas = createCanvas(layerWidth, layerHeight);\n\t\t\tlayer.canvas.getContext('2d')!.putImageData(imageData, 0, 0);\n\t\t}\n\t}\n}\n\nfunction readData(\n\treader: PsdReader, data: ImageData | undefined, compression: Compression, width: number, height: number,\n\toffset: number, large: boolean\n) {\n\tif (compression === Compression.RawData) {\n\t\treadDataRaw(reader, data, offset, width, height);\n\t} else if (compression === Compression.RleCompressed) {\n\t\treadDataRLE(reader, data, width, height, 4, [offset], large);\n\t} else {\n\t\tthrow new Error(`Compression type not supported: ${compression}`);\n\t}\n}\n\nfunction readGlobalLayerMaskInfo(reader: PsdReader) {\n\treturn readSection<GlobalLayerMaskInfo | undefined>(reader, 1, left => {\n\t\tif (!left()) return undefined;\n\n\t\tconst overlayColorSpace = readUint16(reader);\n\t\tconst colorSpace1 = readUint16(reader);\n\t\tconst colorSpace2 = readUint16(reader);\n\t\tconst colorSpace3 = readUint16(reader);\n\t\tconst colorSpace4 = readUint16(reader);\n\t\tconst opacity = readUint16(reader) / 0xff;\n\t\tconst kind = readUint8(reader);\n\t\tskipBytes(reader, left()); // 3 bytes of padding ?\n\t\treturn { overlayColorSpace, colorSpace1, colorSpace2, colorSpace3, colorSpace4, opacity, kind };\n\t});\n}\n\nfunction readAdditionalLayerInfo(reader: PsdReader, target: LayerAdditionalInfo, psd: Psd, options: ReadOptionsExt) {\n\tconst sig = readSignature(reader);\n\tif (sig !== '8BIM' && sig !== '8B64') throw new Error(`Invalid signature: '${sig}' at 0x${(reader.offset - 4).toString(16)}`);\n\tconst key = readSignature(reader);\n\n\t// `largeAdditionalInfoKeys` fallback, because some keys don't have 8B64 signature even when they are 64bit\n\tconst u64 = sig === '8B64' || (options.large && largeAdditionalInfoKeys.indexOf(key) !== -1);\n\n\treadSection(reader, 2, left => {\n\t\tconst handler = infoHandlersMap[key];\n\n\t\tif (handler) {\n\t\t\ttry {\n\t\t\t\thandler.read(reader, target, left, psd, options);\n\t\t\t} catch (e) {\n\t\t\t\tif (options.throwForMissingFeatures) throw e;\n\t\t\t}\n\t\t} else {\n\t\t\toptions.logMissingFeatures && console.log(`Unhandled additional info: ${key}`);\n\t\t\tskipBytes(reader, left());\n\t\t}\n\n\t\tif (left()) {\n\t\t\toptions.logMissingFeatures && console.log(`Unread ${left()} bytes left for additional info: ${key}`);\n\t\t\tskipBytes(reader, left());\n\t\t}\n\t}, false, u64);\n}\n\nfunction readImageData(reader: PsdReader, psd: Psd, globalAlpha: boolean, options: ReadOptionsExt) {\n\tconst compression = readUint16(reader) as Compression;\n\n\tif (supportedColorModes.indexOf(psd.colorMode!) === -1)\n\t\tthrow new Error(`Color mode not supported: ${psd.colorMode}`);\n\n\tif (compression !== Compression.RawData && compression !== Compression.RleCompressed)\n\t\tthrow new Error(`Compression type not supported: ${compression}`);\n\n\tconst imageData = createImageData(psd.width, psd.height);\n\tresetImageData(imageData);\n\n\tif (psd.colorMode === ColorMode.Bitmap) {\n\t\tlet bytes: Uint8Array;\n\n\t\tif (compression === Compression.RawData) {\n\t\t\tbytes = readBytes(reader, Math.ceil(psd.width / 8) * psd.height);\n\t\t} else if (compression === Compression.RleCompressed) {\n\t\t\tbytes = new Uint8Array(psd.width * psd.height);\n\t\t\treadDataRLE(reader, { data: bytes, width: psd.width, height: psd.height }, psd.width, psd.height, 1, [0], options.large);\n\t\t} else {\n\t\t\tthrow new Error(`Bitmap compression not supported: ${compression}`);\n\t\t}\n\n\t\tdecodeBitmap(bytes, imageData.data, psd.width, psd.height);\n\t} else {\n\t\tconst channels = psd.colorMode === ColorMode.Grayscale ? [0] : [0, 1, 2];\n\n\t\tif (psd.channels && psd.channels > 3) {\n\t\t\tfor (let i = 3; i < psd.channels; i++) {\n\t\t\t\t// TODO: store these channels in additional image data\n\t\t\t\tchannels.push(i);\n\t\t\t}\n\t\t} else if (globalAlpha) {\n\t\t\tchannels.push(3);\n\t\t}\n\n\t\tif (compression === Compression.RawData) {\n\t\t\tfor (let i = 0; i < channels.length; i++) {\n\t\t\t\treadDataRaw(reader, imageData, channels[i], psd.width, psd.height);\n\t\t\t}\n\t\t} else if (compression === Compression.RleCompressed) {\n\t\t\tconst start = reader.offset;\n\t\t\treadDataRLE(reader, imageData, psd.width, psd.height, 4, channels, options.large);\n\n\t\t\tif (RAW_IMAGE_DATA) {\n\t\t\t\t(psd as any).imageDataRaw = new Uint8Array(reader.view.buffer, reader.view.byteOffset + start, reader.offset - start);\n\t\t\t}\n\t\t}\n\n\t\tif (psd.colorMode === ColorMode.Grayscale) {\n\t\t\tsetupGrayscale(imageData);\n\t\t}\n\t}\n\n\tif (options.useImageData) {\n\t\tpsd.imageData = imageData;\n\t} else {\n\t\tpsd.canvas = createCanvas(psd.width, psd.height);\n\t\tpsd.canvas.getContext('2d')!.putImageData(imageData, 0, 0);\n\t}\n}\n\nfunction readDataRaw(reader: PsdReader, pixelData: PixelData | undefined, offset: number, width: number, height: number) {\n\tconst size = width * height;\n\tconst buffer = readBytes(reader, size);\n\n\tif (pixelData && offset < 4) {\n\t\tconst data = pixelData.data;\n\n\t\tfor (let i = 0, p = offset | 0; i < size; i++, p = (p + 4) | 0) {\n\t\t\tdata[p] = buffer[i];\n\t\t}\n\t}\n}\n\nexport function readDataRLE(\n\treader: PsdReader, pixelData: PixelData | undefined, _width: number, height: number, step: number, offsets: number[],\n\tlarge: boolean\n) {\n\tconst data = pixelData && pixelData.data;\n\tlet lengths: Uint16Array | Uint32Array;\n\n\tif (large) {\n\t\tlengths = new Uint32Array(offsets.length * height);\n\n\t\tfor (let o = 0, li = 0; o < offsets.length; o++) {\n\t\t\tfor (let y = 0; y < height; y++, li++) {\n\t\t\t\tlengths[li] = readUint32(reader);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlengths = new Uint16Array(offsets.length * height);\n\n\t\tfor (let o = 0, li = 0; o < offsets.length; o++) {\n\t\t\tfor (let y = 0; y < height; y++, li++) {\n\t\t\t\tlengths[li] = readUint16(reader);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (let c = 0, li = 0; c < offsets.length; c++) {\n\t\tconst offset = offsets[c] | 0;\n\t\tconst extra = c > 3 || offset > 3;\n\n\t\tif (!data || extra) {\n\t\t\tfor (let y = 0; y < height; y++, li++) {\n\t\t\t\tskipBytes(reader, lengths[li]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let y = 0, p = offset | 0; y < height; y++, li++) {\n\t\t\t\tconst length = lengths[li];\n\t\t\t\tconst buffer = readBytes(reader, length);\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet header = buffer[i];\n\n\t\t\t\t\tif (header > 128) {\n\t\t\t\t\t\tconst value = buffer[++i];\n\t\t\t\t\t\theader = (256 - header) | 0;\n\n\t\t\t\t\t\tfor (let j = 0; j <= header; j = (j + 1) | 0) {\n\t\t\t\t\t\t\tdata[p] = value;\n\t\t\t\t\t\t\tp = (p + step) | 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (header < 128) {\n\t\t\t\t\t\tfor (let j = 0; j <= header; j = (j + 1) | 0) {\n\t\t\t\t\t\t\tdata[p] = buffer[++i];\n\t\t\t\t\t\t\tp = (p + step) | 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// ignore 128\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i >= length) {\n\t\t\t\t\t\tthrow new Error(`Invalid RLE data: exceeded buffer size ${i}/${length}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function readSection<T>(\n\treader: PsdReader, round: number, func: (left: () => number) => T, skipEmpty = true, eightBytes = false\n): T | undefined {\n\tlet length = readUint32(reader);\n\n\tif (eightBytes) {\n\t\tif (length !== 0) throw new Error('Sizes larger than 4GB are not supported');\n\t\tlength = readUint32(reader);\n\t}\n\n\tif (length <= 0 && skipEmpty) return undefined;\n\n\tlet end = reader.offset + length;\n\tconst result = func(() => end - reader.offset);\n\n\tif (reader.offset > end)\n\t\tthrow new Error('Exceeded section limits');\n\n\tif (reader.offset !== end)\n\t\tthrow new Error(`Unread section data: ${end - reader.offset} bytes at 0x${reader.offset.toString(16)}`);\n\n\twhile (end % round) end++;\n\n\treader.offset = end;\n\treturn result;\n}\n\nexport function readColor(reader: PsdReader): Color {\n\tconst colorSpace = readUint16(reader) as ColorSpace;\n\n\tswitch (colorSpace) {\n\t\tcase ColorSpace.RGB: {\n\t\t\tconst r = readUint16(reader) / 257;\n\t\t\tconst g = readUint16(reader) / 257;\n\t\t\tconst b = readUint16(reader) / 257;\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { r, g, b };\n\t\t}\n\t\tcase ColorSpace.HSB: {\n\t\t\tconst h = readUint16(reader) / 0xffff;\n\t\t\tconst s = readUint16(reader) / 0xffff;\n\t\t\tconst b = readUint16(reader) / 0xffff;\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { h, s, b };\n\t\t}\n\t\tcase ColorSpace.CMYK: {\n\t\t\tconst c = readUint16(reader) / 257;\n\t\t\tconst m = readUint16(reader) / 257;\n\t\t\tconst y = readUint16(reader) / 257;\n\t\t\tconst k = readUint16(reader) / 257;\n\t\t\treturn { c, m, y, k };\n\t\t}\n\t\tcase ColorSpace.Lab: {\n\t\t\tconst l = readInt16(reader) / 10000;\n\t\t\tconst ta = readInt16(reader);\n\t\t\tconst tb = readInt16(reader);\n\t\t\tconst a = ta < 0 ? (ta / 12800) : (ta / 12700);\n\t\t\tconst b = tb < 0 ? (tb / 12800) : (tb / 12700);\n\t\t\tskipBytes(reader, 2);\n\t\t\treturn { l, a, b };\n\t\t}\n\t\tcase ColorSpace.Grayscale: {\n\t\t\tconst k = readUint16(reader) * 255 / 10000;\n\t\t\tskipBytes(reader, 6);\n\t\t\treturn { k };\n\t\t}\n\t\tdefault:\n\t\t\tthrow new Error('Invalid color space');\n\t}\n}\n\nexport function readPattern(reader: PsdReader): PatternInfo {\n\treadUint32(reader); // length\n\tconst version = readUint32(reader);\n\tif (version !== 1) throw new Error(`Invalid pattern version: ${version}`);\n\n\tconst colorMode = readUint32(reader) as ColorMode;\n\tconst x = readInt16(reader);\n\tconst y = readInt16(reader);\n\n\t// we only support RGB and grayscale for now\n\tif (colorMode !== ColorMode.RGB && colorMode !== ColorMode.Grayscale) throw new Error('Unsupported pattern color mode');\n\n\tconst name = readUnicodeString(reader);\n\tconst id = readPascalString(reader, 1);\n\n\t// TODO: index color table here (only for indexed color mode, not supported right now)\n\n\t// virtual memory array list\n\tconst version2 = readUint32(reader);\n\tif (version2 !== 3) throw new Error(`Invalid pattern VMAL version: ${version2}`);\n\n\treadUint32(reader); // length\n\tconst top = readUint32(reader);\n\tconst left = readUint32(reader);\n\tconst bottom = readUint32(reader);\n\tconst right = readUint32(reader);\n\tconst channelsCount = readUint32(reader);\n\tconst width = right - left;\n\tconst height = bottom - top;\n\tconst data = new Uint8Array(width * height * 4);\n\n\tfor (let i = 3; i < data.byteLength; i += 4) {\n\t\tdata[i] = 255;\n\t}\n\n\tfor (let i = 0, ch = 0; i < (channelsCount + 2); i++) {\n\t\tconst has = readUint32(reader);\n\n\t\tif (has) {\n\t\t\tconst length = readUint32(reader);\n\t\t\tconst pixelDepth = readUint32(reader);\n\t\t\tconst ctop = readUint32(reader);\n\t\t\tconst cleft = readUint32(reader);\n\t\t\tconst cbottom = readUint32(reader);\n\t\t\tconst cright = readUint32(reader);\n\t\t\tconst pixelDepth2 = readUint16(reader);\n\t\t\tconst compressionMode = readUint8(reader); // 0 - raw, 1 - zip\n\t\t\tconst dataLength = length - (4 + 16 + 2 + 1);\n\t\t\tconst cdata = readBytes(reader, dataLength);\n\n\t\t\tif (pixelDepth !== 8 || pixelDepth2 !== 8) throw new Error('16bit pixel depth not supported for palettes');\n\n\t\t\tconst w = cright - cleft;\n\t\t\tconst h = cbottom - ctop;\n\t\t\tconst ox = cleft - left;\n\t\t\tconst oy = ctop - top;\n\n\t\t\tif (compressionMode === 0) {\n\t\t\t\tif (colorMode === ColorMode.RGB && ch < 3) {\n\t\t\t\t\tfor (let y = 0; y < h; y++) {\n\t\t\t\t\t\tfor (let x = 0; x < w; x++) {\n\t\t\t\t\t\t\tconst src = x + y * w;\n\t\t\t\t\t\t\tconst dst = (ox + x + (y + oy) * width) * 4;\n\t\t\t\t\t\t\tdata[dst + ch] = cdata[src];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (colorMode === ColorMode.Grayscale && ch < 1) {\n\t\t\t\t\tfor (let y = 0; y < h; y++) {\n\t\t\t\t\t\tfor (let x = 0; x < w; x++) {\n\t\t\t\t\t\t\tconst src = x + y * w;\n\t\t\t\t\t\t\tconst dst = (ox + x + (y + oy) * width) * 4;\n\t\t\t\t\t\t\tconst value = cdata[src];\n\t\t\t\t\t\t\tdata[dst + 0] = value;\n\t\t\t\t\t\t\tdata[dst + 1] = value;\n\t\t\t\t\t\t\tdata[dst + 2] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (compressionMode === 1) {\n\t\t\t\t// console.log({ colorMode });\n\t\t\t\t// require('fs').writeFileSync('zip.bin', Buffer.from(cdata));\n\t\t\t\t// const data = require('zlib').inflateRawSync(cdata);\n\t\t\t\t// const data = require('zlib').unzipSync(cdata);\n\t\t\t\t// console.log(data);\n\t\t\t\t// throw new Error('Zip compression not supported for palettes');\n\t\t\t\tthrow new Error('Unsupported palette compression mode');\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid palette compression mode');\n\t\t\t}\n\n\t\t\tch++;\n\t\t}\n\t}\n\n\t// TODO: use canvas instead of data ?\n\n\treturn { id, name, x, y, bounds: { x: left, y: top, w: width, h: height }, data };\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","import { Psd, Layer, LayerAdditionalInfo, ColorMode, SectionDividerType, WriteOptions, Color, GlobalLayerMaskInfo } from './psd';\nimport {\n\thasAlpha, createCanvas, writeDataRLE, PixelData, LayerChannelData, ChannelData,\n\toffsetForChannel, createImageData, fromBlendMode, ChannelID, Compression, clamp,\n\tLayerMaskFlags, MaskParams, ColorSpace, Bounds, largeAdditionalInfoKeys, RAW_IMAGE_DATA\n} from './helpers';\nimport { ExtendedWriteOptions, hasMultiEffects, infoHandlers } from './additionalInfo';\nimport { resourceHandlers } from './imageResources';\n\nexport interface PsdWriter {\n\toffset: number;\n\tbuffer: ArrayBuffer;\n\tview: DataView;\n}\n\nexport function createWriter(size = 4096): PsdWriter {\n\tconst buffer = new ArrayBuffer(size);\n\tconst view = new DataView(buffer);\n\tconst offset = 0;\n\treturn { buffer, view, offset };\n}\n\nexport function getWriterBuffer(writer: PsdWriter) {\n\treturn writer.buffer.slice(0, writer.offset);\n}\n\nexport function getWriterBufferNoCopy(writer: PsdWriter) {\n\treturn new Uint8Array(writer.buffer, 0, writer.offset);\n}\n\nexport function writeUint8(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 1);\n\twriter.view.setUint8(offset, value);\n}\n\nexport function writeInt16(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 2);\n\twriter.view.setInt16(offset, value, false);\n}\n\nexport function writeUint16(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 2);\n\twriter.view.setUint16(offset, value, false);\n}\n\nexport function writeInt32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setInt32(offset, value, false);\n}\n\nexport function writeUint32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setUint32(offset, value, false);\n}\n\nexport function writeFloat32(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 4);\n\twriter.view.setFloat32(offset, value, false);\n}\n\nexport function writeFloat64(writer: PsdWriter, value: number) {\n\tconst offset = addSize(writer, 8);\n\twriter.view.setFloat64(offset, value, false);\n}\n\n// 32-bit fixed-point number 16.16\nexport function writeFixedPoint32(writer: PsdWriter, value: number) {\n\twriteInt32(writer, value * (1 << 16));\n}\n\n// 32-bit fixed-point number 8.24\nexport function writeFixedPointPath32(writer: PsdWriter, value: number) {\n\twriteInt32(writer, value * (1 << 24));\n}\n\nexport function writeBytes(writer: PsdWriter, buffer: Uint8Array | undefined) {\n\tif (buffer) {\n\t\tensureSize(writer, writer.offset + buffer.length);\n\t\tconst bytes = new Uint8Array(writer.buffer);\n\t\tbytes.set(buffer, writer.offset);\n\t\twriter.offset += buffer.length;\n\t}\n}\n\nexport function writeZeros(writer: PsdWriter, count: number) {\n\tfor (let i = 0; i < count; i++) {\n\t\twriteUint8(writer, 0);\n\t}\n}\n\nexport function writeSignature(writer: PsdWriter, signature: string) {\n\tif (signature.length !== 4) throw new Error(`Invalid signature: '${signature}'`);\n\n\tfor (let i = 0; i < 4; i++) {\n\t\twriteUint8(writer, signature.charCodeAt(i));\n\t}\n}\n\nexport function writePascalString(writer: PsdWriter, text: string, padTo: number) {\n\tlet length = text.length;\n\twriteUint8(writer, length);\n\n\tfor (let i = 0; i < length; i++) {\n\t\tconst code = text.charCodeAt(i);\n\t\twriteUint8(writer, code < 128 ? code : '?'.charCodeAt(0));\n\t}\n\n\twhile (++length % padTo) {\n\t\twriteUint8(writer, 0);\n\t}\n}\n\nexport function writeUnicodeString(writer: PsdWriter, text: string) {\n\twriteUint32(writer, text.length);\n\n\tfor (let i = 0; i < text.length; i++) {\n\t\twriteUint16(writer, text.charCodeAt(i));\n\t}\n}\n\nexport function writeUnicodeStringWithPadding(writer: PsdWriter, text: string) {\n\twriteUint32(writer, text.length + 1);\n\n\tfor (let i = 0; i < text.length; i++) {\n\t\twriteUint16(writer, text.charCodeAt(i));\n\t}\n\n\twriteUint16(writer, 0);\n}\n\nfunction getLargestLayerSize(layers: Layer[] = []): number {\n\tlet max = 0;\n\n\tfor (const layer of layers) {\n\t\tif (layer.canvas || layer.imageData) {\n\t\t\tconst { width, height } = getLayerDimentions(layer);\n\t\t\tmax = Math.max(max, 2 * height + 2 * width * height);\n\t\t}\n\n\t\tif (layer.children) {\n\t\t\tmax = Math.max(max, getLargestLayerSize(layer.children));\n\t\t}\n\t}\n\n\treturn max;\n}\n\nexport function writeSection(writer: PsdWriter, round: number, func: () => void, writeTotalLength = false, large = false) {\n\tif (large) writeUint32(writer, 0);\n\n\tconst offset = writer.offset;\n\twriteUint32(writer, 0);\n\n\tfunc();\n\n\tlet length = writer.offset - offset - 4;\n\tlet len = length;\n\n\twhile ((len % round) !== 0) {\n\t\twriteUint8(writer, 0);\n\t\tlen++;\n\t}\n\n\tif (writeTotalLength) {\n\t\tlength = len;\n\t}\n\n\twriter.view.setUint32(offset, length, false);\n}\n\nexport function writePsd(writer: PsdWriter, psd: Psd, options: WriteOptions = {}) {\n\tif (!(+psd.width > 0 && +psd.height > 0))\n\t\tthrow new Error('Invalid document size');\n\n\tif ((psd.width > 30000 || psd.height > 30000) && !options.psb)\n\t\tthrow new Error('Document size is too large (max is 30000x30000, use PSB format instead)');\n\n\tlet imageResources = psd.imageResources || {};\n\n\tconst opt: ExtendedWriteOptions = { ...options, layerIds: [] };\n\n\tif (opt.generateThumbnail) {\n\t\timageResources = { ...imageResources, thumbnail: createThumbnail(psd) };\n\t}\n\n\tlet imageData = psd.imageData;\n\n\tif (!imageData && psd.canvas) {\n\t\timageData = psd.canvas.getContext('2d')!.getImageData(0, 0, psd.canvas.width, psd.canvas.height);\n\t}\n\n\tif (imageData && (psd.width !== imageData.width || psd.height !== imageData.height))\n\t\tthrow new Error('Document canvas must have the same size as document');\n\n\tconst globalAlpha = !!imageData && hasAlpha(imageData);\n\tconst maxBufferSize = Math.max(getLargestLayerSize(psd.children), 4 * 2 * psd.width * psd.height + 2 * psd.height);\n\tconst tempBuffer = new Uint8Array(maxBufferSize);\n\n\t// header\n\twriteSignature(writer, '8BPS');\n\twriteUint16(writer, options.psb ? 2 : 1); // version\n\twriteZeros(writer, 6);\n\twriteUint16(writer, globalAlpha ? 4 : 3); // channels\n\twriteUint32(writer, psd.height);\n\twriteUint32(writer, psd.width);\n\twriteUint16(writer, 8); // bits per channel\n\twriteUint16(writer, ColorMode.RGB);\n\n\t// color mode data\n\twriteSection(writer, 1, () => {\n\t\t// TODO: implement\n\t});\n\n\t// image resources\n\twriteSection(writer, 1, () => {\n\t\tfor (const handler of resourceHandlers) {\n\t\t\tif (handler.has(imageResources)) {\n\t\t\t\twriteSignature(writer, '8BIM');\n\t\t\t\twriteUint16(writer, handler.key);\n\t\t\t\twritePascalString(writer, '', 2);\n\t\t\t\twriteSection(writer, 2, () => handler.write(writer, imageResources));\n\t\t\t}\n\t\t}\n\t});\n\n\t// layer and mask info\n\twriteSection(writer, 2, () => {\n\t\twriteLayerInfo(tempBuffer, writer, psd, globalAlpha, opt);\n\t\twriteGlobalLayerMaskInfo(writer, psd.globalLayerMaskInfo);\n\t\twriteAdditionalLayerInfo(writer, psd, psd, opt);\n\t}, undefined, !!opt.psb);\n\n\t// image data\n\tconst channels = globalAlpha ? [0, 1, 2, 3] : [0, 1, 2];\n\tconst data: PixelData = imageData || {\n\t\tdata: new Uint8Array(4 * psd.width * psd.height),\n\t\twidth: psd.width,\n\t\theight: psd.height,\n\t};\n\n\twriteUint16(writer, Compression.RleCompressed);\n\n\tif (RAW_IMAGE_DATA && (psd as any).imageDataRaw) {\n\t\tconsole.log('writing raw image data');\n\t\twriteBytes(writer, (psd as any).imageDataRaw);\n\t} else {\n\t\twriteBytes(writer, writeDataRLE(tempBuffer, data, psd.width, psd.height, channels, !!options.psb));\n\t}\n}\n\nfunction writeLayerInfo(tempBuffer: Uint8Array, writer: PsdWriter, psd: Psd, globalAlpha: boolean, options: ExtendedWriteOptions) {\n\twriteSection(writer, 4, () => {\n\t\tconst layers: Layer[] = [];\n\n\t\taddChildren(layers, psd.children);\n\n\t\tif (!layers.length) layers.push({});\n\n\t\twriteInt16(writer, globalAlpha ? -layers.length : layers.length);\n\n\t\tconst layersData = layers.map((l, i) => getChannels(tempBuffer, l, i === 0, options));\n\n\t\t// layer records\n\t\tfor (const layerData of layersData) {\n\t\t\tconst { layer, top, left, bottom, right, channels } = layerData;\n\n\t\t\twriteInt32(writer, top);\n\t\t\twriteInt32(writer, left);\n\t\t\twriteInt32(writer, bottom);\n\t\t\twriteInt32(writer, right);\n\t\t\twriteUint16(writer, channels.length);\n\n\t\t\tfor (const c of channels) {\n\t\t\t\twriteInt16(writer, c.channelId);\n\t\t\t\tif (options.psb) writeUint32(writer, 0);\n\t\t\t\twriteUint32(writer, c.length);\n\t\t\t}\n\n\t\t\twriteSignature(writer, '8BIM');\n\t\t\twriteSignature(writer, fromBlendMode[layer.blendMode!] || 'norm');\n\t\t\twriteUint8(writer, Math.round(clamp(layer.opacity ?? 1, 0, 1) * 255));\n\t\t\twriteUint8(writer, layer.clipping ? 1 : 0);\n\n\t\t\tlet flags = 0x08; // 1 for Photoshop 5.0 and later, tells if bit 4 has useful information\n\t\t\tif (layer.transparencyProtected) flags |= 0x01;\n\t\t\tif (layer.hidden) flags |= 0x02;\n\t\t\tif (layer.vectorMask || (layer.sectionDivider && layer.sectionDivider.type !== SectionDividerType.Other)) {\n\t\t\t\tflags |= 0x10; // pixel data irrelevant to appearance of document\n\t\t\t}\n\t\t\tif (layer.effects && hasMultiEffects(layer.effects)) {\n\t\t\t\tflags |= 0x20; // just guessing this one, might be completely incorrect\n\t\t\t}\n\n\t\t\twriteUint8(writer, flags);\n\t\t\twriteUint8(writer, 0); // filler\n\t\t\twriteSection(writer, 1, () => {\n\t\t\t\twriteLayerMaskData(writer, layer, layerData);\n\t\t\t\twriteLayerBlendingRanges(writer, psd);\n\t\t\t\twritePascalString(writer, layer.name || '', 4);\n\t\t\t\twriteAdditionalLayerInfo(writer, layer, psd, options);\n\t\t\t});\n\t\t}\n\n\t\t// layer channel image data\n\t\tfor (const layerData of layersData) {\n\t\t\tfor (const channel of layerData.channels) {\n\t\t\t\twriteUint16(writer, channel.compression);\n\n\t\t\t\tif (channel.buffer) {\n\t\t\t\t\twriteBytes(writer, channel.buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, true, options.psb);\n}\n\nfunction writeLayerMaskData(writer: PsdWriter, { mask }: Layer, layerData: LayerChannelData) {\n\twriteSection(writer, 1, () => {\n\t\tif (!mask) return;\n\n\t\tconst m = layerData.mask || {} as Partial<Bounds>;\n\t\twriteInt32(writer, m.top!);\n\t\twriteInt32(writer, m.left!);\n\t\twriteInt32(writer, m.bottom!);\n\t\twriteInt32(writer, m.right!);\n\t\twriteUint8(writer, mask.defaultColor!);\n\n\t\tlet params = 0;\n\t\tif (mask.userMaskDensity !== undefined) params |= MaskParams.UserMaskDensity;\n\t\tif (mask.userMaskFeather !== undefined) params |= MaskParams.UserMaskFeather;\n\t\tif (mask.vectorMaskDensity !== undefined) params |= MaskParams.VectorMaskDensity;\n\t\tif (mask.vectorMaskFeather !== undefined) params |= MaskParams.VectorMaskFeather;\n\n\t\tlet flags = 0;\n\t\tif (mask.disabled) flags |= LayerMaskFlags.LayerMaskDisabled;\n\t\tif (mask.positionRelativeToLayer) flags |= LayerMaskFlags.PositionRelativeToLayer;\n\t\tif (mask.fromVectorData) flags |= LayerMaskFlags.LayerMaskFromRenderingOtherData;\n\t\tif (params) flags |= LayerMaskFlags.MaskHasParametersAppliedToIt;\n\n\t\twriteUint8(writer, flags);\n\n\t\tif (params) {\n\t\t\twriteUint8(writer, params);\n\n\t\t\tif (mask.userMaskDensity !== undefined) writeUint8(writer, Math.round(mask.userMaskDensity * 0xff));\n\t\t\tif (mask.userMaskFeather !== undefined) writeFloat64(writer, mask.userMaskFeather);\n\t\t\tif (mask.vectorMaskDensity !== undefined) writeUint8(writer, Math.round(mask.vectorMaskDensity * 0xff));\n\t\t\tif (mask.vectorMaskFeather !== undefined) writeFloat64(writer, mask.vectorMaskFeather);\n\t\t}\n\n\t\t// TODO: handle rest of the fields\n\n\t\twriteZeros(writer, 2);\n\t});\n}\n\nfunction writeLayerBlendingRanges(writer: PsdWriter, psd: Psd) {\n\twriteSection(writer, 1, () => {\n\t\twriteUint32(writer, 65535);\n\t\twriteUint32(writer, 65535);\n\n\t\tlet channels = psd.channels || 0; // TODO: use always 4 instead ?\n\t\t// channels = 4; // TESTING\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\twriteUint32(writer, 65535);\n\t\t\twriteUint32(writer, 65535);\n\t\t}\n\t});\n}\n\nfunction writeGlobalLayerMaskInfo(writer: PsdWriter, info: GlobalLayerMaskInfo | undefined) {\n\twriteSection(writer, 1, () => {\n\t\tif (info) {\n\t\t\twriteUint16(writer, info.overlayColorSpace);\n\t\t\twriteUint16(writer, info.colorSpace1);\n\t\t\twriteUint16(writer, info.colorSpace2);\n\t\t\twriteUint16(writer, info.colorSpace3);\n\t\t\twriteUint16(writer, info.colorSpace4);\n\t\t\twriteUint16(writer, info.opacity * 0xff);\n\t\t\twriteUint8(writer, info.kind);\n\t\t\twriteZeros(writer, 3);\n\t\t}\n\t});\n}\n\nfunction writeAdditionalLayerInfo(writer: PsdWriter, target: LayerAdditionalInfo, psd: Psd, options: ExtendedWriteOptions) {\n\tfor (const handler of infoHandlers) {\n\t\tlet key = handler.key;\n\n\t\tif (key === 'Txt2' && options.invalidateTextLayers) continue;\n\t\tif (key === 'vmsk' && options.psb) key = 'vsms';\n\n\t\tif (handler.has(target)) {\n\t\t\tconst large = options.psb && largeAdditionalInfoKeys.indexOf(key) !== -1;\n\n\t\t\twriteSignature(writer, large ? '8B64' : '8BIM');\n\t\t\twriteSignature(writer, key);\n\n\t\t\tconst fourBytes = key === 'Txt2' || key === 'luni' || key === 'vmsk' || key === 'artb' || key === 'artd' ||\n\t\t\t\tkey === 'vogk' || key === 'SoLd' || key === 'lnk2' || key === 'vscg' || key === 'vsms' || key === 'GdFl' ||\n\t\t\t\tkey === 'lmfx' || key === 'lrFX' || key === 'cinf' || key === 'PlLd' || key === 'Anno';\n\n\t\t\twriteSection(writer, fourBytes ? 4 : 2, () => {\n\t\t\t\thandler.write(writer, target, psd, options);\n\t\t\t}, key !== 'Txt2' && key !== 'cinf' && key !== 'extn', large);\n\t\t}\n\t}\n}\n\nfunction addChildren(layers: Layer[], children: Layer[] | undefined) {\n\tif (!children) return;\n\n\tfor (const c of children) {\n\t\tif (c.children && c.canvas) throw new Error(`Invalid layer, cannot have both 'canvas' and 'children' properties`);\n\t\tif (c.children && c.imageData) throw new Error(`Invalid layer, cannot have both 'imageData' and 'children' properties`);\n\n\t\tif (c.children) {\n\t\t\tlayers.push({\n\t\t\t\tname: '</Layer group>',\n\t\t\t\tsectionDivider: {\n\t\t\t\t\ttype: SectionDividerType.BoundingSectionDivider,\n\t\t\t\t},\n\t\t\t\t// TESTING\n\t\t\t\t// nameSource: 'lset',\n\t\t\t\t// id: [4, 0, 0, 8, 11, 0, 0, 0, 0, 14][layers.length] || 0,\n\t\t\t\t// layerColor: 'none',\n\t\t\t\t// timestamp: [1611346817.349021, 0, 0, 1611346817.349175, 1611346817.3491833, 0, 0, 0, 0, 1611346817.349832][layers.length] || 0,\n\t\t\t\t// protected: {},\n\t\t\t\t// referencePoint: { x: 0, y: 0 },\n\t\t\t});\n\t\t\taddChildren(layers, c.children);\n\t\t\tlayers.push({\n\t\t\t\tsectionDivider: {\n\t\t\t\t\ttype: c.opened === false ? SectionDividerType.ClosedFolder : SectionDividerType.OpenFolder,\n\t\t\t\t\tkey: fromBlendMode[c.blendMode!] || 'pass',\n\t\t\t\t\tsubType: 0,\n\t\t\t\t},\n\t\t\t\t...c,\n\t\t\t});\n\t\t} else {\n\t\t\tlayers.push({ ...c });\n\t\t}\n\t}\n}\n\nfunction resizeBuffer(writer: PsdWriter, size: number) {\n\tlet newLength = writer.buffer.byteLength;\n\n\tdo {\n\t\tnewLength *= 2;\n\t} while (size > newLength);\n\n\tconst newBuffer = new ArrayBuffer(newLength);\n\tconst newBytes = new Uint8Array(newBuffer);\n\tconst oldBytes = new Uint8Array(writer.buffer);\n\tnewBytes.set(oldBytes);\n\twriter.buffer = newBuffer;\n\twriter.view = new DataView(writer.buffer);\n}\n\nfunction ensureSize(writer: PsdWriter, size: number) {\n\tif (size > writer.buffer.byteLength) {\n\t\tresizeBuffer(writer, size);\n\t}\n}\n\nfunction addSize(writer: PsdWriter, size: number) {\n\tconst offset = writer.offset;\n\tensureSize(writer, writer.offset += size);\n\treturn offset;\n}\n\nfunction createThumbnail(psd: Psd) {\n\tconst canvas = createCanvas(10, 10);\n\tlet scale = 1;\n\n\tif (psd.width > psd.height) {\n\t\tcanvas.width = 160;\n\t\tcanvas.height = Math.floor(psd.height * (canvas.width / psd.width));\n\t\tscale = canvas.width / psd.width;\n\t} else {\n\t\tcanvas.height = 160;\n\t\tcanvas.width = Math.floor(psd.width * (canvas.height / psd.height));\n\t\tscale = canvas.height / psd.height;\n\t}\n\n\tconst context = canvas.getContext('2d')!;\n\tcontext.scale(scale, scale);\n\n\tif (psd.imageData) {\n\t\tconst temp = createCanvas(psd.imageData.width, psd.imageData.height);\n\t\ttemp.getContext('2d')!.putImageData(psd.imageData, 0, 0);\n\t\tcontext.drawImage(temp, 0, 0);\n\t} else if (psd.canvas) {\n\t\tcontext.drawImage(psd.canvas, 0, 0);\n\t}\n\n\treturn canvas;\n}\n\nfunction getChannels(\n\ttempBuffer: Uint8Array, layer: Layer, background: boolean, options: WriteOptions\n): LayerChannelData {\n\tconst layerData = getLayerChannels(tempBuffer, layer, background, options);\n\tconst mask = layer.mask;\n\n\tif (mask) {\n\t\tlet { top = 0, left = 0, right = 0, bottom = 0 } = mask;\n\t\tlet { width, height } = getLayerDimentions(mask);\n\t\tlet imageData = mask.imageData;\n\n\t\tif (!imageData && mask.canvas && width && height) {\n\t\t\timageData = mask.canvas.getContext('2d')!.getImageData(0, 0, width, height);\n\t\t}\n\n\t\tif (width && height && imageData) {\n\t\t\tright = left + width;\n\t\t\tbottom = top + height;\n\n\t\t\tlet buffer = writeDataRLE(tempBuffer, imageData, width, height, [0], !!options.psb)!;\n\n\t\t\tif (RAW_IMAGE_DATA && (layer as any).maskDataRaw) {\n\t\t\t\t// console.log('written raw layer image data');\n\t\t\t\tbuffer = (layer as any).maskDataRaw;\n\t\t\t}\n\n\t\t\tlayerData.mask = { top, left, right, bottom };\n\t\t\tlayerData.channels.push({\n\t\t\t\tchannelId: ChannelID.UserMask,\n\t\t\t\tcompression: Compression.RleCompressed,\n\t\t\t\tbuffer: buffer,\n\t\t\t\tlength: 2 + buffer.length,\n\t\t\t});\n\t\t} else {\n\t\t\tlayerData.mask = { top: 0, left: 0, right: 0, bottom: 0 };\n\t\t\tlayerData.channels.push({\n\t\t\t\tchannelId: ChannelID.UserMask,\n\t\t\t\tcompression: Compression.RawData,\n\t\t\t\tbuffer: new Uint8Array(0),\n\t\t\t\tlength: 0,\n\t\t\t});\n\t\t}\n\t}\n\n\treturn layerData;\n}\n\nfunction getLayerDimentions({ canvas, imageData }: Layer): { width: number; height: number; } {\n\treturn imageData || canvas || { width: 0, height: 0 };\n}\n\nfunction cropImageData(data: ImageData, left: number, top: number, width: number, height: number) {\n\tconst croppedData = createImageData(width, height);\n\tconst srcData = data.data;\n\tconst dstData = croppedData.data;\n\n\tfor (let y = 0; y < height; y++) {\n\t\tfor (let x = 0; x < width; x++) {\n\t\t\tlet src = ((x + left) + (y + top) * width) * 4;\n\t\t\tlet dst = (x + y * width) * 4;\n\t\t\tdstData[dst] = srcData[src];\n\t\t\tdstData[dst + 1] = srcData[src + 1];\n\t\t\tdstData[dst + 2] = srcData[src + 2];\n\t\t\tdstData[dst + 3] = srcData[src + 3];\n\t\t}\n\t}\n\n\treturn croppedData;\n}\n\nfunction getLayerChannels(\n\ttempBuffer: Uint8Array, layer: Layer, background: boolean, options: WriteOptions\n): LayerChannelData {\n\tlet { top = 0, left = 0, right = 0, bottom = 0 } = layer;\n\tlet channels: ChannelData[] = [\n\t\t{ channelId: ChannelID.Transparency, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Red, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Green, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t\t{ channelId: ChannelID.Blue, compression: Compression.RawData, buffer: undefined, length: 2 },\n\t];\n\n\tlet { width, height } = getLayerDimentions(layer);\n\n\tif (!(layer.canvas || layer.imageData) || !width || !height) {\n\t\tright = left;\n\t\tbottom = top;\n\t\treturn { layer, top, left, right, bottom, channels };\n\t}\n\n\tright = left + width;\n\tbottom = top + height;\n\n\tlet data = layer.imageData || layer.canvas!.getContext('2d')!.getImageData(0, 0, width, height);\n\n\tif (options.trimImageData) {\n\t\tconst trimmed = trimData(data);\n\n\t\tif (trimmed.left !== 0 || trimmed.top !== 0 || trimmed.right !== data.width || trimmed.bottom !== data.height) {\n\t\t\tleft += trimmed.left;\n\t\t\ttop += trimmed.top;\n\t\t\tright -= (data.width - trimmed.right);\n\t\t\tbottom -= (data.height - trimmed.bottom);\n\t\t\twidth = right - left;\n\t\t\theight = bottom - top;\n\n\t\t\tif (!width || !height) {\n\t\t\t\treturn { layer, top, left, right, bottom, channels };\n\t\t\t}\n\n\t\t\tif (layer.imageData) {\n\t\t\t\tdata = cropImageData(data, trimmed.left, trimmed.top, width, height);\n\t\t\t} else {\n\t\t\t\tdata = layer.canvas!.getContext('2d')!.getImageData(trimmed.left, trimmed.top, width, height);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst channelIds = [\n\t\tChannelID.Red,\n\t\tChannelID.Green,\n\t\tChannelID.Blue,\n\t];\n\n\tif (!background || options.noBackground || layer.mask || hasAlpha(data) || (RAW_IMAGE_DATA && (layer as any).imageDataRaw?.['-1'])) {\n\t\tchannelIds.unshift(ChannelID.Transparency);\n\t}\n\n\tchannels = channelIds.map(channel => {\n\t\tconst offset = offsetForChannel(channel);\n\t\tlet buffer = writeDataRLE(tempBuffer, data, width, height, [offset], !!options.psb)!;\n\n\t\tif (RAW_IMAGE_DATA && (layer as any).imageDataRaw) {\n\t\t\t// console.log('written raw layer image data');\n\t\t\tbuffer = (layer as any).imageDataRaw[channel];\n\t\t}\n\n\t\treturn {\n\t\t\tchannelId: channel,\n\t\t\tcompression: Compression.RleCompressed,\n\t\t\tbuffer: buffer,\n\t\t\tlength: 2 + buffer.length,\n\t\t};\n\t});\n\n\treturn { layer, top, left, right, bottom, channels };\n}\n\nfunction isRowEmpty({ data, width }: PixelData, y: number, left: number, right: number) {\n\tconst start = ((y * width + left) * 4 + 3) | 0;\n\tconst end = (start + (right - left) * 4) | 0;\n\n\tfor (let i = start; i < end; i = (i + 4) | 0) {\n\t\tif (data[i] !== 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction isColEmpty({ data, width }: PixelData, x: number, top: number, bottom: number) {\n\tconst stride = (width * 4) | 0;\n\tconst start = (top * stride + x * 4 + 3) | 0;\n\n\tfor (let y = top, i = start; y < bottom; y++, i = (i + stride) | 0) {\n\t\tif (data[i] !== 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction trimData(data: PixelData) {\n\tlet top = 0;\n\tlet left = 0;\n\tlet right = data.width;\n\tlet bottom = data.height;\n\n\twhile (top < bottom && isRowEmpty(data, top, left, right))\n\t\ttop++;\n\twhile (bottom > top && isRowEmpty(data, bottom - 1, left, right))\n\t\tbottom--;\n\twhile (left < right && isColEmpty(data, left, top, bottom))\n\t\tleft++;\n\twhile (right > left && isColEmpty(data, right - 1, top, bottom))\n\t\tright--;\n\n\treturn { top, left, right, bottom };\n}\n\nexport function writeColor(writer: PsdWriter, color: Color | undefined) {\n\tif (!color) {\n\t\twriteUint16(writer, ColorSpace.RGB);\n\t\twriteZeros(writer, 8);\n\t} else if ('r' in color) {\n\t\twriteUint16(writer, ColorSpace.RGB);\n\t\twriteUint16(writer, Math.round(color.r * 257));\n\t\twriteUint16(writer, Math.round(color.g * 257));\n\t\twriteUint16(writer, Math.round(color.b * 257));\n\t\twriteUint16(writer, 0);\n\t} else if ('l' in color) {\n\t\twriteUint16(writer, ColorSpace.Lab);\n\t\twriteInt16(writer, Math.round(color.l * 10000));\n\t\twriteInt16(writer, Math.round(color.a < 0 ? (color.a * 12800) : (color.a * 12700)));\n\t\twriteInt16(writer, Math.round(color.b < 0 ? (color.b * 12800) : (color.b * 12700)));\n\t\twriteUint16(writer, 0);\n\t} else if ('h' in color) {\n\t\twriteUint16(writer, ColorSpace.HSB);\n\t\twriteUint16(writer, Math.round(color.h * 0xffff));\n\t\twriteUint16(writer, Math.round(color.s * 0xffff));\n\t\twriteUint16(writer, Math.round(color.b * 0xffff));\n\t\twriteUint16(writer, 0);\n\t} else if ('c' in color) {\n\t\twriteUint16(writer, ColorSpace.CMYK);\n\t\twriteUint16(writer, Math.round(color.c * 257));\n\t\twriteUint16(writer, Math.round(color.m * 257));\n\t\twriteUint16(writer, Math.round(color.y * 257));\n\t\twriteUint16(writer, Math.round(color.k * 257));\n\t} else {\n\t\twriteUint16(writer, ColorSpace.Grayscale);\n\t\twriteUint16(writer, Math.round(color.k * 10000 / 255));\n\t\twriteZeros(writer, 6);\n\t}\n}\n","import { fromByteArray, toByteArray } from 'base64-js';\nimport { readEffects, writeEffects } from './effectsHelpers';\nimport { clamp, createEnum, layerColors, MOCK_HANDLERS } from './helpers';\nimport {\n\tLayerAdditionalInfo, LayerEffectShadow, LayerEffectsOuterGlow, LayerEffectInnerGlow, LayerEffectBevel,\n\tLayerEffectSolidFill, LayerEffectPatternOverlay, LayerEffectGradientOverlay, LayerEffectSatin, EffectContour,\n\tEffectNoiseGradient, BezierPath, Psd, VectorContent, LayerEffectStroke, ExtraGradientInfo, EffectPattern,\n\tExtraPatternInfo, ReadOptions, BrightnessAdjustment, ExposureAdjustment, VibranceAdjustment,\n\tColorBalanceAdjustment, BlackAndWhiteAdjustment, PhotoFilterAdjustment, ChannelMixerChannel,\n\tChannelMixerAdjustment, PosterizeAdjustment, ThresholdAdjustment, GradientMapAdjustment, CMYK,\n\tSelectiveColorAdjustment, ColorLookupAdjustment, LevelsAdjustmentChannel, LevelsAdjustment,\n\tCurvesAdjustment, CurvesAdjustmentChannel, HueSaturationAdjustment, HueSaturationAdjustmentChannel,\n\tPresetInfo, Color, ColorBalanceValues, WriteOptions, LinkedFile, PlacedLayerType, Warp, EffectSolidGradient,\n\tKeyDescriptorItem, BooleanOperation, LayerEffectsInfo, Annotation, LayerVectorMask,\n} from './psd';\nimport {\n\tPsdReader, readSignature, readUnicodeString, skipBytes, readUint32, readUint8, readFloat64, readUint16,\n\treadBytes, readInt16, checkSignature, readFloat32, readFixedPointPath32, readSection, readColor, readInt32,\n\treadPascalString, readUnicodeStringWithLength, readAsciiString, readPattern,\n} from './psdReader';\nimport {\n\tPsdWriter, writeZeros, writeSignature, writeBytes, writeUint32, writeUint16, writeFloat64, writeUint8,\n\twriteInt16, writeFloat32, writeFixedPointPath32, writeUnicodeString, writeSection, writeUnicodeStringWithPadding,\n\twriteColor, writePascalString, writeInt32,\n} from './psdWriter';\nimport {\n\tAnnt, BESl, BESs, BETE, BlnM, bvlT, ClrS, DesciptorGradient, DescriptorColor, DescriptorGradientContent,\n\tDescriptorPatternContent, DescriptorUnitsValue, DescriptorVectorContent, FrFl, FStl, GrdT, IGSr, Ornt,\n\tparseAngle, parsePercent, parsePercentOrAngle, parseUnits, parseUnitsOrNumber, QuiltWarpDescriptor, readVersionAndDescriptor, StrokeDescriptor,\n\tstrokeStyleLineAlignment, strokeStyleLineCapType, strokeStyleLineJoinType, TextDescriptor, textGridding,\n\tunitsAngle, unitsPercent, unitsValue, WarpDescriptor, warpStyle, writeVersionAndDescriptor\n} from './descriptor';\nimport { serializeEngineData, parseEngineData } from './engineData';\nimport { encodeEngineData, decodeEngineData } from './text';\n\nexport interface ExtendedWriteOptions extends WriteOptions {\n\tlayerIds: number[];\n}\n\ntype HasMethod = (target: LayerAdditionalInfo) => boolean;\ntype ReadMethod = (reader: PsdReader, target: LayerAdditionalInfo, left: () => number, psd: Psd, options: ReadOptions) => void;\ntype WriteMethod = (writer: PsdWriter, target: LayerAdditionalInfo, psd: Psd, options: ExtendedWriteOptions) => void;\n\nexport interface InfoHandler {\n\tkey: string;\n\thas: HasMethod;\n\tread: ReadMethod;\n\twrite: WriteMethod;\n}\n\nexport const infoHandlers: InfoHandler[] = [];\nexport const infoHandlersMap: { [key: string]: InfoHandler } = {};\n\nfunction addHandler(key: string, has: HasMethod, read: ReadMethod, write: WriteMethod) {\n\tconst handler: InfoHandler = { key, has, read, write };\n\tinfoHandlers.push(handler);\n\tinfoHandlersMap[handler.key] = handler;\n}\n\nfunction addHandlerAlias(key: string, target: string) {\n\tinfoHandlersMap[key] = infoHandlersMap[target];\n}\n\nfunction hasKey(key: keyof LayerAdditionalInfo) {\n\treturn (target: LayerAdditionalInfo) => target[key] !== undefined;\n}\n\nfunction readLength64(reader: PsdReader) {\n\tif (readUint32(reader)) throw new Error(`Resource size above 4 GB limit at ${reader.offset.toString(16)}`);\n\treturn readUint32(reader);\n}\n\nfunction writeLength64(writer: PsdWriter, length: number) {\n\twriteUint32(writer, 0);\n\twriteUint32(writer, length);\n}\n\naddHandler(\n\t'TySh',\n\thasKey('text'),\n\t(reader, target, leftBytes) => {\n\t\tif (readInt16(reader) !== 1) throw new Error(`Invalid TySh version`);\n\n\t\tconst transform: number[] = [];\n\t\tfor (let i = 0; i < 6; i++) transform.push(readFloat64(reader));\n\n\t\tif (readInt16(reader) !== 50) throw new Error(`Invalid TySh text version`);\n\t\tconst text: TextDescriptor = readVersionAndDescriptor(reader);\n\n\t\tif (readInt16(reader) !== 1) throw new Error(`Invalid TySh warp version`);\n\t\tconst warp: WarpDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.text = {\n\t\t\ttransform,\n\t\t\tleft: readFloat32(reader),\n\t\t\ttop: readFloat32(reader),\n\t\t\tright: readFloat32(reader),\n\t\t\tbottom: readFloat32(reader),\n\t\t\ttext: text['Txt '].replace(/\\r/g, '\\n'),\n\t\t\tindex: text.TextIndex || 0,\n\t\t\tgridding: textGridding.decode(text.textGridding),\n\t\t\tantiAlias: Annt.decode(text.AntA),\n\t\t\torientation: Ornt.decode(text.Ornt),\n\t\t\twarp: {\n\t\t\t\tstyle: warpStyle.decode(warp.warpStyle),\n\t\t\t\tvalue: warp.warpValue || 0,\n\t\t\t\tperspective: warp.warpPerspective || 0,\n\t\t\t\tperspectiveOther: warp.warpPerspectiveOther || 0,\n\t\t\t\trotate: Ornt.decode(warp.warpRotate),\n\t\t\t},\n\t\t};\n\n\t\tif (text.EngineData) {\n\t\t\tconst engineData = decodeEngineData(parseEngineData(text.EngineData));\n\n\t\t\t// const before = parseEngineData(text.EngineData);\n\t\t\t// const after = encodeEngineData(engineData);\n\t\t\t// require('fs').writeFileSync('before.txt', require('util').inspect(before, false, 99, false), 'utf8');\n\t\t\t// require('fs').writeFileSync('after.txt', require('util').inspect(after, false, 99, false), 'utf8');\n\n\t\t\t// console.log(require('util').inspect(parseEngineData(text.EngineData), false, 99, true));\n\t\t\ttarget.text = { ...target.text, ...engineData };\n\t\t\t// console.log(require('util').inspect(target.text, false, 99, true));\n\t\t}\n\n\t\tskipBytes(reader, leftBytes());\n\t},\n\t(writer, target) => {\n\t\tconst text = target.text!;\n\t\tconst warp = text.warp || {};\n\t\tconst transform = text.transform || [1, 0, 0, 1, 0, 0];\n\n\t\tconst textDescriptor: TextDescriptor = {\n\t\t\t'Txt ': (text.text || '').replace(/\\r?\\n/g, '\\r'),\n\t\t\ttextGridding: textGridding.encode(text.gridding),\n\t\t\tOrnt: Ornt.encode(text.orientation),\n\t\t\tAntA: Annt.encode(text.antiAlias),\n\t\t\tTextIndex: text.index || 0,\n\t\t\tEngineData: serializeEngineData(encodeEngineData(text)),\n\t\t};\n\n\t\twriteInt16(writer, 1); // version\n\n\t\tfor (let i = 0; i < 6; i++) {\n\t\t\twriteFloat64(writer, transform[i]);\n\t\t}\n\n\t\twriteInt16(writer, 50); // text version\n\t\twriteVersionAndDescriptor(writer, '', 'TxLr', textDescriptor);\n\n\t\twriteInt16(writer, 1); // warp version\n\t\twriteVersionAndDescriptor(writer, '', 'warp', encodeWarp(warp));\n\n\t\twriteFloat32(writer, text.left!);\n\t\twriteFloat32(writer, text.top!);\n\t\twriteFloat32(writer, text.right!);\n\t\twriteFloat32(writer, text.bottom!);\n\n\t\t// writeZeros(writer, 2);\n\t},\n);\n\n// vector fills\n\naddHandler(\n\t'SoCo',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\ttarget.vectorFill.type === 'color',\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'GdFl',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\t(target.vectorFill.type === 'solid' || target.vectorFill.type === 'noise'),\n\t(reader, target, left) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'PtFl',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke === undefined &&\n\t\ttarget.vectorFill.type === 'pattern',\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(descriptor);\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor } = serializeVectorContent(target.vectorFill!);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\naddHandler(\n\t'vscg',\n\ttarget => target.vectorFill !== undefined && target.vectorStroke !== undefined,\n\t(reader, target, left) => {\n\t\treadSignature(reader); // key\n\t\tconst desc = readVersionAndDescriptor(reader);\n\t\ttarget.vectorFill = parseVectorContent(desc);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst { descriptor, key } = serializeVectorContent(target.vectorFill!);\n\t\twriteSignature(writer, key);\n\t\twriteVersionAndDescriptor(writer, '', 'null', descriptor);\n\t},\n);\n\nexport function readBezierKnot(reader: PsdReader, width: number, height: number) {\n\tconst y0 = readFixedPointPath32(reader) * height;\n\tconst x0 = readFixedPointPath32(reader) * width;\n\tconst y1 = readFixedPointPath32(reader) * height;\n\tconst x1 = readFixedPointPath32(reader) * width;\n\tconst y2 = readFixedPointPath32(reader) * height;\n\tconst x2 = readFixedPointPath32(reader) * width;\n\treturn [x0, y0, x1, y1, x2, y2];\n}\n\nfunction writeBezierKnot(writer: PsdWriter, points: number[], width: number, height: number) {\n\twriteFixedPointPath32(writer, points[1] / height); // y0\n\twriteFixedPointPath32(writer, points[0] / width); // x0\n\twriteFixedPointPath32(writer, points[3] / height); // y1\n\twriteFixedPointPath32(writer, points[2] / width); // x1\n\twriteFixedPointPath32(writer, points[5] / height); // y2\n\twriteFixedPointPath32(writer, points[4] / width); // x2\n}\n\nexport const booleanOperations: BooleanOperation[] = ['exclude', 'combine', 'subtract', 'intersect'];\n\nexport function readVectorMask(reader: PsdReader, vectorMask: LayerVectorMask, width: number, height: number, size: number) {\n\tconst end = reader.offset + size;\n\tconst paths = vectorMask.paths;\n\tlet path: BezierPath | undefined = undefined;\n\n\twhile ((end - reader.offset) >= 26) {\n\t\tconst selector = readUint16(reader);\n\n\t\tswitch (selector) {\n\t\t\tcase 0: // Closed subpath length record\n\t\t\tcase 3: { // Open subpath length record\n\t\t\t\treadUint16(reader); // count\n\t\t\t\tconst boolOp = readInt16(reader);\n\t\t\t\treadUint16(reader); // always 1 ?\n\t\t\t\tskipBytes(reader, 18);\n\t\t\t\t// TODO: 'combine' here might be wrong\n\t\t\t\tpath = { open: selector === 3, operation: boolOp === -1 ? 'combine' : booleanOperations[boolOp], knots: [] };\n\t\t\t\tpaths.push(path);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 1: // Closed subpath Bezier knot, linked\n\t\t\tcase 2: // Closed subpath Bezier knot, unlinked\n\t\t\tcase 4: // Open subpath Bezier knot, linked\n\t\t\tcase 5: // Open subpath Bezier knot, unlinked\n\t\t\t\tpath!.knots.push({ linked: (selector === 1 || selector === 4), points: readBezierKnot(reader, width, height) });\n\t\t\t\tbreak;\n\t\t\tcase 6: // Path fill rule record\n\t\t\t\tskipBytes(reader, 24);\n\t\t\t\tbreak;\n\t\t\tcase 7: { // Clipboard record\n\t\t\t\t// TODO: check if these need to be multiplied by document size\n\t\t\t\tconst top = readFixedPointPath32(reader);\n\t\t\t\tconst left = readFixedPointPath32(reader);\n\t\t\t\tconst bottom = readFixedPointPath32(reader);\n\t\t\t\tconst right = readFixedPointPath32(reader);\n\t\t\t\tconst resolution = readFixedPointPath32(reader);\n\t\t\t\tskipBytes(reader, 4);\n\t\t\t\tvectorMask.clipboard = { top, left, bottom, right, resolution };\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 8: // Initial fill rule record\n\t\t\t\tvectorMask.fillStartsWithAllPixels = !!readUint16(reader);\n\t\t\t\tskipBytes(reader, 22);\n\t\t\t\tbreak;\n\t\t\tdefault: throw new Error('Invalid vmsk section');\n\t\t}\n\t}\n\n\treturn paths;\n}\n\naddHandler(\n\t'vmsk',\n\thasKey('vectorMask'),\n\t(reader, target, left, { width, height }) => {\n\t\tif (readUint32(reader) !== 3) throw new Error('Invalid vmsk version');\n\n\t\ttarget.vectorMask = { paths: [] };\n\t\tconst vectorMask = target.vectorMask;\n\n\t\tconst flags = readUint32(reader);\n\t\tvectorMask.invert = (flags & 1) !== 0;\n\t\tvectorMask.notLink = (flags & 2) !== 0;\n\t\tvectorMask.disable = (flags & 4) !== 0;\n\n\t\treadVectorMask(reader, vectorMask, width, height, left());\n\n\t\t// drawBezierPaths(vectorMask.paths, width, height, 'out.png');\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target, { width, height }) => {\n\t\tconst vectorMask = target.vectorMask!;\n\t\tconst flags =\n\t\t\t(vectorMask.invert ? 1 : 0) |\n\t\t\t(vectorMask.notLink ? 2 : 0) |\n\t\t\t(vectorMask.disable ? 4 : 0);\n\n\t\twriteUint32(writer, 3); // version\n\t\twriteUint32(writer, flags);\n\n\t\t// initial entry\n\t\twriteUint16(writer, 6);\n\t\twriteZeros(writer, 24);\n\n\t\tconst clipboard = vectorMask.clipboard;\n\t\tif (clipboard) {\n\t\t\twriteUint16(writer, 7);\n\t\t\twriteFixedPointPath32(writer, clipboard.top);\n\t\t\twriteFixedPointPath32(writer, clipboard.left);\n\t\t\twriteFixedPointPath32(writer, clipboard.bottom);\n\t\t\twriteFixedPointPath32(writer, clipboard.right);\n\t\t\twriteFixedPointPath32(writer, clipboard.resolution);\n\t\t\twriteZeros(writer, 4);\n\t\t}\n\n\t\tif (vectorMask.fillStartsWithAllPixels !== undefined) {\n\t\t\twriteUint16(writer, 8);\n\t\t\twriteUint16(writer, vectorMask.fillStartsWithAllPixels ? 1 : 0);\n\t\t\twriteZeros(writer, 22);\n\t\t}\n\n\t\tfor (const path of vectorMask.paths) {\n\t\t\twriteUint16(writer, path.open ? 3 : 0);\n\t\t\twriteUint16(writer, path.knots.length);\n\t\t\twriteUint16(writer, Math.abs(booleanOperations.indexOf(path.operation))); // default to 1 if not found\n\t\t\twriteUint16(writer, 1);\n\t\t\twriteZeros(writer, 18); // TODO: these are sometimes non-zero\n\n\t\t\tconst linkedKnot = path.open ? 4 : 1;\n\t\t\tconst unlinkedKnot = path.open ? 5 : 2;\n\n\t\t\tfor (const { linked, points } of path.knots) {\n\t\t\t\twriteUint16(writer, linked ? linkedKnot : unlinkedKnot);\n\t\t\t\twriteBezierKnot(writer, points, width, height);\n\t\t\t}\n\t\t}\n\t},\n);\n\n// TODO: need to write vmsk if has outline ?\naddHandlerAlias('vsms', 'vmsk');\n// addHandlerAlias('vmsk', 'vsms');\n\ninterface VogkDescriptor {\n\tkeyDescriptorList: {\n\t\tkeyShapeInvalidated?: boolean;\n\t\tkeyOriginType?: number;\n\t\tkeyOriginResolution?: number;\n\t\tkeyOriginRRectRadii?: {\n\t\t\tunitValueQuadVersion: number;\n\t\t\ttopRight: DescriptorUnitsValue;\n\t\t\ttopLeft: DescriptorUnitsValue;\n\t\t\tbottomLeft: DescriptorUnitsValue;\n\t\t\tbottomRight: DescriptorUnitsValue;\n\t\t};\n\t\tkeyOriginShapeBBox?: {\n\t\t\tunitValueQuadVersion: number;\n\t\t\t'Top ': DescriptorUnitsValue;\n\t\t\tLeft: DescriptorUnitsValue;\n\t\t\tBtom: DescriptorUnitsValue;\n\t\t\tRght: DescriptorUnitsValue;\n\t\t};\n\t\tkeyOriginBoxCorners?: {\n\t\t\trectangleCornerA: { Hrzn: number; Vrtc: number; };\n\t\t\trectangleCornerB: { Hrzn: number; Vrtc: number; };\n\t\t\trectangleCornerC: { Hrzn: number; Vrtc: number; };\n\t\t\trectangleCornerD: { Hrzn: number; Vrtc: number; };\n\t\t};\n\t\tTrnf?: { xx: number; xy: number; yx: number; yy: number; tx: number; ty: number; },\n\t\tkeyOriginIndex: number;\n\t}[];\n}\n\naddHandler(\n\t'vogk',\n\thasKey('vectorOrigination'),\n\t(reader, target, left) => {\n\t\tif (readInt32(reader) !== 1) throw new Error(`Invalid vogk version`);\n\t\tconst desc = readVersionAndDescriptor(reader) as VogkDescriptor;\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\n\t\ttarget.vectorOrigination = { keyDescriptorList: [] };\n\n\t\tfor (const i of desc.keyDescriptorList) {\n\t\t\tconst item: KeyDescriptorItem = {};\n\n\t\t\tif (i.keyShapeInvalidated != null) item.keyShapeInvalidated = i.keyShapeInvalidated;\n\t\t\tif (i.keyOriginType != null) item.keyOriginType = i.keyOriginType;\n\t\t\tif (i.keyOriginResolution != null) item.keyOriginResolution = i.keyOriginResolution;\n\t\t\tif (i.keyOriginShapeBBox) {\n\t\t\t\titem.keyOriginShapeBoundingBox = {\n\t\t\t\t\ttop: parseUnits(i.keyOriginShapeBBox['Top ']),\n\t\t\t\t\tleft: parseUnits(i.keyOriginShapeBBox.Left),\n\t\t\t\t\tbottom: parseUnits(i.keyOriginShapeBBox.Btom),\n\t\t\t\t\tright: parseUnits(i.keyOriginShapeBBox.Rght),\n\t\t\t\t};\n\t\t\t}\n\t\t\tconst rectRadii = i.keyOriginRRectRadii;\n\t\t\tif (rectRadii) {\n\t\t\t\titem.keyOriginRRectRadii = {\n\t\t\t\t\ttopRight: parseUnits(rectRadii.topRight),\n\t\t\t\t\ttopLeft: parseUnits(rectRadii.topLeft),\n\t\t\t\t\tbottomLeft: parseUnits(rectRadii.bottomLeft),\n\t\t\t\t\tbottomRight: parseUnits(rectRadii.bottomRight),\n\t\t\t\t};\n\t\t\t}\n\t\t\tconst corners = i.keyOriginBoxCorners;\n\t\t\tif (corners) {\n\t\t\t\titem.keyOriginBoxCorners = [\n\t\t\t\t\t{ x: corners.rectangleCornerA.Hrzn, y: corners.rectangleCornerA.Vrtc },\n\t\t\t\t\t{ x: corners.rectangleCornerB.Hrzn, y: corners.rectangleCornerB.Vrtc },\n\t\t\t\t\t{ x: corners.rectangleCornerC.Hrzn, y: corners.rectangleCornerC.Vrtc },\n\t\t\t\t\t{ x: corners.rectangleCornerD.Hrzn, y: corners.rectangleCornerD.Vrtc },\n\t\t\t\t];\n\t\t\t}\n\t\t\tconst trnf = i.Trnf;\n\t\t\tif (trnf) {\n\t\t\t\titem.transform = [trnf.xx, trnf.xy, trnf.xy, trnf.yy, trnf.tx, trnf.ty];\n\t\t\t}\n\n\t\t\ttarget.vectorOrigination.keyDescriptorList.push(item);\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\ttarget;\n\t\tconst orig = target.vectorOrigination!;\n\t\tconst desc: VogkDescriptor = { keyDescriptorList: [] };\n\n\t\tfor (let i = 0; i < orig.keyDescriptorList.length; i++) {\n\t\t\tconst item = orig.keyDescriptorList[i];\n\n\t\t\tif (item.keyShapeInvalidated) {\n\t\t\t\tdesc.keyDescriptorList.push({ keyShapeInvalidated: true, keyOriginIndex: i });\n\t\t\t} else {\n\t\t\t\tdesc.keyDescriptorList.push({\n\t\t\t\t\tkeyOriginType: item.keyOriginType ?? 4,\n\t\t\t\t\tkeyOriginResolution: item.keyOriginResolution ?? 72,\n\t\t\t\t} as any);\n\n\t\t\t\tconst out = desc.keyDescriptorList[desc.keyDescriptorList.length - 1];\n\n\t\t\t\tconst radii = item.keyOriginRRectRadii;\n\t\t\t\tif (radii) {\n\t\t\t\t\tout.keyOriginRRectRadii = {\n\t\t\t\t\t\tunitValueQuadVersion: 1,\n\t\t\t\t\t\ttopRight: unitsValue(radii.topRight, 'topRight'),\n\t\t\t\t\t\ttopLeft: unitsValue(radii.topLeft, 'topLeft'),\n\t\t\t\t\t\tbottomLeft: unitsValue(radii.bottomLeft, 'bottomLeft'),\n\t\t\t\t\t\tbottomRight: unitsValue(radii.bottomRight, 'bottomRight'),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst box = item.keyOriginShapeBoundingBox;\n\t\t\t\tif (box) {\n\t\t\t\t\tout.keyOriginShapeBBox = {\n\t\t\t\t\t\tunitValueQuadVersion: 1,\n\t\t\t\t\t\t'Top ': unitsValue(box.top, 'top'),\n\t\t\t\t\t\tLeft: unitsValue(box.left, 'left'),\n\t\t\t\t\t\tBtom: unitsValue(box.bottom, 'bottom'),\n\t\t\t\t\t\tRght: unitsValue(box.right, 'right'),\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst corners = item.keyOriginBoxCorners;\n\t\t\t\tif (corners && corners.length === 4) {\n\t\t\t\t\tout.keyOriginBoxCorners = {\n\t\t\t\t\t\trectangleCornerA: { Hrzn: corners[0].x, Vrtc: corners[0].y },\n\t\t\t\t\t\trectangleCornerB: { Hrzn: corners[1].x, Vrtc: corners[1].y },\n\t\t\t\t\t\trectangleCornerC: { Hrzn: corners[2].x, Vrtc: corners[2].y },\n\t\t\t\t\t\trectangleCornerD: { Hrzn: corners[3].x, Vrtc: corners[3].y },\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst transform = item.transform;\n\t\t\t\tif (transform && transform.length === 6) {\n\t\t\t\t\tout.Trnf = {\n\t\t\t\t\t\txx: transform[0],\n\t\t\t\t\t\txy: transform[1],\n\t\t\t\t\t\tyx: transform[2],\n\t\t\t\t\t\tyy: transform[3],\n\t\t\t\t\t\ttx: transform[4],\n\t\t\t\t\t\tty: transform[5],\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tout.keyOriginIndex = i;\n\t\t\t}\n\t\t}\n\n\t\twriteInt32(writer, 1); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t}\n);\n\naddHandler(\n\t'lmfx',\n\ttarget => target.effects !== undefined && hasMultiEffects(target.effects),\n\t(reader, target, left, _, options) => {\n\t\tconst version = readUint32(reader);\n\t\tif (version !== 0) throw new Error('Invalid lmfx version');\n\n\t\tconst desc: LmfxDescriptor = readVersionAndDescriptor(reader);\n\t\t// console.log(require('util').inspect(info, false, 99, true));\n\n\t\t// discard if read in 'lrFX' or 'lfx2' section\n\t\ttarget.effects = parseEffects(desc, !!options.logMissingFeatures);\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target, _, options) => {\n\t\tconst desc = serializeEffects(target.effects!, !!options.logMissingFeatures, true);\n\n\t\twriteUint32(writer, 0); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'lrFX',\n\thasKey('effects'),\n\t(reader, target, left) => {\n\t\tif (!target.effects) target.effects = readEffects(reader);\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteEffects(writer, target.effects!);\n\t},\n);\n\naddHandler(\n\t'luni',\n\thasKey('name'),\n\t(reader, target, left) => {\n\t\ttarget.name = readUnicodeString(reader);\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteUnicodeString(writer, target.name!);\n\t\t// writeUint16(writer, 0); // padding (but not extending string length)\n\t},\n);\n\naddHandler(\n\t'lnsr',\n\thasKey('nameSource'),\n\t(reader, target) => target.nameSource = readSignature(reader),\n\t(writer, target) => writeSignature(writer, target.nameSource!),\n);\n\naddHandler(\n\t'lyid',\n\thasKey('id'),\n\t(reader, target) => target.id = readUint32(reader),\n\t(writer, target, _psd, options) => {\n\t\tlet id = target.id!;\n\t\twhile (options.layerIds.indexOf(id) !== -1) id += 100; // make sure we don't have duplicate layer ids\n\t\twriteUint32(writer, id);\n\t\toptions.layerIds.push(id);\n\t},\n);\n\naddHandler(\n\t'lsct',\n\thasKey('sectionDivider'),\n\t(reader, target, left) => {\n\t\ttarget.sectionDivider = { type: readUint32(reader) };\n\n\t\tif (left()) {\n\t\t\tcheckSignature(reader, '8BIM');\n\t\t\ttarget.sectionDivider.key = readSignature(reader);\n\t\t}\n\n\t\tif (left()) {\n\t\t\t// 0 = normal\n\t\t\t// 1 = scene group, affects the animation timeline.\n\t\t\ttarget.sectionDivider.subType = readUint32(reader);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, target.sectionDivider!.type);\n\n\t\tif (target.sectionDivider!.key) {\n\t\t\twriteSignature(writer, '8BIM');\n\t\t\twriteSignature(writer, target.sectionDivider!.key);\n\n\t\t\tif (target.sectionDivider!.subType !== undefined) {\n\t\t\t\twriteUint32(writer, target.sectionDivider!.subType);\n\t\t\t}\n\t\t}\n\t},\n);\n\n// it seems lsdk is used when there's a layer is nested more than 6 levels, but I don't know why?\n// maybe some limitation of old version of PS?\naddHandlerAlias('lsdk', 'lsct');\n\naddHandler(\n\t'clbl',\n\thasKey('blendClippendElements'),\n\t(reader, target) => {\n\t\ttarget.blendClippendElements = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.blendClippendElements ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'infx',\n\thasKey('blendInteriorElements'),\n\t(reader, target) => {\n\t\ttarget.blendInteriorElements = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.blendInteriorElements ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'knko',\n\thasKey('knockout'),\n\t(reader, target) => {\n\t\ttarget.knockout = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.knockout ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'lspf',\n\thasKey('protected'),\n\t(reader, target) => {\n\t\tconst flags = readUint32(reader);\n\t\ttarget.protected = {\n\t\t\ttransparency: (flags & 0x01) !== 0,\n\t\t\tcomposite: (flags & 0x02) !== 0,\n\t\t\tposition: (flags & 0x04) !== 0,\n\t\t};\n\n\t\tif (flags & 0x08) target.protected.artboards = true;\n\t},\n\t(writer, target) => {\n\t\tconst flags =\n\t\t\t(target.protected!.transparency ? 0x01 : 0) |\n\t\t\t(target.protected!.composite ? 0x02 : 0) |\n\t\t\t(target.protected!.position ? 0x04 : 0) |\n\t\t\t(target.protected!.artboards ? 0x08 : 0);\n\n\t\twriteUint32(writer, flags);\n\t},\n);\n\naddHandler(\n\t'lclr',\n\thasKey('layerColor'),\n\t(reader, target) => {\n\t\tconst color = readUint16(reader);\n\t\tskipBytes(reader, 6);\n\t\ttarget.layerColor = layerColors[color];\n\t},\n\t(writer, target) => {\n\t\tconst index = layerColors.indexOf(target.layerColor!);\n\t\twriteUint16(writer, index === -1 ? 0 : index);\n\t\twriteZeros(writer, 6);\n\t},\n);\n\ninterface CustomDescriptor {\n\tlayerTime?: number;\n}\n\ninterface FrameListDescriptor {\n\tLaID: number;\n\tLaSt: {\n\t\tenab?: boolean;\n\t\tIMsk?: { Ofst: { Hrzn: number; Vrtc: number; } };\n\t\tVMsk?: { Ofst: { Hrzn: number; Vrtc: number; } };\n\t\tFXRf?: { Hrzn: number; Vrtc: number; };\n\t\tFrLs: number[];\n\t}[];\n}\n\naddHandler(\n\t'shmd',\n\thasKey('timestamp'),\n\t(reader, target, left, _, options) => {\n\t\tconst count = readUint32(reader);\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tcheckSignature(reader, '8BIM');\n\t\t\tconst key = readSignature(reader);\n\t\t\treadUint8(reader); // copy\n\t\t\tskipBytes(reader, 3);\n\n\t\t\treadSection(reader, 1, left => {\n\t\t\t\tif (key === 'cust') {\n\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as CustomDescriptor;\n\t\t\t\t\tif (desc.layerTime !== undefined) target.timestamp = desc.layerTime;\n\t\t\t\t} else if (key === 'mlst') {\n\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as FrameListDescriptor;\n\t\t\t\t\toptions.logDevFeatures && console.log('mlst', desc);\n\t\t\t\t\t// options.logDevFeatures && console.log('mlst', require('util').inspect(desc, false, 99, true));\n\t\t\t\t} else if (key === 'mdyn') {\n\t\t\t\t\t// frame flags\n\t\t\t\t\tconst unknown = readUint16(reader);\n\t\t\t\t\tconst propagate = readUint8(reader);\n\t\t\t\t\tconst flags = readUint8(reader);\n\t\t\t\t\tconst unifyLayerPosition = (flags & 1) !== 0;\n\t\t\t\t\tconst unifyLayerStyle = (flags & 2) !== 0;\n\t\t\t\t\tconst unifyLayerVisibility = (flags & 4) !== 0;\n\t\t\t\t\toptions.logDevFeatures && console.log(\n\t\t\t\t\t\t'mdyn', 'unknown:', unknown, 'propagate:', propagate,\n\t\t\t\t\t\t'flags:', flags, { unifyLayerPosition, unifyLayerStyle, unifyLayerVisibility });\n\n\t\t\t\t\t// const desc = readVersionAndDescriptor(reader) as FrameListDescriptor;\n\t\t\t\t\t// console.log('mdyn', require('util').inspect(desc, false, 99, true));\n\t\t\t\t} else {\n\t\t\t\t\toptions.logDevFeatures && console.log('Unhandled metadata', key);\n\t\t\t\t}\n\n\t\t\t\tskipBytes(reader, left());\n\t\t\t});\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst desc: CustomDescriptor = {\n\t\t\tlayerTime: target.timestamp!,\n\t\t};\n\n\t\twriteUint32(writer, 1); // count\n\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'cust');\n\t\twriteUint8(writer, 0); // copy (always false)\n\t\twriteZeros(writer, 3);\n\t\twriteSection(writer, 2, () => writeVersionAndDescriptor(writer, '', 'metadata', desc), true);\n\t},\n);\n\naddHandler(\n\t'vstk',\n\thasKey('vectorStroke'),\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as StrokeDescriptor;\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\n\t\ttarget.vectorStroke = {\n\t\t\tstrokeEnabled: desc.strokeEnabled,\n\t\t\tfillEnabled: desc.fillEnabled,\n\t\t\tlineWidth: parseUnits(desc.strokeStyleLineWidth),\n\t\t\tlineDashOffset: parseUnits(desc.strokeStyleLineDashOffset),\n\t\t\tmiterLimit: desc.strokeStyleMiterLimit,\n\t\t\tlineCapType: strokeStyleLineCapType.decode(desc.strokeStyleLineCapType),\n\t\t\tlineJoinType: strokeStyleLineJoinType.decode(desc.strokeStyleLineJoinType),\n\t\t\tlineAlignment: strokeStyleLineAlignment.decode(desc.strokeStyleLineAlignment),\n\t\t\tscaleLock: desc.strokeStyleScaleLock,\n\t\t\tstrokeAdjust: desc.strokeStyleStrokeAdjust,\n\t\t\tlineDashSet: desc.strokeStyleLineDashSet.map(parseUnits),\n\t\t\tblendMode: BlnM.decode(desc.strokeStyleBlendMode),\n\t\t\topacity: parsePercent(desc.strokeStyleOpacity),\n\t\t\tcontent: parseVectorContent(desc.strokeStyleContent),\n\t\t\tresolution: desc.strokeStyleResolution,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst stroke = target.vectorStroke!;\n\t\tconst descriptor: StrokeDescriptor = {\n\t\t\tstrokeStyleVersion: 2,\n\t\t\tstrokeEnabled: !!stroke.strokeEnabled,\n\t\t\tfillEnabled: !!stroke.fillEnabled,\n\t\t\tstrokeStyleLineWidth: stroke.lineWidth || { value: 3, units: 'Points' },\n\t\t\tstrokeStyleLineDashOffset: stroke.lineDashOffset || { value: 0, units: 'Points' },\n\t\t\tstrokeStyleMiterLimit: stroke.miterLimit ?? 100,\n\t\t\tstrokeStyleLineCapType: strokeStyleLineCapType.encode(stroke.lineCapType),\n\t\t\tstrokeStyleLineJoinType: strokeStyleLineJoinType.encode(stroke.lineJoinType),\n\t\t\tstrokeStyleLineAlignment: strokeStyleLineAlignment.encode(stroke.lineAlignment),\n\t\t\tstrokeStyleScaleLock: !!stroke.scaleLock,\n\t\t\tstrokeStyleStrokeAdjust: !!stroke.strokeAdjust,\n\t\t\tstrokeStyleLineDashSet: stroke.lineDashSet || [],\n\t\t\tstrokeStyleBlendMode: BlnM.encode(stroke.blendMode),\n\t\t\tstrokeStyleOpacity: unitsPercent(stroke.opacity ?? 1),\n\t\t\tstrokeStyleContent: serializeVectorContent(\n\t\t\t\tstroke.content || { type: 'color', color: { r: 0, g: 0, b: 0 } }).descriptor,\n\t\t\tstrokeStyleResolution: stroke.resolution ?? 72,\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'strokeStyle', descriptor);\n\t},\n);\n\ninterface ArtbDescriptor {\n\tartboardRect: { 'Top ': number; Left: number; Btom: number; Rght: number; };\n\tguideIndeces: any[];\n\tartboardPresetName: string;\n\t'Clr ': DescriptorColor;\n\tartboardBackgroundType: number;\n}\n\naddHandler(\n\t'artb', // per-layer arboard info\n\thasKey('artboard'),\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as ArtbDescriptor;\n\t\tconst rect = desc.artboardRect;\n\t\ttarget.artboard = {\n\t\t\trect: { top: rect['Top '], left: rect.Left, bottom: rect.Btom, right: rect.Rght },\n\t\t\tguideIndices: desc.guideIndeces,\n\t\t\tpresetName: desc.artboardPresetName,\n\t\t\tcolor: parseColor(desc['Clr ']),\n\t\t\tbackgroundType: desc.artboardBackgroundType,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst artboard = target.artboard!;\n\t\tconst rect = artboard.rect;\n\t\tconst desc: ArtbDescriptor = {\n\t\t\tartboardRect: { 'Top ': rect.top, Left: rect.left, Btom: rect.bottom, Rght: rect.right },\n\t\t\tguideIndeces: artboard.guideIndices || [],\n\t\t\tartboardPresetName: artboard.presetName || '',\n\t\t\t'Clr ': serializeColor(artboard.color),\n\t\t\tartboardBackgroundType: artboard.backgroundType ?? 1,\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'artboard', desc);\n\t},\n);\n\naddHandler(\n\t'sn2P',\n\thasKey('usingAlignedRendering'),\n\t(reader, target) => target.usingAlignedRendering = !!readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.usingAlignedRendering ? 1 : 0),\n);\n\nconst placedLayerTypes: PlacedLayerType[] = ['unknown', 'vector', 'raster', 'image stack'];\n\nfunction parseWarp(warp: WarpDescriptor & QuiltWarpDescriptor): Warp {\n\tconst result: Warp = {\n\t\tstyle: warpStyle.decode(warp.warpStyle),\n\t\tvalue: warp.warpValue || 0,\n\t\tperspective: warp.warpPerspective || 0,\n\t\tperspectiveOther: warp.warpPerspectiveOther || 0,\n\t\trotate: Ornt.decode(warp.warpRotate),\n\t\tbounds: warp.bounds && {\n\t\t\ttop: parseUnitsOrNumber(warp.bounds['Top ']),\n\t\t\tleft: parseUnitsOrNumber(warp.bounds.Left),\n\t\t\tbottom: parseUnitsOrNumber(warp.bounds.Btom),\n\t\t\tright: parseUnitsOrNumber(warp.bounds.Rght),\n\t\t},\n\t\tuOrder: warp.uOrder,\n\t\tvOrder: warp.vOrder,\n\t};\n\n\tif (warp.deformNumRows != null || warp.deformNumCols != null) {\n\t\tresult.deformNumRows = warp.deformNumRows;\n\t\tresult.deformNumCols = warp.deformNumCols;\n\t}\n\n\tconst envelopeWarp = warp.customEnvelopeWarp;\n\tif (envelopeWarp) {\n\t\tresult.customEnvelopeWarp = {\n\t\t\tmeshPoints: [],\n\t\t};\n\n\t\tconst xs = envelopeWarp.meshPoints.find(i => i.type === 'Hrzn')?.values || [];\n\t\tconst ys = envelopeWarp.meshPoints.find(i => i.type === 'Vrtc')?.values || [];\n\n\t\tfor (let i = 0; i < xs.length; i++) {\n\t\t\tresult.customEnvelopeWarp!.meshPoints.push({ x: xs[i], y: ys[i] });\n\t\t}\n\n\t\tif (envelopeWarp.quiltSliceX || envelopeWarp.quiltSliceY) {\n\t\t\tresult.customEnvelopeWarp.quiltSliceX = envelopeWarp.quiltSliceX?.[0]?.values || [];\n\t\t\tresult.customEnvelopeWarp.quiltSliceY = envelopeWarp.quiltSliceY?.[0]?.values || [];\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction isQuiltWarp(warp: Warp) {\n\treturn warp.deformNumCols != null || warp.deformNumRows != null ||\n\t\twarp.customEnvelopeWarp?.quiltSliceX || warp.customEnvelopeWarp?.quiltSliceY;\n}\n\nfunction encodeWarp(warp: Warp): WarpDescriptor {\n\tconst bounds = warp.bounds;\n\tconst desc: WarpDescriptor = {\n\t\twarpStyle: warpStyle.encode(warp.style),\n\t\twarpValue: warp.value || 0,\n\t\twarpPerspective: warp.perspective || 0,\n\t\twarpPerspectiveOther: warp.perspectiveOther || 0,\n\t\twarpRotate: Ornt.encode(warp.rotate),\n\t\tbounds: {\n\t\t\t'Top ': unitsValue(bounds && bounds.top || { units: 'Pixels', value: 0 }, 'bounds.top'),\n\t\t\tLeft: unitsValue(bounds && bounds.left || { units: 'Pixels', value: 0 }, 'bounds.left'),\n\t\t\tBtom: unitsValue(bounds && bounds.bottom || { units: 'Pixels', value: 0 }, 'bounds.bottom'),\n\t\t\tRght: unitsValue(bounds && bounds.right || { units: 'Pixels', value: 0 }, 'bounds.right'),\n\t\t},\n\t\tuOrder: warp.uOrder || 0,\n\t\tvOrder: warp.vOrder || 0,\n\t};\n\n\tconst isQuilt = isQuiltWarp(warp);\n\n\tif (isQuilt) {\n\t\tconst desc2 = desc as QuiltWarpDescriptor;\n\t\tdesc2.deformNumRows = warp.deformNumRows || 0;\n\t\tdesc2.deformNumCols = warp.deformNumCols || 0;\n\t}\n\n\tconst customEnvelopeWarp = warp.customEnvelopeWarp;\n\tif (customEnvelopeWarp) {\n\t\tconst meshPoints = customEnvelopeWarp.meshPoints || [];\n\n\t\tif (isQuilt) {\n\t\t\tconst desc2 = desc as QuiltWarpDescriptor;\n\t\t\tdesc2.customEnvelopeWarp = {\n\t\t\t\tquiltSliceX: [{\n\t\t\t\t\ttype: 'quiltSliceX',\n\t\t\t\t\tvalues: customEnvelopeWarp.quiltSliceX || [],\n\t\t\t\t}],\n\t\t\t\tquiltSliceY: [{\n\t\t\t\t\ttype: 'quiltSliceY',\n\t\t\t\t\tvalues: customEnvelopeWarp.quiltSliceY || [],\n\t\t\t\t}],\n\t\t\t\tmeshPoints: [\n\t\t\t\t\t{ type: 'Hrzn', values: meshPoints.map(p => p.x) },\n\t\t\t\t\t{ type: 'Vrtc', values: meshPoints.map(p => p.y) },\n\t\t\t\t],\n\t\t\t};\n\t\t} else {\n\t\t\tdesc.customEnvelopeWarp = {\n\t\t\t\tmeshPoints: [\n\t\t\t\t\t{ type: 'Hrzn', values: meshPoints.map(p => p.x) },\n\t\t\t\t\t{ type: 'Vrtc', values: meshPoints.map(p => p.y) },\n\t\t\t\t],\n\t\t\t};\n\t\t}\n\t}\n\n\treturn desc;\n}\n\naddHandler(\n\t'PlLd',\n\thasKey('placedLayer'),\n\t(reader, target, left) => {\n\t\tif (readSignature(reader) !== 'plcL') throw new Error(`Invalid PlLd signature`);\n\t\tif (readInt32(reader) !== 3) throw new Error(`Invalid PlLd version`);\n\t\tconst id = readPascalString(reader, 1);\n\t\treadInt32(reader); // pageNumber\n\t\treadInt32(reader); // totalPages, TODO: check how this works ?\n\t\treadInt32(reader); // anitAliasPolicy 16\n\t\tconst placedLayerType = readInt32(reader); // 0 = unknown, 1 = vector, 2 = raster, 3 = image stack\n\t\tif (!placedLayerTypes[placedLayerType]) throw new Error('Invalid PlLd type');\n\t\tconst transform: number[] = [];\n\t\tfor (let i = 0; i < 8; i++) transform.push(readFloat64(reader)); // x, y of 4 corners of the transform\n\t\tconst warpVersion = readInt32(reader);\n\t\tif (warpVersion !== 0) throw new Error(`Invalid Warp version ${warpVersion}`);\n\t\tconst warp: WarpDescriptor & QuiltWarpDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.placedLayer = target.placedLayer || { // skip if SoLd already set it\n\t\t\tid,\n\t\t\ttype: placedLayerTypes[placedLayerType],\n\t\t\t// pageNumber,\n\t\t\t// totalPages,\n\t\t\ttransform,\n\t\t\twarp: parseWarp(warp),\n\t\t};\n\n\t\t// console.log('PlLd warp', require('util').inspect(warp, false, 99, true));\n\t\t// console.log('PlLd', require('util').inspect(target.placedLayer, false, 99, true));\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst placed = target.placedLayer!;\n\t\twriteSignature(writer, 'plcL');\n\t\twriteInt32(writer, 3); // version\n\t\twritePascalString(writer, placed.id, 1);\n\t\twriteInt32(writer, 1); // pageNumber\n\t\twriteInt32(writer, 1); // totalPages\n\t\twriteInt32(writer, 16); // anitAliasPolicy\n\t\tif (placedLayerTypes.indexOf(placed.type) === -1) throw new Error('Invalid placedLayer type');\n\t\twriteInt32(writer, placedLayerTypes.indexOf(placed.type));\n\t\tfor (let i = 0; i < 8; i++) writeFloat64(writer, placed.transform[i]);\n\t\twriteInt32(writer, 0); // warp version\n\t\tconst isQuilt = placed.warp && isQuiltWarp(placed.warp);\n\t\tconst type = isQuilt ? 'quiltWarp' : 'warp';\n\t\twriteVersionAndDescriptor(writer, '', type, encodeWarp(placed.warp || {}), type);\n\t},\n);\n\ninterface SoLdDescriptor {\n\tIdnt: string;\n\tplaced: string;\n\tPgNm: number;\n\ttotalPages: number;\n\tCrop?: number;\n\tframeStep: { numerator: number; denominator: number; };\n\tduration: { numerator: number; denominator: number; };\n\tframeCount: number;\n\tAnnt: number;\n\tType: number;\n\tTrnf: number[];\n\tnonAffineTransform: number[];\n\tquiltWarp?: QuiltWarpDescriptor;\n\twarp: WarpDescriptor;\n\t'Sz  ': { Wdth: number; Hght: number; };\n\tRslt: DescriptorUnitsValue;\n\tcomp?: number;\n\tcompInfo?: { compID: number; originalCompID: number; };\n}\n\naddHandler(\n\t'SoLd',\n\thasKey('placedLayer'),\n\t(reader, target, left) => {\n\t\tif (readSignature(reader) !== 'soLD') throw new Error(`Invalid SoLd type`);\n\t\tif (readInt32(reader) !== 4) throw new Error(`Invalid SoLd version`);\n\t\tconst desc: SoLdDescriptor = readVersionAndDescriptor(reader);\n\t\t// console.log('SoLd', require('util').inspect(desc, false, 99, true));\n\t\t// console.log('SoLd.warp', require('util').inspect(desc.warp, false, 99, true));\n\t\t// console.log('SoLd.quiltWarp', require('util').inspect(desc.quiltWarp, false, 99, true));\n\n\t\ttarget.placedLayer = {\n\t\t\tid: desc.Idnt,\n\t\t\tplaced: desc.placed,\n\t\t\ttype: placedLayerTypes[desc.Type],\n\t\t\t// pageNumber: info.PgNm,\n\t\t\t// totalPages: info.totalPages,\n\t\t\t// frameStep: info.frameStep,\n\t\t\t// duration: info.duration,\n\t\t\t// frameCount: info.frameCount,\n\t\t\ttransform: desc.Trnf,\n\t\t\twidth: desc['Sz  '].Wdth,\n\t\t\theight: desc['Sz  '].Hght,\n\t\t\tresolution: parseUnits(desc.Rslt),\n\t\t\twarp: parseWarp((desc.quiltWarp || desc.warp) as any),\n\t\t};\n\n\t\tif (desc.nonAffineTransform && desc.nonAffineTransform.some((x, i) => x !== desc.Trnf[i])) {\n\t\t\ttarget.placedLayer.nonAffineTransform = desc.nonAffineTransform;\n\t\t}\n\n\t\tif (desc.Crop) target.placedLayer.crop = desc.Crop;\n\t\tif (desc.comp) target.placedLayer.comp = desc.comp;\n\t\tif (desc.compInfo) target.placedLayer.compInfo = desc.compInfo;\n\n\t\tskipBytes(reader, left()); // HACK\n\t},\n\t(writer, target) => {\n\t\twriteSignature(writer, 'soLD');\n\t\twriteInt32(writer, 4); // version\n\n\t\tconst placed = target.placedLayer!;\n\t\tconst desc: SoLdDescriptor = {\n\t\t\tIdnt: placed.id,\n\t\t\tplaced: placed.placed ?? placed.id, // ???\n\t\t\tPgNm: 1,\n\t\t\ttotalPages: 1,\n\t\t\t...(placed.crop ? { Crop: placed.crop } : {}),\n\t\t\tframeStep: {\n\t\t\t\tnumerator: 0,\n\t\t\t\tdenominator: 600\n\t\t\t},\n\t\t\tduration: {\n\t\t\t\tnumerator: 0,\n\t\t\t\tdenominator: 600\n\t\t\t},\n\t\t\tframeCount: 1,\n\t\t\tAnnt: 16,\n\t\t\tType: placedLayerTypes.indexOf(placed.type),\n\t\t\tTrnf: placed.transform,\n\t\t\tnonAffineTransform: placed.nonAffineTransform ?? placed.transform,\n\t\t\tquiltWarp: {} as any,\n\t\t\twarp: encodeWarp(placed.warp || {}),\n\t\t\t'Sz  ': {\n\t\t\t\tWdth: placed.width || 0, // TODO: find size ?\n\t\t\t\tHght: placed.height || 0, // TODO: find size ?\n\t\t\t},\n\t\t\tRslt: placed.resolution ? unitsValue(placed.resolution, 'resolution') : { units: 'Density', value: 72 },\n\t\t};\n\n\t\tif (placed.warp && isQuiltWarp(placed.warp)) {\n\t\t\tconst quiltWarp = encodeWarp(placed.warp) as QuiltWarpDescriptor;\n\t\t\tdesc.quiltWarp = quiltWarp;\n\t\t\tdesc.warp = {\n\t\t\t\twarpStyle: 'warpStyle.warpNone',\n\t\t\t\twarpValue: quiltWarp.warpValue,\n\t\t\t\twarpPerspective: quiltWarp.warpPerspective,\n\t\t\t\twarpPerspectiveOther: quiltWarp.warpPerspectiveOther,\n\t\t\t\twarpRotate: quiltWarp.warpRotate,\n\t\t\t\tbounds: quiltWarp.bounds,\n\t\t\t\tuOrder: quiltWarp.uOrder,\n\t\t\t\tvOrder: quiltWarp.vOrder,\n\t\t\t};\n\t\t} else {\n\t\t\tdelete desc.quiltWarp;\n\t\t}\n\n\t\tif (placed.comp) desc.comp = placed.comp;\n\t\tif (placed.compInfo) desc.compInfo = placed.compInfo;\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc, desc.quiltWarp ? 'quiltWarp' : 'warp');\n\t},\n);\n\naddHandler(\n\t'fxrp',\n\thasKey('referencePoint'),\n\t(reader, target) => {\n\t\ttarget.referencePoint = {\n\t\t\tx: readFloat64(reader),\n\t\t\ty: readFloat64(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\twriteFloat64(writer, target.referencePoint!.x);\n\t\twriteFloat64(writer, target.referencePoint!.y);\n\t},\n);\n\nif (MOCK_HANDLERS) {\n\taddHandler(\n\t\t'Patt',\n\t\ttarget => (target as any)._Patt !== undefined,\n\t\t(reader, target, left) => {\n\t\t\t// console.log('additional info: Patt');\n\t\t\t(target as any)._Patt = readBytes(reader, left());\n\t\t},\n\t\t(writer, target) => false && writeBytes(writer, (target as any)._Patt),\n\t);\n} else {\n\taddHandler(\n\t\t'Patt', // TODO: handle also Pat2 & Pat3\n\t\ttarget => !target,\n\t\t(reader, target, left) => {\n\t\t\tif (!left()) return;\n\n\t\t\tskipBytes(reader, left()); return; // not supported yet\n\t\t\ttarget; readPattern;\n\n\t\t\t// if (!target.patterns) target.patterns = [];\n\t\t\t// target.patterns.push(readPattern(reader));\n\t\t\t// skipBytes(reader, left());\n\t\t},\n\t\t(_writer, _target) => {\n\t\t},\n\t);\n}\n\nfunction readRect(reader: PsdReader) {\n\tconst top = readInt32(reader);\n\tconst left = readInt32(reader);\n\tconst bottom = readInt32(reader);\n\tconst right = readInt32(reader);\n\treturn { top, left, bottom, right };\n}\n\nfunction writeRect(writer: PsdWriter, rect: { left: number; top: number; right: number; bottom: number }) {\n\twriteInt32(writer, rect.top);\n\twriteInt32(writer, rect.left);\n\twriteInt32(writer, rect.bottom);\n\twriteInt32(writer, rect.right);\n}\n\naddHandler(\n\t'Anno',\n\ttarget => (target as Psd).annotations !== undefined,\n\t(reader, target, left) => {\n\t\tconst major = readUint16(reader);\n\t\tconst minor = readUint16(reader);\n\t\tif (major !== 2 || minor !== 1) throw new Error('Invalid Anno version');\n\t\tconst count = readUint32(reader);\n\t\tconst annotations: Annotation[] = [];\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\t/*const length =*/ readUint32(reader);\n\t\t\tconst type = readSignature(reader);\n\t\t\tconst open = !!readUint8(reader);\n\t\t\t/*const flags =*/ readUint8(reader); // always 28\n\t\t\t/*const optionalBlocks =*/ readUint16(reader);\n\t\t\tconst iconLocation = readRect(reader);\n\t\t\tconst popupLocation = readRect(reader);\n\t\t\tconst color = readColor(reader);\n\t\t\tconst author = readPascalString(reader, 2);\n\t\t\tconst name = readPascalString(reader, 2);\n\t\t\tconst date = readPascalString(reader, 2);\n\t\t\t/*const contentLength =*/ readUint32(reader);\n\t\t\t/*const dataType =*/ readSignature(reader);\n\t\t\tconst dataLength = readUint32(reader);\n\t\t\tlet data: string | Uint8Array;\n\n\t\t\tif (type === 'txtA') {\n\t\t\t\tif (dataLength >= 2 && readUint16(reader) === 0xfeff) {\n\t\t\t\t\tdata = readUnicodeStringWithLength(reader, (dataLength - 2) / 2);\n\t\t\t\t} else {\n\t\t\t\t\treader.offset -= 2;\n\t\t\t\t\tdata = readAsciiString(reader, dataLength);\n\t\t\t\t}\n\n\t\t\t\tdata = data.replace(/\\r/g, '\\n');\n\t\t\t} else if (type === 'sndA') {\n\t\t\t\tdata = readBytes(reader, dataLength);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown annotation type');\n\t\t\t}\n\n\t\t\tannotations.push({\n\t\t\t\ttype: type === 'txtA' ? 'text' : 'sound', open, iconLocation, popupLocation, color, author, name, date, data,\n\t\t\t});\n\t\t}\n\n\t\t(target as Psd).annotations = annotations;\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst annotations = (target as Psd).annotations!;\n\n\t\twriteUint16(writer, 2);\n\t\twriteUint16(writer, 1);\n\t\twriteUint32(writer, annotations.length);\n\n\t\tfor (const annotation of annotations) {\n\t\t\tconst sound = annotation.type === 'sound';\n\n\t\t\tif (sound && !(annotation.data instanceof Uint8Array)) throw new Error('Sound annotation data should be Uint8Array');\n\t\t\tif (!sound && typeof annotation.data !== 'string') throw new Error('Text annotation data should be string');\n\n\t\t\tconst lengthOffset = writer.offset;\n\t\t\twriteUint32(writer, 0); // length\n\t\t\twriteSignature(writer, sound ? 'sndA' : 'txtA');\n\t\t\twriteUint8(writer, annotation.open ? 1 : 0);\n\t\t\twriteUint8(writer, 28);\n\t\t\twriteUint16(writer, 1);\n\t\t\twriteRect(writer, annotation.iconLocation);\n\t\t\twriteRect(writer, annotation.popupLocation);\n\t\t\twriteColor(writer, annotation.color);\n\t\t\twritePascalString(writer, annotation.author || '', 2);\n\t\t\twritePascalString(writer, annotation.name || '', 2);\n\t\t\twritePascalString(writer, annotation.date || '', 2);\n\t\t\tconst contentOffset = writer.offset;\n\t\t\twriteUint32(writer, 0); // content length\n\t\t\twriteSignature(writer, sound ? 'sndM' : 'txtC');\n\t\t\twriteUint32(writer, 0); // data length\n\t\t\tconst dataOffset = writer.offset;\n\n\t\t\tif (sound) {\n\t\t\t\twriteBytes(writer, annotation.data as Uint8Array);\n\t\t\t} else {\n\t\t\t\twriteUint16(writer, 0xfeff); // unicode string indicator\n\t\t\t\tconst text = (annotation.data as string).replace(/\\n/g, '\\r');\n\t\t\t\tfor (let i = 0; i < text.length; i++) writeUint16(writer, text.charCodeAt(i));\n\t\t\t}\n\n\t\t\twriter.view.setUint32(lengthOffset, writer.offset - lengthOffset, false);\n\t\t\twriter.view.setUint32(contentOffset, writer.offset - contentOffset, false);\n\t\t\twriter.view.setUint32(dataOffset - 4, writer.offset - dataOffset, false);\n\t\t}\n\t}\n);\n\ninterface FileOpenDescriptor {\n\tcompInfo: { compID: number; originalCompID: number; };\n}\n\naddHandler(\n\t'lnk2',\n\t(target: any) => !!(target as Psd).linkedFiles && (target as Psd).linkedFiles!.length > 0,\n\t(reader, target, left, _, options) => {\n\t\tconst psd = target as Psd;\n\t\tpsd.linkedFiles = [];\n\n\t\twhile (left() > 8) {\n\t\t\tlet size = readLength64(reader); // size\n\t\t\tconst startOffset = reader.offset;\n\t\t\tconst type = readSignature(reader) as 'liFD' | 'liFE' | 'liFA';\n\t\t\tconst version = readInt32(reader);\n\t\t\tconst id = readPascalString(reader, 1);\n\t\t\tconst name = readUnicodeString(reader);\n\t\t\tconst fileType = readSignature(reader).trim(); // '    ' if empty\n\t\t\tconst fileCreator = readSignature(reader).trim(); // '    ' or '\\0\\0\\0\\0' if empty\n\t\t\tconst dataSize = readLength64(reader);\n\t\t\tconst hasFileOpenDescriptor = readUint8(reader);\n\t\t\tconst fileOpenDescriptor = hasFileOpenDescriptor ? readVersionAndDescriptor(reader) as FileOpenDescriptor : undefined;\n\t\t\tconst linkedFileDescriptor = type === 'liFE' ? readVersionAndDescriptor(reader) : undefined;\n\t\t\tconst file: LinkedFile = { id, name, data: undefined };\n\n\t\t\tif (fileType) file.type = fileType;\n\t\t\tif (fileCreator) file.creator = fileCreator;\n\t\t\tif (fileOpenDescriptor) file.descriptor = fileOpenDescriptor;\n\n\t\t\tif (type === 'liFE' && version > 3) {\n\t\t\t\tconst year = readInt32(reader);\n\t\t\t\tconst month = readUint8(reader);\n\t\t\t\tconst day = readUint8(reader);\n\t\t\t\tconst hour = readUint8(reader);\n\t\t\t\tconst minute = readUint8(reader);\n\t\t\t\tconst seconds = readFloat64(reader);\n\t\t\t\tconst wholeSeconds = Math.floor(seconds);\n\t\t\t\tconst ms = (seconds - wholeSeconds) * 1000;\n\t\t\t\tfile.time = new Date(year, month, day, hour, minute, wholeSeconds, ms);\n\t\t\t}\n\n\t\t\tconst fileSize = type === 'liFE' ? readLength64(reader) : 0;\n\t\t\tif (type === 'liFA') skipBytes(reader, 8);\n\t\t\tif (type === 'liFD') file.data = readBytes(reader, dataSize);\n\t\t\tif (version >= 5) file.childDocumentID = readUnicodeString(reader);\n\t\t\tif (version >= 6) file.assetModTime = readFloat64(reader);\n\t\t\tif (version >= 7) file.assetLockedState = readUint8(reader);\n\t\t\tif (type === 'liFE') file.data = readBytes(reader, fileSize);\n\n\t\t\tif (options.skipLinkedFilesData) file.data = undefined;\n\n\t\t\tpsd.linkedFiles.push(file);\n\t\t\tlinkedFileDescriptor;\n\n\t\t\twhile (size % 4) size++;\n\t\t\treader.offset = startOffset + size;\n\t\t}\n\n\t\tskipBytes(reader, left()); // ?\n\t},\n\t(writer, target) => {\n\t\tconst psd = target as Psd;\n\n\t\tfor (const file of psd.linkedFiles!) {\n\t\t\tlet version = 2;\n\n\t\t\tif (file.assetLockedState != null) version = 7;\n\t\t\telse if (file.assetModTime != null) version = 6;\n\t\t\telse if (file.childDocumentID != null) version = 5;\n\t\t\t// TODO: else if (file.time != null) version = 3; (only for liFE)\n\n\t\t\twriteUint32(writer, 0);\n\t\t\twriteUint32(writer, 0); // size\n\t\t\tconst sizeOffset = writer.offset;\n\t\t\twriteSignature(writer, file.data ? 'liFD' : 'liFA');\n\t\t\twriteInt32(writer, version);\n\t\t\twritePascalString(writer, file.id || '', 1);\n\t\t\twriteUnicodeStringWithPadding(writer, file.name || '');\n\t\t\twriteSignature(writer, file.type ? `${file.type}    `.substr(0, 4) : '    ');\n\t\t\twriteSignature(writer, file.creator ? `${file.creator}    `.substr(0, 4) : '\\0\\0\\0\\0');\n\t\t\twriteLength64(writer, file.data ? file.data.byteLength : 0);\n\n\t\t\tif (file.descriptor && file.descriptor.compInfo) {\n\t\t\t\tconst desc: FileOpenDescriptor = {\n\t\t\t\t\tcompInfo: file.descriptor.compInfo,\n\t\t\t\t};\n\n\t\t\t\twriteUint8(writer, 1);\n\t\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t\t} else {\n\t\t\t\twriteUint8(writer, 0);\n\t\t\t}\n\n\t\t\tif (file.data) writeBytes(writer, file.data);\n\t\t\telse writeLength64(writer, 0);\n\t\t\tif (version >= 5) writeUnicodeStringWithPadding(writer, file.childDocumentID || '');\n\t\t\tif (version >= 6) writeFloat64(writer, file.assetModTime || 0);\n\t\t\tif (version >= 7) writeUint8(writer, file.assetLockedState || 0);\n\n\t\t\tlet size = writer.offset - sizeOffset;\n\t\t\twriter.view.setUint32(sizeOffset - 4, size, false); // write size\n\n\t\t\twhile (size % 4) {\n\t\t\t\tsize++;\n\t\t\t\twriteUint8(writer, 0);\n\t\t\t}\n\t\t}\n\t},\n);\naddHandlerAlias('lnkD', 'lnk2');\naddHandlerAlias('lnk3', 'lnk2');\n\n// this seems to just be zero size block, ignore it\naddHandler(\n\t'lnkE',\n\ttarget => (target as any)._lnkE !== undefined,\n\t(reader, target, left, _psds, options) => {\n\t\tif (options.logMissingFeatures && left()) {\n\t\t\tconsole.log(`Non-empty lnkE layer info (${left()} bytes)`);\n\t\t}\n\n\t\tif (MOCK_HANDLERS) {\n\t\t\t(target as any)._lnkE = readBytes(reader, left());\n\t\t}\n\t},\n\t(writer, target) => MOCK_HANDLERS && writeBytes(writer, (target as any)._lnkE),\n);\n\ninterface ExtensionDesc {\n\tgeneratorSettings: {\n\t\tgenerator_45_assets: { json: string; };\n\t\tlayerTime: number;\n\t};\n}\n\naddHandler(\n\t'pths',\n\thasKey('pathList'),\n\t(reader, target) => {\n\t\tconst descriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.pathList = []; // TODO: read paths (find example with non-empty list)\n\n\t\tdescriptor;\n\t\t// console.log('pths', descriptor); // TODO: remove this\n\t},\n\t(writer, _target) => {\n\t\tconst descriptor = {\n\t\t\tpathList: [], // TODO: write paths\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'pathsDataClass', descriptor);\n\t},\n);\n\naddHandler(\n\t'lyvr',\n\thasKey('version'),\n\t(reader, target) => target.version = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.version!),\n);\n\nfunction adjustmentType(type: string) {\n\treturn (target: LayerAdditionalInfo) => !!target.adjustment && target.adjustment.type === type;\n}\n\naddHandler(\n\t'brit',\n\tadjustmentType('brightness/contrast'),\n\t(reader, target, left) => {\n\t\tif (!target.adjustment) { // ignore if got one from CgEd block\n\t\t\ttarget.adjustment = {\n\t\t\t\ttype: 'brightness/contrast',\n\t\t\t\tbrightness: readInt16(reader),\n\t\t\t\tcontrast: readInt16(reader),\n\t\t\t\tmeanValue: readInt16(reader),\n\t\t\t\tlabColorOnly: !!readUint8(reader),\n\t\t\t\tuseLegacy: true,\n\t\t\t};\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as BrightnessAdjustment;\n\t\twriteInt16(writer, info.brightness || 0);\n\t\twriteInt16(writer, info.contrast || 0);\n\t\twriteInt16(writer, info.meanValue ?? 127);\n\t\twriteUint8(writer, info.labColorOnly ? 1 : 0);\n\t\twriteZeros(writer, 1);\n\t},\n);\n\nfunction readLevelsChannel(reader: PsdReader): LevelsAdjustmentChannel {\n\tconst shadowInput = readInt16(reader);\n\tconst highlightInput = readInt16(reader);\n\tconst shadowOutput = readInt16(reader);\n\tconst highlightOutput = readInt16(reader);\n\tconst midtoneInput = readInt16(reader) / 100;\n\treturn { shadowInput, highlightInput, shadowOutput, highlightOutput, midtoneInput };\n}\n\nfunction writeLevelsChannel(writer: PsdWriter, channel: LevelsAdjustmentChannel) {\n\twriteInt16(writer, channel.shadowInput);\n\twriteInt16(writer, channel.highlightInput);\n\twriteInt16(writer, channel.shadowOutput);\n\twriteInt16(writer, channel.highlightOutput);\n\twriteInt16(writer, Math.round(channel.midtoneInput * 100));\n}\n\naddHandler(\n\t'levl',\n\tadjustmentType('levels'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 2) throw new Error('Invalid levl version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'levels',\n\t\t\trgb: readLevelsChannel(reader),\n\t\t\tred: readLevelsChannel(reader),\n\t\t\tgreen: readLevelsChannel(reader),\n\t\t\tblue: readLevelsChannel(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as LevelsAdjustment;\n\t\tconst defaultChannel = {\n\t\t\tshadowInput: 0,\n\t\t\thighlightInput: 255,\n\t\t\tshadowOutput: 0,\n\t\t\thighlightOutput: 255,\n\t\t\tmidtoneInput: 1,\n\t\t};\n\n\t\twriteUint16(writer, 2); // version\n\t\twriteLevelsChannel(writer, info.rgb || defaultChannel);\n\t\twriteLevelsChannel(writer, info.red || defaultChannel);\n\t\twriteLevelsChannel(writer, info.blue || defaultChannel);\n\t\twriteLevelsChannel(writer, info.green || defaultChannel);\n\t\tfor (let i = 0; i < 59; i++) writeLevelsChannel(writer, defaultChannel);\n\t},\n);\n\nfunction readCurveChannel(reader: PsdReader) {\n\tconst nodes = readUint16(reader);\n\tconst channel: CurvesAdjustmentChannel = [];\n\n\tfor (let j = 0; j < nodes; j++) {\n\t\tconst output = readInt16(reader);\n\t\tconst input = readInt16(reader);\n\t\tchannel.push({ input, output });\n\t}\n\n\treturn channel;\n}\n\nfunction writeCurveChannel(writer: PsdWriter, channel: CurvesAdjustmentChannel) {\n\twriteUint16(writer, channel.length);\n\n\tfor (const n of channel) {\n\t\twriteUint16(writer, n.output);\n\t\twriteUint16(writer, n.input);\n\t}\n}\n\naddHandler(\n\t'curv',\n\tadjustmentType('curves'),\n\t(reader, target, left) => {\n\t\treadUint8(reader);\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid curv version');\n\t\treadUint16(reader);\n\t\tconst channels = readUint16(reader);\n\t\tconst info: CurvesAdjustment = { type: 'curves' };\n\n\t\tif (channels & 1) info.rgb = readCurveChannel(reader);\n\t\tif (channels & 2) info.red = readCurveChannel(reader);\n\t\tif (channels & 4) info.green = readCurveChannel(reader);\n\t\tif (channels & 8) info.blue = readCurveChannel(reader);\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\t...info,\n\t\t};\n\n\t\t// ignoring, duplicate information\n\t\t// checkSignature(reader, 'Crv ');\n\n\t\t// const cVersion = readUint16(reader);\n\t\t// readUint16(reader);\n\t\t// const channelCount = readUint16(reader);\n\n\t\t// for (let i = 0; i < channelCount; i++) {\n\t\t// \tconst index = readUint16(reader);\n\t\t// \tconst nodes = readUint16(reader);\n\n\t\t// \tfor (let j = 0; j < nodes; j++) {\n\t\t// \t\tconst output = readInt16(reader);\n\t\t// \t\tconst input = readInt16(reader);\n\t\t// \t}\n\t\t// }\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as CurvesAdjustment;\n\t\tconst { rgb, red, green, blue } = info;\n\t\tlet channels = 0;\n\t\tlet channelCount = 0;\n\n\t\tif (rgb && rgb.length) { channels |= 1; channelCount++; }\n\t\tif (red && red.length) { channels |= 2; channelCount++; }\n\t\tif (green && green.length) { channels |= 4; channelCount++; }\n\t\tif (blue && blue.length) { channels |= 8; channelCount++; }\n\n\t\twriteUint8(writer, 0);\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, 0);\n\t\twriteUint16(writer, channels);\n\n\t\tif (rgb && rgb.length) writeCurveChannel(writer, rgb);\n\t\tif (red && red.length) writeCurveChannel(writer, red);\n\t\tif (green && green.length) writeCurveChannel(writer, green);\n\t\tif (blue && blue.length) writeCurveChannel(writer, blue);\n\n\t\twriteSignature(writer, 'Crv ');\n\t\twriteUint16(writer, 4); // version\n\t\twriteUint16(writer, 0);\n\t\twriteUint16(writer, channelCount);\n\n\t\tif (rgb && rgb.length) { writeUint16(writer, 0); writeCurveChannel(writer, rgb); }\n\t\tif (red && red.length) { writeUint16(writer, 1); writeCurveChannel(writer, red); }\n\t\tif (green && green.length) { writeUint16(writer, 2); writeCurveChannel(writer, green); }\n\t\tif (blue && blue.length) { writeUint16(writer, 3); writeCurveChannel(writer, blue); }\n\n\t\twriteZeros(writer, 2);\n\t},\n);\n\naddHandler(\n\t'expA',\n\tadjustmentType('exposure'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid expA version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'exposure',\n\t\t\texposure: readFloat32(reader),\n\t\t\toffset: readFloat32(reader),\n\t\t\tgamma: readFloat32(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ExposureAdjustment;\n\t\twriteUint16(writer, 1); // version\n\t\twriteFloat32(writer, info.exposure!);\n\t\twriteFloat32(writer, info.offset!);\n\t\twriteFloat32(writer, info.gamma!);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\ninterface VibranceDescriptor {\n\tvibrance?: number;\n\tStrt?: number;\n}\n\naddHandler(\n\t'vibA',\n\tadjustmentType('vibrance'),\n\t(reader, target, left) => {\n\t\tconst desc: VibranceDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = { type: 'vibrance' };\n\t\tif (desc.vibrance !== undefined) target.adjustment.vibrance = desc.vibrance;\n\t\tif (desc.Strt !== undefined) target.adjustment.saturation = desc.Strt;\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as VibranceAdjustment;\n\t\tconst desc: VibranceDescriptor = {};\n\t\tif (info.vibrance !== undefined) desc.vibrance = info.vibrance;\n\t\tif (info.saturation !== undefined) desc.Strt = info.saturation;\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\nfunction readHueChannel(reader: PsdReader): HueSaturationAdjustmentChannel {\n\treturn {\n\t\ta: readInt16(reader),\n\t\tb: readInt16(reader),\n\t\tc: readInt16(reader),\n\t\td: readInt16(reader),\n\t\thue: readInt16(reader),\n\t\tsaturation: readInt16(reader),\n\t\tlightness: readInt16(reader),\n\t};\n}\n\nfunction writeHueChannel(writer: PsdWriter, channel: HueSaturationAdjustmentChannel | undefined) {\n\tconst c = channel || {} as Partial<HueSaturationAdjustmentChannel>;\n\twriteInt16(writer, c.a || 0);\n\twriteInt16(writer, c.b || 0);\n\twriteInt16(writer, c.c || 0);\n\twriteInt16(writer, c.d || 0);\n\twriteInt16(writer, c.hue || 0);\n\twriteInt16(writer, c.saturation || 0);\n\twriteInt16(writer, c.lightness || 0);\n}\n\naddHandler(\n\t'hue2',\n\tadjustmentType('hue/saturation'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 2) throw new Error('Invalid hue2 version');\n\n\t\ttarget.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'hue/saturation',\n\t\t\tmaster: readHueChannel(reader),\n\t\t\treds: readHueChannel(reader),\n\t\t\tyellows: readHueChannel(reader),\n\t\t\tgreens: readHueChannel(reader),\n\t\t\tcyans: readHueChannel(reader),\n\t\t\tblues: readHueChannel(reader),\n\t\t\tmagentas: readHueChannel(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as HueSaturationAdjustment;\n\n\t\twriteUint16(writer, 2); // version\n\t\twriteHueChannel(writer, info.master);\n\t\twriteHueChannel(writer, info.reds);\n\t\twriteHueChannel(writer, info.yellows);\n\t\twriteHueChannel(writer, info.greens);\n\t\twriteHueChannel(writer, info.cyans);\n\t\twriteHueChannel(writer, info.blues);\n\t\twriteHueChannel(writer, info.magentas);\n\t},\n);\n\nfunction readColorBalance(reader: PsdReader): ColorBalanceValues {\n\treturn {\n\t\tcyanRed: readInt16(reader),\n\t\tmagentaGreen: readInt16(reader),\n\t\tyellowBlue: readInt16(reader),\n\t};\n}\n\nfunction writeColorBalance(writer: PsdWriter, value: Partial<ColorBalanceValues>) {\n\twriteInt16(writer, value.cyanRed || 0);\n\twriteInt16(writer, value.magentaGreen || 0);\n\twriteInt16(writer, value.yellowBlue || 0);\n}\n\naddHandler(\n\t'blnc',\n\tadjustmentType('color balance'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'color balance',\n\t\t\tshadows: readColorBalance(reader),\n\t\t\tmidtones: readColorBalance(reader),\n\t\t\thighlights: readColorBalance(reader),\n\t\t\tpreserveLuminosity: !!readUint8(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ColorBalanceAdjustment;\n\t\twriteColorBalance(writer, info.shadows || {});\n\t\twriteColorBalance(writer, info.midtones || {});\n\t\twriteColorBalance(writer, info.highlights || {});\n\t\twriteUint8(writer, info.preserveLuminosity ? 1 : 0);\n\t\twriteZeros(writer, 1);\n\t},\n);\n\ninterface BlackAndWhiteDescriptor {\n\t'Rd  ': number;\n\tYllw: number;\n\t'Grn ': number;\n\t'Cyn ': number;\n\t'Bl  ': number;\n\tMgnt: number;\n\tuseTint: boolean;\n\ttintColor?: DescriptorColor;\n\tbwPresetKind: number;\n\tblackAndWhitePresetFileName: string;\n}\n\naddHandler(\n\t'blwh',\n\tadjustmentType('black & white'),\n\t(reader, target, left) => {\n\t\tconst desc: BlackAndWhiteDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = {\n\t\t\ttype: 'black & white',\n\t\t\treds: desc['Rd  '],\n\t\t\tyellows: desc.Yllw,\n\t\t\tgreens: desc['Grn '],\n\t\t\tcyans: desc['Cyn '],\n\t\t\tblues: desc['Bl  '],\n\t\t\tmagentas: desc.Mgnt,\n\t\t\tuseTint: !!desc.useTint,\n\t\t\tpresetKind: desc.bwPresetKind,\n\t\t\tpresetFileName: desc.blackAndWhitePresetFileName,\n\t\t};\n\n\t\tif (desc.tintColor !== undefined) target.adjustment.tintColor = parseColor(desc.tintColor);\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as BlackAndWhiteAdjustment;\n\t\tconst desc: BlackAndWhiteDescriptor = {\n\t\t\t'Rd  ': info.reds || 0,\n\t\t\tYllw: info.yellows || 0,\n\t\t\t'Grn ': info.greens || 0,\n\t\t\t'Cyn ': info.cyans || 0,\n\t\t\t'Bl  ': info.blues || 0,\n\t\t\tMgnt: info.magentas || 0,\n\t\t\tuseTint: !!info.useTint,\n\t\t\ttintColor: serializeColor(info.tintColor),\n\t\t\tbwPresetKind: info.presetKind || 0,\n\t\t\tblackAndWhitePresetFileName: info.presetFileName || '',\n\t\t};\n\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'phfl',\n\tadjustmentType('photo filter'),\n\t(reader, target, left) => {\n\t\tconst version = readUint16(reader);\n\t\tif (version !== 2 && version !== 3) throw new Error('Invalid phfl version');\n\n\t\tlet color: Color;\n\n\t\tif (version === 2) {\n\t\t\tcolor = readColor(reader);\n\t\t} else { // version 3\n\t\t\t// TODO: test this, this is probably wrong\n\t\t\tcolor = {\n\t\t\t\tl: readInt32(reader) / 100,\n\t\t\t\ta: readInt32(reader) / 100,\n\t\t\t\tb: readInt32(reader) / 100,\n\t\t\t};\n\t\t}\n\n\t\ttarget.adjustment = {\n\t\t\ttype: 'photo filter',\n\t\t\tcolor,\n\t\t\tdensity: readUint32(reader) / 100,\n\t\t\tpreserveLuminosity: !!readUint8(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as PhotoFilterAdjustment;\n\t\twriteUint16(writer, 2); // version\n\t\twriteColor(writer, info.color || { l: 0, a: 0, b: 0 });\n\t\twriteUint32(writer, (info.density || 0) * 100);\n\t\twriteUint8(writer, info.preserveLuminosity ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\nfunction readMixrChannel(reader: PsdReader): ChannelMixerChannel {\n\tconst red = readInt16(reader);\n\tconst green = readInt16(reader);\n\tconst blue = readInt16(reader);\n\tskipBytes(reader, 2);\n\tconst constant = readInt16(reader);\n\treturn { red, green, blue, constant };\n}\n\nfunction writeMixrChannel(writer: PsdWriter, channel: ChannelMixerChannel | undefined) {\n\tconst c = channel || {} as Partial<ChannelMixerChannel>;\n\twriteInt16(writer, c.red!);\n\twriteInt16(writer, c.green!);\n\twriteInt16(writer, c.blue!);\n\twriteZeros(writer, 2);\n\twriteInt16(writer, c.constant!);\n}\n\naddHandler(\n\t'mixr',\n\tadjustmentType('channel mixer'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid mixr version');\n\n\t\tconst adjustment: ChannelMixerAdjustment = target.adjustment = {\n\t\t\t...target.adjustment as PresetInfo,\n\t\t\ttype: 'channel mixer',\n\t\t\tmonochrome: !!readUint16(reader),\n\t\t};\n\n\t\tif (!adjustment.monochrome) {\n\t\t\tadjustment.red = readMixrChannel(reader);\n\t\t\tadjustment.green = readMixrChannel(reader);\n\t\t\tadjustment.blue = readMixrChannel(reader);\n\t\t}\n\n\t\tadjustment.gray = readMixrChannel(reader);\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ChannelMixerAdjustment;\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, info.monochrome ? 1 : 0);\n\n\t\tif (info.monochrome) {\n\t\t\twriteMixrChannel(writer, info.gray);\n\t\t\twriteZeros(writer, 3 * 5 * 2);\n\t\t} else {\n\t\t\twriteMixrChannel(writer, info.red);\n\t\t\twriteMixrChannel(writer, info.green);\n\t\t\twriteMixrChannel(writer, info.blue);\n\t\t\twriteMixrChannel(writer, info.gray);\n\t\t}\n\t},\n);\n\nconst colorLookupType = createEnum<'3dlut' | 'abstractProfile' | 'deviceLinkProfile'>('colorLookupType', '3DLUT', {\n\t'3dlut': '3DLUT',\n\tabstractProfile: 'abstractProfile',\n\tdeviceLinkProfile: 'deviceLinkProfile',\n});\n\nconst LUTFormatType = createEnum<'look' | 'cube' | '3dl'>('LUTFormatType', 'look', {\n\tlook: 'LUTFormatLOOK',\n\tcube: 'LUTFormatCUBE',\n\t'3dl': 'LUTFormat3DL',\n});\n\nconst colorLookupOrder = createEnum<'rgb' | 'bgr'>('colorLookupOrder', 'rgb', {\n\trgb: 'rgbOrder',\n\tbgr: 'bgrOrder',\n});\n\ninterface ColorLookupDescriptor {\n\tlookupType?: string;\n\t'Nm  '?: string;\n\tDthr?: boolean;\n\tprofile?: Uint8Array;\n\tLUTFormat?: string;\n\tdataOrder?: string;\n\ttableOrder?: string;\n\tLUT3DFileData?: Uint8Array;\n\tLUT3DFileName?: string;\n}\n\naddHandler(\n\t'clrL',\n\tadjustmentType('color lookup'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid clrL version');\n\n\t\tconst desc: ColorLookupDescriptor = readVersionAndDescriptor(reader);\n\t\ttarget.adjustment = { type: 'color lookup' };\n\t\tconst info = target.adjustment;\n\n\t\tif (desc.lookupType !== undefined) info.lookupType = colorLookupType.decode(desc.lookupType);\n\t\tif (desc['Nm  '] !== undefined) info.name = desc['Nm  '];\n\t\tif (desc.Dthr !== undefined) info.dither = desc.Dthr;\n\t\tif (desc.profile !== undefined) info.profile = desc.profile;\n\t\tif (desc.LUTFormat !== undefined) info.lutFormat = LUTFormatType.decode(desc.LUTFormat);\n\t\tif (desc.dataOrder !== undefined) info.dataOrder = colorLookupOrder.decode(desc.dataOrder);\n\t\tif (desc.tableOrder !== undefined) info.tableOrder = colorLookupOrder.decode(desc.tableOrder);\n\t\tif (desc.LUT3DFileData !== undefined) info.lut3DFileData = desc.LUT3DFileData;\n\t\tif (desc.LUT3DFileName !== undefined) info.lut3DFileName = desc.LUT3DFileName;\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ColorLookupAdjustment;\n\t\tconst desc: ColorLookupDescriptor = {};\n\n\t\tif (info.lookupType !== undefined) desc.lookupType = colorLookupType.encode(info.lookupType);\n\t\tif (info.name !== undefined) desc['Nm  '] = info.name;\n\t\tif (info.dither !== undefined) desc.Dthr = info.dither;\n\t\tif (info.profile !== undefined) desc.profile = info.profile;\n\t\tif (info.lutFormat !== undefined) desc.LUTFormat = LUTFormatType.encode(info.lutFormat);\n\t\tif (info.dataOrder !== undefined) desc.dataOrder = colorLookupOrder.encode(info.dataOrder);\n\t\tif (info.tableOrder !== undefined) desc.tableOrder = colorLookupOrder.encode(info.tableOrder);\n\t\tif (info.lut3DFileData !== undefined) desc.LUT3DFileData = info.lut3DFileData;\n\t\tif (info.lut3DFileName !== undefined) desc.LUT3DFileName = info.lut3DFileName;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\naddHandler(\n\t'nvrt',\n\tadjustmentType('invert'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = { type: 'invert' };\n\t\tskipBytes(reader, left());\n\t},\n\t() => {\n\t\t// nothing to write here\n\t},\n);\n\naddHandler(\n\t'post',\n\tadjustmentType('posterize'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'posterize',\n\t\t\tlevels: readUint16(reader),\n\t\t};\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as PosterizeAdjustment;\n\t\twriteUint16(writer, info.levels ?? 4);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\naddHandler(\n\t'thrs',\n\tadjustmentType('threshold'),\n\t(reader, target, left) => {\n\t\ttarget.adjustment = {\n\t\t\ttype: 'threshold',\n\t\t\tlevel: readUint16(reader),\n\t\t};\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as ThresholdAdjustment;\n\t\twriteUint16(writer, info.level ?? 128);\n\t\twriteZeros(writer, 2);\n\t},\n);\n\nconst grdmColorModels = ['', '', '', 'rgb', 'hsb', '', 'lab'];\n\naddHandler(\n\t'grdm',\n\tadjustmentType('gradient map'),\n\t(reader, target, left) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid grdm version');\n\n\t\tconst info: GradientMapAdjustment = {\n\t\t\ttype: 'gradient map',\n\t\t\tgradientType: 'solid',\n\t\t};\n\n\t\tinfo.reverse = !!readUint8(reader);\n\t\tinfo.dither = !!readUint8(reader);\n\t\tinfo.name = readUnicodeString(reader);\n\t\tinfo.colorStops = [];\n\t\tinfo.opacityStops = [];\n\n\t\tconst stopsCount = readUint16(reader);\n\n\t\tfor (let i = 0; i < stopsCount; i++) {\n\t\t\tinfo.colorStops.push({\n\t\t\t\tlocation: readUint32(reader),\n\t\t\t\tmidpoint: readUint32(reader) / 100,\n\t\t\t\tcolor: readColor(reader),\n\t\t\t});\n\t\t\tskipBytes(reader, 2);\n\t\t}\n\n\t\tconst opacityStopsCount = readUint16(reader);\n\n\t\tfor (let i = 0; i < opacityStopsCount; i++) {\n\t\t\tinfo.opacityStops.push({\n\t\t\t\tlocation: readUint32(reader),\n\t\t\t\tmidpoint: readUint32(reader) / 100,\n\t\t\t\topacity: readUint16(reader) / 0xff,\n\t\t\t});\n\t\t}\n\n\t\tconst expansionCount = readUint16(reader);\n\t\tif (expansionCount !== 2) throw new Error('Invalid grdm expansion count');\n\n\t\tconst interpolation = readUint16(reader);\n\t\tinfo.smoothness = interpolation / 4096;\n\n\t\tconst length = readUint16(reader);\n\t\tif (length !== 32) throw new Error('Invalid grdm length');\n\n\t\tinfo.gradientType = readUint16(reader) ? 'noise' : 'solid';\n\t\tinfo.randomSeed = readUint32(reader);\n\t\tinfo.addTransparency = !!readUint16(reader);\n\t\tinfo.restrictColors = !!readUint16(reader);\n\t\tinfo.roughness = readUint32(reader) / 4096;\n\t\tinfo.colorModel = (grdmColorModels[readUint16(reader)] || 'rgb') as 'rgb' | 'hsb' | 'lab';\n\n\t\tinfo.min = [\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t];\n\n\t\tinfo.max = [\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t\treadUint16(reader) / 0x8000,\n\t\t];\n\n\t\tskipBytes(reader, left());\n\n\t\tfor (const s of info.colorStops) s.location /= interpolation;\n\t\tfor (const s of info.opacityStops) s.location /= interpolation;\n\n\t\ttarget.adjustment = info;\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as GradientMapAdjustment;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint8(writer, info.reverse ? 1 : 0);\n\t\twriteUint8(writer, info.dither ? 1 : 0);\n\t\twriteUnicodeStringWithPadding(writer, info.name || '');\n\t\twriteUint16(writer, info.colorStops && info.colorStops.length || 0);\n\n\t\tconst interpolation = Math.round((info.smoothness ?? 1) * 4096);\n\n\t\tfor (const s of info.colorStops || []) {\n\t\t\twriteUint32(writer, Math.round(s.location * interpolation));\n\t\t\twriteUint32(writer, Math.round(s.midpoint * 100));\n\t\t\twriteColor(writer, s.color);\n\t\t\twriteZeros(writer, 2);\n\t\t}\n\n\t\twriteUint16(writer, info.opacityStops && info.opacityStops.length || 0);\n\n\t\tfor (const s of info.opacityStops || []) {\n\t\t\twriteUint32(writer, Math.round(s.location * interpolation));\n\t\t\twriteUint32(writer, Math.round(s.midpoint * 100));\n\t\t\twriteUint16(writer, Math.round(s.opacity * 0xff));\n\t\t}\n\n\t\twriteUint16(writer, 2); // expansion count\n\t\twriteUint16(writer, interpolation);\n\t\twriteUint16(writer, 32); // length\n\t\twriteUint16(writer, info.gradientType === 'noise' ? 1 : 0);\n\t\twriteUint32(writer, info.randomSeed || 0);\n\t\twriteUint16(writer, info.addTransparency ? 1 : 0);\n\t\twriteUint16(writer, info.restrictColors ? 1 : 0);\n\t\twriteUint32(writer, Math.round((info.roughness ?? 1) * 4096));\n\t\tconst colorModel = grdmColorModels.indexOf(info.colorModel ?? 'rgb');\n\t\twriteUint16(writer, colorModel === -1 ? 3 : colorModel);\n\n\t\tfor (let i = 0; i < 4; i++)\n\t\t\twriteUint16(writer, Math.round((info.min && info.min[i] || 0) * 0x8000));\n\n\t\tfor (let i = 0; i < 4; i++)\n\t\t\twriteUint16(writer, Math.round((info.max && info.max[i] || 0) * 0x8000));\n\n\t\twriteZeros(writer, 4);\n\t},\n);\n\nfunction readSelectiveColors(reader: PsdReader): CMYK {\n\treturn {\n\t\tc: readInt16(reader),\n\t\tm: readInt16(reader),\n\t\ty: readInt16(reader),\n\t\tk: readInt16(reader),\n\t};\n}\n\nfunction writeSelectiveColors(writer: PsdWriter, cmyk: CMYK | undefined) {\n\tconst c = cmyk || {} as Partial<CMYK>;\n\twriteInt16(writer, c.c!);\n\twriteInt16(writer, c.m!);\n\twriteInt16(writer, c.y!);\n\twriteInt16(writer, c.k!);\n}\n\naddHandler(\n\t'selc',\n\tadjustmentType('selective color'),\n\t(reader, target) => {\n\t\tif (readUint16(reader) !== 1) throw new Error('Invalid selc version');\n\n\t\tconst mode = readUint16(reader) ? 'absolute' : 'relative';\n\t\tskipBytes(reader, 8);\n\n\t\ttarget.adjustment = {\n\t\t\ttype: 'selective color',\n\t\t\tmode,\n\t\t\treds: readSelectiveColors(reader),\n\t\t\tyellows: readSelectiveColors(reader),\n\t\t\tgreens: readSelectiveColors(reader),\n\t\t\tcyans: readSelectiveColors(reader),\n\t\t\tblues: readSelectiveColors(reader),\n\t\t\tmagentas: readSelectiveColors(reader),\n\t\t\twhites: readSelectiveColors(reader),\n\t\t\tneutrals: readSelectiveColors(reader),\n\t\t\tblacks: readSelectiveColors(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment as SelectiveColorAdjustment;\n\n\t\twriteUint16(writer, 1); // version\n\t\twriteUint16(writer, info.mode === 'absolute' ? 1 : 0);\n\t\twriteZeros(writer, 8);\n\t\twriteSelectiveColors(writer, info.reds);\n\t\twriteSelectiveColors(writer, info.yellows);\n\t\twriteSelectiveColors(writer, info.greens);\n\t\twriteSelectiveColors(writer, info.cyans);\n\t\twriteSelectiveColors(writer, info.blues);\n\t\twriteSelectiveColors(writer, info.magentas);\n\t\twriteSelectiveColors(writer, info.whites);\n\t\twriteSelectiveColors(writer, info.neutrals);\n\t\twriteSelectiveColors(writer, info.blacks);\n\t},\n);\n\ninterface BrightnessContrastDescriptor {\n\tVrsn: number;\n\tBrgh: number;\n\tCntr: number;\n\tmeans: number;\n\t'Lab ': boolean;\n\tuseLegacy: boolean;\n\tAuto: boolean;\n}\n\ninterface PresetDescriptor {\n\tVrsn: number;\n\tpresetKind: number;\n\tpresetFileName: string;\n}\n\ninterface CurvesPresetDescriptor {\n\tVrsn: number;\n\tcurvesPresetKind: number;\n\tcurvesPresetFileName: string;\n}\n\ninterface MixerPresetDescriptor {\n\tVrsn: number;\n\tmixerPresetKind: number;\n\tmixerPresetFileName: string;\n}\n\naddHandler(\n\t'CgEd',\n\ttarget => {\n\t\tconst a = target.adjustment;\n\n\t\tif (!a) return false;\n\n\t\treturn (a.type === 'brightness/contrast' && !a.useLegacy) ||\n\t\t\t((a.type === 'levels' || a.type === 'curves' || a.type === 'exposure' || a.type === 'channel mixer' ||\n\t\t\t\ta.type === 'hue/saturation') && a.presetFileName !== undefined);\n\t},\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as\n\t\t\tBrightnessContrastDescriptor | PresetDescriptor | CurvesPresetDescriptor | MixerPresetDescriptor;\n\t\tif (desc.Vrsn !== 1) throw new Error('Invalid CgEd version');\n\n\t\t// this section can specify preset file name for other adjustment types\n\t\tif ('presetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as LevelsAdjustment | ExposureAdjustment | HueSaturationAdjustment,\n\t\t\t\tpresetKind: desc.presetKind,\n\t\t\t\tpresetFileName: desc.presetFileName,\n\t\t\t};\n\t\t} else if ('curvesPresetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as CurvesAdjustment,\n\t\t\t\tpresetKind: desc.curvesPresetKind,\n\t\t\t\tpresetFileName: desc.curvesPresetFileName,\n\t\t\t};\n\t\t} else if ('mixerPresetFileName' in desc) {\n\t\t\ttarget.adjustment = {\n\t\t\t\t...target.adjustment as CurvesAdjustment,\n\t\t\t\tpresetKind: desc.mixerPresetKind,\n\t\t\t\tpresetFileName: desc.mixerPresetFileName,\n\t\t\t};\n\t\t} else {\n\t\t\ttarget.adjustment = {\n\t\t\t\ttype: 'brightness/contrast',\n\t\t\t\tbrightness: desc.Brgh,\n\t\t\t\tcontrast: desc.Cntr,\n\t\t\t\tmeanValue: desc.means,\n\t\t\t\tuseLegacy: !!desc.useLegacy,\n\t\t\t\tlabColorOnly: !!desc['Lab '],\n\t\t\t\tauto: !!desc.Auto,\n\t\t\t};\n\t\t}\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst info = target.adjustment!;\n\n\t\tif (info.type === 'levels' || info.type === 'exposure' || info.type === 'hue/saturation') {\n\t\t\tconst desc: PresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tpresetKind: info.presetKind ?? 1,\n\t\t\t\tpresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'curves') {\n\t\t\tconst desc: CurvesPresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tcurvesPresetKind: info.presetKind ?? 1,\n\t\t\t\tcurvesPresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'channel mixer') {\n\t\t\tconst desc: MixerPresetDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tmixerPresetKind: info.presetKind ?? 1,\n\t\t\t\tmixerPresetFileName: info.presetFileName || '',\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else if (info.type === 'brightness/contrast') {\n\t\t\tconst desc: BrightnessContrastDescriptor = {\n\t\t\t\tVrsn: 1,\n\t\t\t\tBrgh: info.brightness || 0,\n\t\t\t\tCntr: info.contrast || 0,\n\t\t\t\tmeans: info.meanValue ?? 127,\n\t\t\t\t'Lab ': !!info.labColorOnly,\n\t\t\t\tuseLegacy: !!info.useLegacy,\n\t\t\t\tAuto: !!info.auto,\n\t\t\t};\n\t\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t\t} else {\n\t\t\tthrow new Error('Unhandled CgEd case');\n\t\t}\n\t},\n);\n\naddHandler(\n\t'Txt2',\n\thasKey('engineData'),\n\t(reader, target, left) => {\n\t\tconst data = readBytes(reader, left());\n\t\ttarget.engineData = fromByteArray(data);\n\t\t// const engineData = parseEngineData(data);\n\t\t// console.log(require('util').inspect(engineData, false, 99, true));\n\t\t// require('fs').writeFileSync('resources/engineData2Simple.txt', require('util').inspect(engineData, false, 99, false), 'utf8');\n\t\t// require('fs').writeFileSync('test_data.json', JSON.stringify(ed, null, 2), 'utf8');\n\t},\n\t(writer, target) => {\n\t\tconst buffer = toByteArray(target.engineData!);\n\t\twriteBytes(writer, buffer);\n\t},\n);\n\naddHandler(\n\t'FMsk',\n\thasKey('filterMask'),\n\t(reader, target) => {\n\t\ttarget.filterMask = {\n\t\t\tcolorSpace: readColor(reader),\n\t\t\topacity: readUint16(reader) / 0xff,\n\t\t};\n\t},\n\t(writer, target) => {\n\t\twriteColor(writer, target.filterMask!.colorSpace);\n\t\twriteUint16(writer, clamp(target.filterMask!.opacity ?? 1, 0, 1) * 0xff);\n\t},\n);\n\ninterface ArtdDescriptor {\n\t'Cnt ': number;\n\tautoExpandOffset: { Hrzn: number; Vrtc: number; };\n\torigin: { Hrzn: number; Vrtc: number; };\n\tautoExpandEnabled: boolean;\n\tautoNestEnabled: boolean;\n\tautoPositionEnabled: boolean;\n\tshrinkwrapOnSaveEnabled: boolean;\n\tdocDefaultNewArtboardBackgroundColor: DescriptorColor;\n\tdocDefaultNewArtboardBackgroundType: number;\n}\n\naddHandler(\n\t'artd', // document-wide artboard info\n\ttarget => (target as Psd).artboards !== undefined,\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as ArtdDescriptor;\n\t\t(target as Psd).artboards = {\n\t\t\tcount: desc['Cnt '],\n\t\t\tautoExpandOffset: { horizontal: desc.autoExpandOffset.Hrzn, vertical: desc.autoExpandOffset.Vrtc },\n\t\t\torigin: { horizontal: desc.origin.Hrzn, vertical: desc.origin.Vrtc },\n\t\t\tautoExpandEnabled: desc.autoExpandEnabled,\n\t\t\tautoNestEnabled: desc.autoNestEnabled,\n\t\t\tautoPositionEnabled: desc.autoPositionEnabled,\n\t\t\tshrinkwrapOnSaveEnabled: desc.shrinkwrapOnSaveEnabled,\n\t\t\tdocDefaultNewArtboardBackgroundColor: parseColor(desc.docDefaultNewArtboardBackgroundColor),\n\t\t\tdocDefaultNewArtboardBackgroundType: desc.docDefaultNewArtboardBackgroundType,\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst artb = (target as Psd).artboards!;\n\t\tconst desc: ArtdDescriptor = {\n\t\t\t'Cnt ': artb.count,\n\t\t\tautoExpandOffset: artb.autoExpandOffset ? { Hrzn: artb.autoExpandOffset.horizontal, Vrtc: artb.autoExpandOffset.vertical } : { Hrzn: 0, Vrtc: 0 },\n\t\t\torigin: artb.origin ? { Hrzn: artb.origin.horizontal, Vrtc: artb.origin.vertical } : { Hrzn: 0, Vrtc: 0 },\n\t\t\tautoExpandEnabled: artb.autoExpandEnabled ?? true,\n\t\t\tautoNestEnabled: artb.autoNestEnabled ?? true,\n\t\t\tautoPositionEnabled: artb.autoPositionEnabled ?? true,\n\t\t\tshrinkwrapOnSaveEnabled: artb.shrinkwrapOnSaveEnabled ?? true,\n\t\t\tdocDefaultNewArtboardBackgroundColor: serializeColor(artb.docDefaultNewArtboardBackgroundColor),\n\t\t\tdocDefaultNewArtboardBackgroundType: artb.docDefaultNewArtboardBackgroundType ?? 1,\n\t\t};\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc, 'artd');\n\t},\n);\n\ninterface EffectDescriptor extends Partial<DescriptorGradientContent>, Partial<DescriptorPatternContent> {\n\tenab?: boolean;\n\tStyl: string;\n\tPntT?: string;\n\t'Md  '?: string;\n\tOpct?: DescriptorUnitsValue;\n\t'Sz  '?: DescriptorUnitsValue;\n\t'Clr '?: DescriptorColor;\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\toverprint?: boolean;\n}\n\ninterface Lfx2Descriptor {\n\t'Scl '?: DescriptorUnitsValue;\n\tmasterFXSwitch?: boolean;\n\tDrSh?: EffectDescriptor;\n\tIrSh?: EffectDescriptor;\n\tOrGl?: EffectDescriptor;\n\tIrGl?: EffectDescriptor;\n\tebbl?: EffectDescriptor;\n\tSoFi?: EffectDescriptor;\n\tpatternFill?: EffectDescriptor;\n\tGrFl?: EffectDescriptor;\n\tChFX?: EffectDescriptor;\n\tFrFX?: EffectDescriptor;\n}\n\ninterface LmfxDescriptor {\n\t'Scl '?: DescriptorUnitsValue;\n\tmasterFXSwitch?: boolean;\n\tnumModifyingFX?: number;\n\tOrGl?: EffectDescriptor;\n\tIrGl?: EffectDescriptor;\n\tebbl?: EffectDescriptor;\n\tChFX?: EffectDescriptor;\n\tdropShadowMulti?: EffectDescriptor[];\n\tinnerShadowMulti?: EffectDescriptor[];\n\tsolidFillMulti?: EffectDescriptor[];\n\tgradientFillMulti?: EffectDescriptor[];\n\tframeFXMulti?: EffectDescriptor[];\n\tpatternFill?: EffectDescriptor; // ???\n}\n\nfunction parseFxObject(fx: EffectDescriptor) {\n\tconst stroke: LayerEffectStroke = {\n\t\tenabled: !!fx.enab,\n\t\tposition: FStl.decode(fx.Styl),\n\t\tfillType: FrFl.decode(fx.PntT!),\n\t\tblendMode: BlnM.decode(fx['Md  ']!),\n\t\topacity: parsePercent(fx.Opct),\n\t\tsize: parseUnits(fx['Sz  ']!),\n\t};\n\n\tif (fx.present !== undefined) stroke.present = fx.present;\n\tif (fx.showInDialog !== undefined) stroke.showInDialog = fx.showInDialog;\n\tif (fx.overprint !== undefined) stroke.overprint = fx.overprint;\n\tif (fx['Clr ']) stroke.color = parseColor(fx['Clr ']);\n\tif (fx.Grad) stroke.gradient = parseGradientContent(fx as any);\n\tif (fx.Ptrn) stroke.pattern = parsePatternContent(fx as any);\n\n\treturn stroke;\n}\n\nfunction serializeFxObject(stroke: LayerEffectStroke) {\n\tlet FrFX: EffectDescriptor = {} as any;\n\tFrFX.enab = !!stroke.enabled;\n\tif (stroke.present !== undefined) FrFX.present = !!stroke.present;\n\tif (stroke.showInDialog !== undefined) FrFX.showInDialog = !!stroke.showInDialog;\n\tFrFX.Styl = FStl.encode(stroke.position);\n\tFrFX.PntT = FrFl.encode(stroke.fillType);\n\tFrFX['Md  '] = BlnM.encode(stroke.blendMode);\n\tFrFX.Opct = unitsPercent(stroke.opacity);\n\tFrFX['Sz  '] = unitsValue(stroke.size, 'size');\n\tif (stroke.color) FrFX['Clr '] = serializeColor(stroke.color);\n\tif (stroke.gradient) FrFX = { ...FrFX, ...serializeGradientContent(stroke.gradient) };\n\tif (stroke.pattern) FrFX = { ...FrFX, ...serializePatternContent(stroke.pattern) };\n\tif (stroke.overprint !== undefined) FrFX.overprint = !!stroke.overprint;\n\treturn FrFX;\n}\n\nfunction parseEffects(info: Lfx2Descriptor & LmfxDescriptor, log: boolean) {\n\tconst effects: LayerEffectsInfo = {};\n\tif (!info.masterFXSwitch) effects.disabled = true;\n\tif (info['Scl ']) effects.scale = parsePercent(info['Scl ']);\n\tif (info.DrSh) effects.dropShadow = [parseEffectObject(info.DrSh, log)];\n\tif (info.dropShadowMulti) effects.dropShadow = info.dropShadowMulti.map(i => parseEffectObject(i, log));\n\tif (info.IrSh) effects.innerShadow = [parseEffectObject(info.IrSh, log)];\n\tif (info.innerShadowMulti) effects.innerShadow = info.innerShadowMulti.map(i => parseEffectObject(i, log));\n\tif (info.OrGl) effects.outerGlow = parseEffectObject(info.OrGl, log);\n\tif (info.IrGl) effects.innerGlow = parseEffectObject(info.IrGl, log);\n\tif (info.ebbl) effects.bevel = parseEffectObject(info.ebbl, log);\n\tif (info.SoFi) effects.solidFill = [parseEffectObject(info.SoFi, log)];\n\tif (info.solidFillMulti) effects.solidFill = info.solidFillMulti.map(i => parseEffectObject(i, log));\n\tif (info.patternFill) effects.patternOverlay = parseEffectObject(info.patternFill, log);\n\tif (info.GrFl) effects.gradientOverlay = [parseEffectObject(info.GrFl, log)];\n\tif (info.gradientFillMulti) effects.gradientOverlay = info.gradientFillMulti.map(i => parseEffectObject(i, log));\n\tif (info.ChFX) effects.satin = parseEffectObject(info.ChFX, log);\n\tif (info.FrFX) effects.stroke = [parseFxObject(info.FrFX)];\n\tif (info.frameFXMulti) effects.stroke = info.frameFXMulti.map(i => parseFxObject(i));\n\treturn effects;\n}\n\nfunction serializeEffects(e: LayerEffectsInfo, log: boolean, multi: boolean) {\n\tconst info: Lfx2Descriptor & LmfxDescriptor = multi ? {\n\t\t'Scl ': unitsPercent(e.scale ?? 1),\n\t\tmasterFXSwitch: !e.disabled,\n\t} : {\n\t\tmasterFXSwitch: !e.disabled,\n\t\t'Scl ': unitsPercent(e.scale ?? 1),\n\t};\n\n\tconst arrayKeys: (keyof LayerEffectsInfo)[] = ['dropShadow', 'innerShadow', 'solidFill', 'gradientOverlay', 'stroke'];\n\tfor (const key of arrayKeys) {\n\t\tif (e[key] && !Array.isArray(e[key])) throw new Error(`${key} should be an array`);\n\t}\n\n\tif (e.dropShadow?.[0] && !multi) info.DrSh = serializeEffectObject(e.dropShadow[0], 'dropShadow', log);\n\tif (e.dropShadow?.[0] && multi) info.dropShadowMulti = e.dropShadow.map(i => serializeEffectObject(i, 'dropShadow', log));\n\tif (e.innerShadow?.[0] && !multi) info.IrSh = serializeEffectObject(e.innerShadow[0], 'innerShadow', log);\n\tif (e.innerShadow?.[0] && multi) info.innerShadowMulti = e.innerShadow.map(i => serializeEffectObject(i, 'innerShadow', log));\n\tif (e.outerGlow) info.OrGl = serializeEffectObject(e.outerGlow, 'outerGlow', log);\n\tif (e.solidFill?.[0] && multi) info.solidFillMulti = e.solidFill.map(i => serializeEffectObject(i, 'solidFill', log));\n\tif (e.gradientOverlay?.[0] && multi) info.gradientFillMulti = e.gradientOverlay.map(i => serializeEffectObject(i, 'gradientOverlay', log));\n\tif (e.stroke?.[0] && multi) info.frameFXMulti = e.stroke.map(i => serializeFxObject(i));\n\tif (e.innerGlow) info.IrGl = serializeEffectObject(e.innerGlow, 'innerGlow', log);\n\tif (e.bevel) info.ebbl = serializeEffectObject(e.bevel, 'bevel', log);\n\tif (e.solidFill?.[0] && !multi) info.SoFi = serializeEffectObject(e.solidFill[0], 'solidFill', log);\n\tif (e.patternOverlay) info.patternFill = serializeEffectObject(e.patternOverlay, 'patternOverlay', log);\n\tif (e.gradientOverlay?.[0] && !multi) info.GrFl = serializeEffectObject(e.gradientOverlay[0], 'gradientOverlay', log);\n\tif (e.satin) info.ChFX = serializeEffectObject(e.satin, 'satin', log);\n\tif (e.stroke?.[0] && !multi) info.FrFX = serializeFxObject(e.stroke?.[0]);\n\n\tif (multi) {\n\t\tinfo.numModifyingFX = 0;\n\n\t\tfor (const key of Object.keys(e)) {\n\t\t\tconst value = (e as any)[key];\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tfor (const effect of value) {\n\t\t\t\t\tif (effect.enabled) info.numModifyingFX++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn info;\n}\n\nexport function hasMultiEffects(effects: LayerEffectsInfo) {\n\treturn Object.keys(effects).map(key => (effects as any)[key]).some(v => Array.isArray(v) && v.length > 1);\n}\n\naddHandler(\n\t'lfx2',\n\ttarget => target.effects !== undefined && !hasMultiEffects(target.effects),\n\t(reader, target, left, _, options) => {\n\t\tconst version = readUint32(reader);\n\t\tif (version !== 0) throw new Error(`Invalid lfx2 version`);\n\n\t\tconst desc: Lfx2Descriptor = readVersionAndDescriptor(reader);\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\n\t\t// TODO: don't discard if we got it from lmfx\n\t\t// discard if read in 'lrFX' section\n\t\ttarget.effects = parseEffects(desc, !!options.logMissingFeatures);\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target, _, options) => {\n\t\tconst desc = serializeEffects(target.effects!, !!options.logMissingFeatures, false);\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\n\t\twriteUint32(writer, 0); // version\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\ninterface CinfDescriptor {\n\tVrsn: { major: number; minor: number; fix: number; };\n\tpsVersion?: { major: number; minor: number; fix: number; };\n\tdescription: string;\n\treason: string;\n\tEngn: string; // 'Engn.compCore';\n\tenableCompCore: string; // 'enable.feature';\n\tenableCompCoreGPU: string; // 'enable.feature';\n\tenableCompCoreThreads?: string; // 'enable.feature';\n\tcompCoreSupport: string; // 'reason.supported';\n\tcompCoreGPUSupport: string; // 'reason.featureDisabled';\n}\n\naddHandler(\n\t'cinf',\n\thasKey('compositorUsed'),\n\t(reader, target, left) => {\n\t\tconst desc = readVersionAndDescriptor(reader) as CinfDescriptor;\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\n\t\ttarget.compositorUsed = {\n\t\t\tdescription: desc.description,\n\t\t\treason: desc.reason,\n\t\t\tengine: desc.Engn.split('.')[1],\n\t\t\tenableCompCore: desc.enableCompCore.split('.')[1],\n\t\t\tenableCompCoreGPU: desc.enableCompCoreGPU.split('.')[1],\n\t\t\tcompCoreSupport: desc.compCoreSupport.split('.')[1],\n\t\t\tcompCoreGPUSupport: desc.compCoreGPUSupport.split('.')[1],\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst cinf = target.compositorUsed!;\n\t\tconst desc: CinfDescriptor = {\n\t\t\tVrsn: { major: 1, minor: 0, fix: 0 }, // TEMP\n\t\t\t// psVersion: { major: 22, minor: 3, fix: 1 }, // TESTING\n\t\t\tdescription: cinf.description,\n\t\t\treason: cinf.reason,\n\t\t\tEngn: `Engn.${cinf.engine}`,\n\t\t\tenableCompCore: `enable.${cinf.enableCompCore}`,\n\t\t\tenableCompCoreGPU: `enable.${cinf.enableCompCoreGPU}`,\n\t\t\t// enableCompCoreThreads: `enable.feature`, // TESTING\n\t\t\tcompCoreSupport: `reason.${cinf.compCoreSupport}`,\n\t\t\tcompCoreGPUSupport: `reason.${cinf.compCoreGPUSupport}`,\n\t\t};\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\n// extension settings ?, ignore it\naddHandler(\n\t'extn',\n\ttarget => (target as any)._extn !== undefined,\n\t(reader, target) => {\n\t\tconst desc: ExtensionDesc = readVersionAndDescriptor(reader);\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\n\t\tif (MOCK_HANDLERS) (target as any)._extn = desc;\n\t},\n\t(writer, target) => {\n\t\t// TODO: need to add correct types for desc fields (resources/src.psd)\n\t\tif (MOCK_HANDLERS) writeVersionAndDescriptor(writer, '', 'null', (target as any)._extn);\n\t},\n);\n\naddHandler(\n\t'iOpa',\n\thasKey('fillOpacity'),\n\t(reader, target) => {\n\t\ttarget.fillOpacity = readUint8(reader) / 0xff;\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.fillOpacity! * 0xff);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\naddHandler(\n\t'tsly',\n\thasKey('transparencyShapesLayer'),\n\t(reader, target) => {\n\t\ttarget.transparencyShapesLayer = !!readUint8(reader);\n\t\tskipBytes(reader, 3);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.transparencyShapesLayer ? 1 : 0);\n\t\twriteZeros(writer, 3);\n\t},\n);\n\n// descriptor helpers\n\nfunction parseGradient(grad: DesciptorGradient): EffectSolidGradient | EffectNoiseGradient {\n\tif (grad.GrdF === 'GrdF.CstS') {\n\t\tconst samples: number = grad.Intr || 4096;\n\n\t\treturn {\n\t\t\ttype: 'solid',\n\t\t\tname: grad['Nm  '],\n\t\t\tsmoothness: grad.Intr / 4096,\n\t\t\tcolorStops: grad.Clrs.map(s => ({\n\t\t\t\tcolor: parseColor(s['Clr ']),\n\t\t\t\tlocation: s.Lctn / samples,\n\t\t\t\tmidpoint: s.Mdpn / 100,\n\t\t\t})),\n\t\t\topacityStops: grad.Trns.map(s => ({\n\t\t\t\topacity: parsePercent(s.Opct),\n\t\t\t\tlocation: s.Lctn / samples,\n\t\t\t\tmidpoint: s.Mdpn / 100,\n\t\t\t})),\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\ttype: 'noise',\n\t\t\tname: grad['Nm  '],\n\t\t\troughness: grad.Smth / 4096,\n\t\t\tcolorModel: ClrS.decode(grad.ClrS),\n\t\t\trandomSeed: grad.RndS,\n\t\t\trestrictColors: !!grad.VctC,\n\t\t\taddTransparency: !!grad.ShTr,\n\t\t\tmin: grad['Mnm '].map(x => x / 100),\n\t\t\tmax: grad['Mxm '].map(x => x / 100),\n\t\t};\n\t}\n}\n\nfunction serializeGradient(grad: EffectSolidGradient | EffectNoiseGradient): DesciptorGradient {\n\tif (grad.type === 'solid') {\n\t\tconst samples = Math.round((grad.smoothness ?? 1) * 4096);\n\t\treturn {\n\t\t\t'Nm  ': grad.name || '',\n\t\t\tGrdF: 'GrdF.CstS',\n\t\t\tIntr: samples,\n\t\t\tClrs: grad.colorStops.map(s => ({\n\t\t\t\t'Clr ': serializeColor(s.color),\n\t\t\t\tType: 'Clry.UsrS',\n\t\t\t\tLctn: Math.round(s.location * samples),\n\t\t\t\tMdpn: Math.round((s.midpoint ?? 0.5) * 100),\n\t\t\t})),\n\t\t\tTrns: grad.opacityStops.map(s => ({\n\t\t\t\tOpct: unitsPercent(s.opacity),\n\t\t\t\tLctn: Math.round(s.location * samples),\n\t\t\t\tMdpn: Math.round((s.midpoint ?? 0.5) * 100),\n\t\t\t})),\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tGrdF: 'GrdF.ClNs',\n\t\t\t'Nm  ': grad.name || '',\n\t\t\tShTr: !!grad.addTransparency,\n\t\t\tVctC: !!grad.restrictColors,\n\t\t\tClrS: ClrS.encode(grad.colorModel),\n\t\t\tRndS: grad.randomSeed || 0,\n\t\t\tSmth: Math.round((grad.roughness ?? 1) * 4096),\n\t\t\t'Mnm ': (grad.min || [0, 0, 0, 0]).map(x => x * 100),\n\t\t\t'Mxm ': (grad.max || [1, 1, 1, 1]).map(x => x * 100),\n\t\t};\n\t}\n}\n\nfunction parseGradientContent(descriptor: DescriptorGradientContent) {\n\tconst result = parseGradient(descriptor.Grad) as (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo;\n\tresult.style = GrdT.decode(descriptor.Type);\n\tif (descriptor.Dthr !== undefined) result.dither = descriptor.Dthr;\n\tif (descriptor.Rvrs !== undefined) result.reverse = descriptor.Rvrs;\n\tif (descriptor.Angl !== undefined) result.angle = parseAngle(descriptor.Angl);\n\tif (descriptor['Scl '] !== undefined) result.scale = parsePercent(descriptor['Scl ']);\n\tif (descriptor.Algn !== undefined) result.align = descriptor.Algn;\n\tif (descriptor.Ofst !== undefined) {\n\t\tresult.offset = {\n\t\t\tx: parsePercent(descriptor.Ofst.Hrzn),\n\t\t\ty: parsePercent(descriptor.Ofst.Vrtc)\n\t\t};\n\t}\n\treturn result;\n}\n\nfunction parsePatternContent(descriptor: DescriptorPatternContent) {\n\tconst result: EffectPattern & ExtraPatternInfo = {\n\t\tname: descriptor.Ptrn['Nm  '],\n\t\tid: descriptor.Ptrn.Idnt,\n\t};\n\tif (descriptor.Lnkd !== undefined) result.linked = descriptor.Lnkd;\n\tif (descriptor.phase !== undefined) result.phase = { x: descriptor.phase.Hrzn, y: descriptor.phase.Vrtc };\n\treturn result;\n}\n\nfunction parseVectorContent(descriptor: DescriptorVectorContent): VectorContent {\n\tif ('Grad' in descriptor) {\n\t\treturn parseGradientContent(descriptor);\n\t} else if ('Ptrn' in descriptor) {\n\t\treturn { type: 'pattern', ...parsePatternContent(descriptor) };\n\t} else if ('Clr ' in descriptor) {\n\t\treturn { type: 'color', color: parseColor(descriptor['Clr ']) };\n\t} else {\n\t\tthrow new Error('Invalid vector content');\n\t}\n}\n\nfunction serializeGradientContent(content: (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo) {\n\tconst result: DescriptorGradientContent = {} as any;\n\tif (content.dither !== undefined) result.Dthr = content.dither;\n\tif (content.reverse !== undefined) result.Rvrs = content.reverse;\n\tif (content.angle !== undefined) result.Angl = unitsAngle(content.angle);\n\tresult.Type = GrdT.encode(content.style);\n\tif (content.align !== undefined) result.Algn = content.align;\n\tif (content.scale !== undefined) result['Scl '] = unitsPercent(content.scale);\n\tif (content.offset) {\n\t\tresult.Ofst = {\n\t\t\tHrzn: unitsPercent(content.offset.x),\n\t\t\tVrtc: unitsPercent(content.offset.y),\n\t\t};\n\t}\n\tresult.Grad = serializeGradient(content);\n\treturn result;\n}\n\nfunction serializePatternContent(content: EffectPattern & ExtraPatternInfo) {\n\tconst result: DescriptorPatternContent = {\n\t\tPtrn: {\n\t\t\t'Nm  ': content.name || '',\n\t\t\tIdnt: content.id || '',\n\t\t}\n\t};\n\tif (content.linked !== undefined) result.Lnkd = !!content.linked;\n\tif (content.phase !== undefined) result.phase = { Hrzn: content.phase.x, Vrtc: content.phase.y };\n\treturn result;\n}\n\nfunction serializeVectorContent(content: VectorContent): { descriptor: DescriptorVectorContent; key: string; } {\n\tif (content.type === 'color') {\n\t\treturn { key: 'SoCo', descriptor: { 'Clr ': serializeColor(content.color) } };\n\t} else if (content.type === 'pattern') {\n\t\treturn { key: 'PtFl', descriptor: serializePatternContent(content) };\n\t} else {\n\t\treturn { key: 'GdFl', descriptor: serializeGradientContent(content) };\n\t}\n}\n\nfunction parseColor(color: DescriptorColor): Color {\n\tif ('H   ' in color) {\n\t\treturn { h: parsePercentOrAngle(color['H   ']), s: color.Strt, b: color.Brgh };\n\t} else if ('Rd  ' in color) {\n\t\treturn { r: color['Rd  '], g: color['Grn '], b: color['Bl  '] };\n\t} else if ('Cyn ' in color) {\n\t\treturn { c: color['Cyn '], m: color.Mgnt, y: color['Ylw '], k: color.Blck };\n\t} else if ('Gry ' in color) {\n\t\treturn { k: color['Gry '] };\n\t} else if ('Lmnc' in color) {\n\t\treturn { l: color.Lmnc, a: color['A   '], b: color['B   '] };\n\t} else {\n\t\tthrow new Error('Unsupported color descriptor');\n\t}\n}\n\nfunction serializeColor(color: Color | undefined): DescriptorColor {\n\tif (!color) {\n\t\treturn { 'Rd  ': 0, 'Grn ': 0, 'Bl  ': 0 };\n\t} else if ('r' in color) {\n\t\treturn { 'Rd  ': color.r || 0, 'Grn ': color.g || 0, 'Bl  ': color.b || 0 };\n\t} else if ('h' in color) {\n\t\treturn { 'H   ': unitsAngle(color.h * 360), Strt: color.s || 0, Brgh: color.b || 0 };\n\t} else if ('c' in color) {\n\t\treturn { 'Cyn ': color.c || 0, Mgnt: color.m || 0, 'Ylw ': color.y || 0, Blck: color.k || 0 };\n\t} else if ('l' in color) {\n\t\treturn { Lmnc: color.l || 0, 'A   ': color.a || 0, 'B   ': color.b || 0 };\n\t} else if ('k' in color) {\n\t\treturn { 'Gry ': color.k };\n\t} else {\n\t\tthrow new Error('Invalid color value');\n\t}\n}\n\ntype AllEffects = LayerEffectShadow & LayerEffectsOuterGlow & LayerEffectStroke &\n\tLayerEffectInnerGlow & LayerEffectBevel & LayerEffectSolidFill &\n\tLayerEffectPatternOverlay & LayerEffectSatin & LayerEffectGradientOverlay;\n\nfunction parseEffectObject(obj: any, reportErrors: boolean) {\n\tconst result: AllEffects = {} as any;\n\n\tfor (const key of Object.keys(obj)) {\n\t\tconst val = obj[key];\n\n\t\tswitch (key) {\n\t\t\tcase 'enab': result.enabled = !!val; break;\n\t\t\tcase 'uglg': result.useGlobalLight = !!val; break;\n\t\t\tcase 'AntA': result.antialiased = !!val; break;\n\t\t\tcase 'Algn': result.align = !!val; break;\n\t\t\tcase 'Dthr': result.dither = !!val; break;\n\t\t\tcase 'Invr': result.invert = !!val; break;\n\t\t\tcase 'Rvrs': result.reverse = !!val; break;\n\t\t\tcase 'Clr ': result.color = parseColor(val); break;\n\t\t\tcase 'hglC': result.highlightColor = parseColor(val); break;\n\t\t\tcase 'sdwC': result.shadowColor = parseColor(val); break;\n\t\t\tcase 'Styl': result.position = FStl.decode(val); break;\n\t\t\tcase 'Md  ': result.blendMode = BlnM.decode(val); break;\n\t\t\tcase 'hglM': result.highlightBlendMode = BlnM.decode(val); break;\n\t\t\tcase 'sdwM': result.shadowBlendMode = BlnM.decode(val); break;\n\t\t\tcase 'bvlS': result.style = BESl.decode(val); break;\n\t\t\tcase 'bvlD': result.direction = BESs.decode(val); break;\n\t\t\tcase 'bvlT': result.technique = bvlT.decode(val) as any; break;\n\t\t\tcase 'GlwT': result.technique = BETE.decode(val) as any; break;\n\t\t\tcase 'glwS': result.source = IGSr.decode(val); break;\n\t\t\tcase 'Type': result.type = GrdT.decode(val); break;\n\t\t\tcase 'Opct': result.opacity = parsePercent(val); break;\n\t\t\tcase 'hglO': result.highlightOpacity = parsePercent(val); break;\n\t\t\tcase 'sdwO': result.shadowOpacity = parsePercent(val); break;\n\t\t\tcase 'lagl': result.angle = parseAngle(val); break;\n\t\t\tcase 'Angl': result.angle = parseAngle(val); break;\n\t\t\tcase 'Lald': result.altitude = parseAngle(val); break;\n\t\t\tcase 'Sftn': result.soften = parseUnits(val); break;\n\t\t\tcase 'srgR': result.strength = parsePercent(val); break;\n\t\t\tcase 'blur': result.size = parseUnits(val); break;\n\t\t\tcase 'Nose': result.noise = parsePercent(val); break;\n\t\t\tcase 'Inpr': result.range = parsePercent(val); break;\n\t\t\tcase 'Ckmt': result.choke = parseUnits(val); break;\n\t\t\tcase 'ShdN': result.jitter = parsePercent(val); break;\n\t\t\tcase 'Dstn': result.distance = parseUnits(val); break;\n\t\t\tcase 'Scl ': result.scale = parsePercent(val); break;\n\t\t\tcase 'Ptrn': result.pattern = { name: val['Nm  '], id: val.Idnt }; break;\n\t\t\tcase 'phase': result.phase = { x: val.Hrzn, y: val.Vrtc }; break;\n\t\t\tcase 'Ofst': result.offset = { x: parsePercent(val.Hrzn), y: parsePercent(val.Vrtc) }; break;\n\t\t\tcase 'MpgS':\n\t\t\tcase 'TrnS':\n\t\t\t\tresult.contour = {\n\t\t\t\t\tname: val['Nm  '],\n\t\t\t\t\tcurve: (val['Crv '] as any[]).map(p => ({ x: p.Hrzn, y: p.Vrtc })),\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase 'Grad': result.gradient = parseGradient(val); break;\n\t\t\tcase 'useTexture':\n\t\t\tcase 'useShape':\n\t\t\tcase 'layerConceals':\n\t\t\tcase 'present':\n\t\t\tcase 'showInDialog':\n\t\t\tcase 'antialiasGloss': result[key] = val; break;\n\t\t\tdefault:\n\t\t\t\treportErrors && console.log(`Invalid effect key: '${key}':`, val);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction serializeEffectObject(obj: any, objName: string, reportErrors: boolean) {\n\tconst result: any = {};\n\n\tfor (const objKey of Object.keys(obj)) {\n\t\tconst key: keyof AllEffects = objKey as any;\n\t\tconst val = obj[key];\n\n\t\tswitch (key) {\n\t\t\tcase 'enabled': result.enab = !!val; break;\n\t\t\tcase 'useGlobalLight': result.uglg = !!val; break;\n\t\t\tcase 'antialiased': result.AntA = !!val; break;\n\t\t\tcase 'align': result.Algn = !!val; break;\n\t\t\tcase 'dither': result.Dthr = !!val; break;\n\t\t\tcase 'invert': result.Invr = !!val; break;\n\t\t\tcase 'reverse': result.Rvrs = !!val; break;\n\t\t\tcase 'color': result['Clr '] = serializeColor(val); break;\n\t\t\tcase 'highlightColor': result.hglC = serializeColor(val); break;\n\t\t\tcase 'shadowColor': result.sdwC = serializeColor(val); break;\n\t\t\tcase 'position': result.Styl = FStl.encode(val); break;\n\t\t\tcase 'blendMode': result['Md  '] = BlnM.encode(val); break;\n\t\t\tcase 'highlightBlendMode': result.hglM = BlnM.encode(val); break;\n\t\t\tcase 'shadowBlendMode': result.sdwM = BlnM.encode(val); break;\n\t\t\tcase 'style': result.bvlS = BESl.encode(val); break;\n\t\t\tcase 'direction': result.bvlD = BESs.encode(val); break;\n\t\t\tcase 'technique':\n\t\t\t\tif (objName === 'bevel') {\n\t\t\t\t\tresult.bvlT = bvlT.encode(val);\n\t\t\t\t} else {\n\t\t\t\t\tresult.GlwT = BETE.encode(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'source': result.glwS = IGSr.encode(val); break;\n\t\t\tcase 'type': result.Type = GrdT.encode(val); break;\n\t\t\tcase 'opacity': result.Opct = unitsPercent(val); break;\n\t\t\tcase 'highlightOpacity': result.hglO = unitsPercent(val); break;\n\t\t\tcase 'shadowOpacity': result.sdwO = unitsPercent(val); break;\n\t\t\tcase 'angle':\n\t\t\t\tif (objName === 'gradientOverlay') {\n\t\t\t\t\tresult.Angl = unitsAngle(val);\n\t\t\t\t} else {\n\t\t\t\t\tresult.lagl = unitsAngle(val);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'altitude': result.Lald = unitsAngle(val); break;\n\t\t\tcase 'soften': result.Sftn = unitsValue(val, key); break;\n\t\t\tcase 'strength': result.srgR = unitsPercent(val); break;\n\t\t\tcase 'size': result.blur = unitsValue(val, key); break;\n\t\t\tcase 'noise': result.Nose = unitsPercent(val); break;\n\t\t\tcase 'range': result.Inpr = unitsPercent(val); break;\n\t\t\tcase 'choke': result.Ckmt = unitsValue(val, key); break;\n\t\t\tcase 'jitter': result.ShdN = unitsPercent(val); break;\n\t\t\tcase 'distance': result.Dstn = unitsValue(val, key); break;\n\t\t\tcase 'scale': result['Scl '] = unitsPercent(val); break;\n\t\t\tcase 'pattern': result.Ptrn = { 'Nm  ': val.name, Idnt: val.id }; break;\n\t\t\tcase 'phase': result.phase = { Hrzn: val.x, Vrtc: val.y }; break;\n\t\t\tcase 'offset': result.Ofst = { Hrzn: unitsPercent(val.x), Vrtc: unitsPercent(val.y) }; break;\n\t\t\tcase 'contour': {\n\t\t\t\tresult[objName === 'satin' ? 'MpgS' : 'TrnS'] = {\n\t\t\t\t\t'Nm  ': (val as EffectContour).name,\n\t\t\t\t\t'Crv ': (val as EffectContour).curve.map(p => ({ Hrzn: p.x, Vrtc: p.y })),\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'gradient': result.Grad = serializeGradient(val); break;\n\t\t\tcase 'useTexture':\n\t\t\tcase 'useShape':\n\t\t\tcase 'layerConceals':\n\t\t\tcase 'present':\n\t\t\tcase 'showInDialog':\n\t\t\tcase 'antialiasGloss':\n\t\t\t\tresult[key] = val;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treportErrors && console.log(`Invalid effect key: '${key}' value:`, val);\n\t\t}\n\t}\n\n\treturn result;\n}\n","import { createEnum } from './helpers';\r\nimport {\r\n\tAntiAlias, BevelDirection, BevelStyle, BevelTechnique, BlendMode, GlowSource, GlowTechnique, GradientStyle,\r\n\tLineAlignment, LineCapType, LineJoinType, Orientation, TextGridding, Units, UnitsValue, WarpStyle\r\n} from './psd';\r\nimport {\r\n\tPsdReader, readSignature, readUnicodeString, readUint32, readUint8, readFloat64,\r\n\treadBytes, readAsciiString, readInt32, readFloat32, readInt32LE, readUnicodeStringWithLength\r\n} from './psdReader';\r\nimport {\r\n\tPsdWriter, writeSignature, writeBytes, writeUint32, writeFloat64, writeUint8,\r\n\twriteUnicodeStringWithPadding, writeInt32, writeFloat32, writeUnicodeString\r\n} from './psdWriter';\r\n\r\ninterface Dict { [key: string]: string; }\r\ninterface NameClassID { name: string; classID: string; }\r\ninterface ExtTypeDict { [key: string]: NameClassID; }\r\n\r\nfunction revMap(map: Dict) {\r\n\tconst result: Dict = {};\r\n\tObject.keys(map).forEach(key => result[map[key]] = key);\r\n\treturn result;\r\n}\r\n\r\nconst unitsMap: Dict = {\r\n\t'#Ang': 'Angle',\r\n\t'#Rsl': 'Density',\r\n\t'#Rlt': 'Distance',\r\n\t'#Nne': 'None',\r\n\t'#Prc': 'Percent',\r\n\t'#Pxl': 'Pixels',\r\n\t'#Mlm': 'Millimeters',\r\n\t'#Pnt': 'Points',\r\n\t'RrPi': 'Picas',\r\n\t'RrIn': 'Inches',\r\n\t'RrCm': 'Centimeters',\r\n};\r\n\r\nconst unitsMapRev = revMap(unitsMap);\r\nlet logErrors = false;\r\n\r\nexport function setLogErrors(value: boolean) {\r\n\tlogErrors = value;\r\n}\r\n\r\nfunction makeType(name: string, classID: string) {\r\n\treturn { name, classID };\r\n}\r\n\r\nconst fieldToExtType: ExtTypeDict = {\r\n\tstrokeStyleContent: makeType('', 'solidColorLayer'),\r\n\t// printProofSetup: makeType('校样设置', 'proofSetup'), // TESTING\r\n\tprintProofSetup: makeType('Proof Setup', 'proofSetup'),\r\n\tpatternFill: makeType('', 'patternFill'),\r\n\tGrad: makeType('Gradient', 'Grdn'),\r\n\tebbl: makeType('', 'ebbl'),\r\n\tSoFi: makeType('', 'SoFi'),\r\n\tGrFl: makeType('', 'GrFl'),\r\n\tsdwC: makeType('', 'RGBC'),\r\n\thglC: makeType('', 'RGBC'),\r\n\t'Clr ': makeType('', 'RGBC'),\r\n\t'tintColor': makeType('', 'RGBC'),\r\n\tOfst: makeType('', 'Pnt '),\r\n\tChFX: makeType('', 'ChFX'),\r\n\tMpgS: makeType('', 'ShpC'),\r\n\tDrSh: makeType('', 'DrSh'),\r\n\tIrSh: makeType('', 'IrSh'),\r\n\tOrGl: makeType('', 'OrGl'),\r\n\tIrGl: makeType('', 'IrGl'),\r\n\tTrnS: makeType('', 'ShpC'),\r\n\tPtrn: makeType('', 'Ptrn'),\r\n\tFrFX: makeType('', 'FrFX'),\r\n\tphase: makeType('', 'Pnt '),\r\n\tframeStep: makeType('', 'null'),\r\n\tduration: makeType('', 'null'),\r\n\tbounds: makeType('', 'Rctn'),\r\n\tcustomEnvelopeWarp: makeType('', 'customEnvelopeWarp'),\r\n\twarp: makeType('', 'warp'),\r\n\t'Sz  ': makeType('', 'Pnt '),\r\n\torigin: makeType('', 'Pnt '),\r\n\tautoExpandOffset: makeType('', 'Pnt '),\r\n\tkeyOriginShapeBBox: makeType('', 'unitRect'),\r\n\tVrsn: makeType('', 'null'),\r\n\tpsVersion: makeType('', 'null'),\r\n\tdocDefaultNewArtboardBackgroundColor: makeType('', 'RGBC'),\r\n\tartboardRect: makeType('', 'classFloatRect'),\r\n\tkeyOriginRRectRadii: makeType('', 'radii'),\r\n\tkeyOriginBoxCorners: makeType('', 'null'),\r\n\trectangleCornerA: makeType('', 'Pnt '),\r\n\trectangleCornerB: makeType('', 'Pnt '),\r\n\trectangleCornerC: makeType('', 'Pnt '),\r\n\trectangleCornerD: makeType('', 'Pnt '),\r\n\tcompInfo: makeType('', 'null'),\r\n\tTrnf: makeType('Transform', 'Trnf'),\r\n\tquiltWarp: makeType('', 'quiltWarp'),\r\n\tgeneratorSettings: makeType('', 'null'),\r\n\tcrema: makeType('', 'null'),\r\n};\r\n\r\nconst fieldToArrayExtType: ExtTypeDict = {\r\n\t'Crv ': makeType('', 'CrPt'),\r\n\tClrs: makeType('', 'Clrt'),\r\n\tTrns: makeType('', 'TrnS'),\r\n\tkeyDescriptorList: makeType('', 'null'),\r\n\tsolidFillMulti: makeType('', 'SoFi'),\r\n\tgradientFillMulti: makeType('', 'GrFl'),\r\n\tdropShadowMulti: makeType('', 'DrSh'),\r\n\tinnerShadowMulti: makeType('', 'IrSh'),\r\n\tframeFXMulti: makeType('', 'FrFX'),\r\n};\r\n\r\nconst typeToField: { [key: string]: string[]; } = {\r\n\t'TEXT': [\r\n\t\t'Txt ', 'printerName', 'Nm  ', 'Idnt', 'blackAndWhitePresetFileName', 'LUT3DFileName',\r\n\t\t'presetFileName', 'curvesPresetFileName', 'mixerPresetFileName', 'placed', 'description', 'reason',\r\n\t\t'artboardPresetName', 'json',\r\n\t],\r\n\t'tdta': ['EngineData', 'LUT3DFileData'],\r\n\t'long': [\r\n\t\t'TextIndex', 'RndS', 'Mdpn', 'Smth', 'Lctn', 'strokeStyleVersion', 'LaID', 'Vrsn', 'Cnt ',\r\n\t\t'Brgh', 'Cntr', 'means', 'vibrance', 'Strt', 'bwPresetKind', 'presetKind', 'comp', 'compID', 'originalCompID',\r\n\t\t'curvesPresetKind', 'mixerPresetKind', 'uOrder', 'vOrder', 'PgNm', 'totalPages', 'Crop',\r\n\t\t'numerator', 'denominator', 'frameCount', 'Annt', 'keyOriginType', 'unitValueQuadVersion',\r\n\t\t'keyOriginIndex', 'major', 'minor', 'fix', 'docDefaultNewArtboardBackgroundType', 'artboardBackgroundType',\r\n\t\t'numModifyingFX', 'deformNumRows', 'deformNumCols',\r\n\t],\r\n\t'enum': [\r\n\t\t'textGridding', 'Ornt', 'warpStyle', 'warpRotate', 'Inte', 'Bltn', 'ClrS',\r\n\t\t'sdwM', 'hglM', 'bvlT', 'bvlS', 'bvlD', 'Md  ', 'glwS', 'GrdF', 'GlwT',\r\n\t\t'strokeStyleLineCapType', 'strokeStyleLineJoinType', 'strokeStyleLineAlignment',\r\n\t\t'strokeStyleBlendMode', 'PntT', 'Styl', 'lookupType', 'LUTFormat', 'dataOrder',\r\n\t\t'tableOrder', 'enableCompCore', 'enableCompCoreGPU', 'compCoreSupport', 'compCoreGPUSupport', 'Engn',\r\n\t\t'enableCompCoreThreads',\r\n\t],\r\n\t'bool': [\r\n\t\t'PstS', 'printSixteenBit', 'masterFXSwitch', 'enab', 'uglg', 'antialiasGloss',\r\n\t\t'useShape', 'useTexture', 'masterFXSwitch', 'uglg', 'antialiasGloss', 'useShape',\r\n\t\t'useTexture', 'Algn', 'Rvrs', 'Dthr', 'Invr', 'VctC', 'ShTr', 'layerConceals',\r\n\t\t'strokeEnabled', 'fillEnabled', 'strokeStyleScaleLock', 'strokeStyleStrokeAdjust',\r\n\t\t'hardProof', 'MpBl', 'paperWhite', 'useLegacy', 'Auto', 'Lab ', 'useTint', 'keyShapeInvalidated',\r\n\t\t'autoExpandEnabled', 'autoNestEnabled', 'autoPositionEnabled', 'shrinkwrapOnSaveEnabled',\r\n\t\t'present', 'showInDialog', 'overprint',\r\n\t],\r\n\t'doub': [\r\n\t\t'warpValue', 'warpPerspective', 'warpPerspectiveOther', 'Intr', 'Wdth', 'Hght',\r\n\t\t'strokeStyleMiterLimit', 'strokeStyleResolution', 'layerTime', 'keyOriginResolution',\r\n\t\t'xx', 'xy', 'yx', 'yy', 'tx', 'ty',\r\n\t],\r\n\t'UntF': [\r\n\t\t'Scl ', 'sdwO', 'hglO', 'lagl', 'Lald', 'srgR', 'blur', 'Sftn', 'Opct', 'Dstn', 'Angl',\r\n\t\t'Ckmt', 'Nose', 'Inpr', 'ShdN', 'strokeStyleLineWidth', 'strokeStyleLineDashOffset',\r\n\t\t'strokeStyleOpacity', 'H   ', 'Top ', 'Left', 'Btom', 'Rght', 'Rslt',\r\n\t\t'topRight', 'topLeft', 'bottomLeft', 'bottomRight',\r\n\t],\r\n\t'VlLs': [\r\n\t\t'Crv ', 'Clrs', 'Mnm ', 'Mxm ', 'Trns', 'pathList', 'strokeStyleLineDashSet', 'FrLs',\r\n\t\t'LaSt', 'Trnf', 'nonAffineTransform', 'keyDescriptorList', 'guideIndeces', 'gradientFillMulti',\r\n\t\t'solidFillMulti', 'frameFXMulti', 'innerShadowMulti', 'dropShadowMulti',\r\n\t],\r\n\t'ObAr': ['meshPoints', 'quiltSliceX', 'quiltSliceY'],\r\n\t'obj ': ['null'],\r\n};\r\n\r\nconst channels = [\r\n\t'Rd  ', 'Grn ', 'Bl  ', 'Yllw', 'Ylw ', 'Cyn ', 'Mgnt', 'Blck', 'Gry ', 'Lmnc', 'A   ', 'B   ',\r\n];\r\n\r\nconst fieldToArrayType: Dict = {\r\n\t'Mnm ': 'long',\r\n\t'Mxm ': 'long',\r\n\t'FrLs': 'long',\r\n\t'strokeStyleLineDashSet': 'UntF',\r\n\t'Trnf': 'doub',\r\n\t'nonAffineTransform': 'doub',\r\n\t'keyDescriptorList': 'Objc',\r\n\t'gradientFillMulti': 'Objc',\r\n\t'solidFillMulti': 'Objc',\r\n\t'frameFXMulti': 'Objc',\r\n\t'innerShadowMulti': 'Objc',\r\n\t'dropShadowMulti': 'Objc',\r\n};\r\n\r\nconst fieldToType: Dict = {};\r\n\r\nfor (const type of Object.keys(typeToField)) {\r\n\tfor (const field of typeToField[type]) {\r\n\t\tfieldToType[field] = type;\r\n\t}\r\n}\r\n\r\nfor (const field of Object.keys(fieldToExtType)) {\r\n\tif (!fieldToType[field]) fieldToType[field] = 'Objc';\r\n}\r\n\r\nfor (const field of Object.keys(fieldToArrayExtType)) {\r\n\tfieldToArrayType[field] = 'Objc';\r\n}\r\n\r\nfunction getTypeByKey(key: string, value: any, root: string) {\r\n\tif (key === 'Sz  ') {\r\n\t\treturn ('Wdth' in value) ? 'Objc' : (('units' in value) ? 'UntF' : 'doub');\r\n\t} else if (key === 'Type') {\r\n\t\treturn typeof value === 'string' ? 'enum' : 'long';\r\n\t} else if (key === 'AntA') {\r\n\t\treturn typeof value === 'string' ? 'enum' : 'bool';\r\n\t} else if (key === 'Hrzn' || key === 'Vrtc' || key === 'Top ' || key === 'Left' || key === 'Btom' || key === 'Rght') {\r\n\t\treturn typeof value === 'number' ? 'doub' : 'UntF';\r\n\t} else if (key === 'Vrsn') {\r\n\t\treturn typeof value === 'number' ? 'long' : 'Objc';\r\n\t} else if (key === 'Rd  ' || key === 'Grn ' || key === 'Bl  ') {\r\n\t\treturn root === 'artd' ? 'long' : 'doub';\r\n\t} else if (key === 'Trnf') {\r\n\t\treturn Array.isArray(value) ? 'VlLs' : 'Objc';\r\n\t} else {\r\n\t\treturn fieldToType[key];\r\n\t}\r\n}\r\n\r\nexport function readAsciiStringOrClassId(reader: PsdReader) {\r\n\tconst length = readInt32(reader);\r\n\treturn readAsciiString(reader, length || 4);\r\n}\r\n\r\nfunction writeAsciiStringOrClassId(writer: PsdWriter, value: string) {\r\n\tif (value.length === 4 && value !== 'warp') {\r\n\t\t// write classId\r\n\t\twriteInt32(writer, 0);\r\n\t\twriteSignature(writer, value);\r\n\t} else {\r\n\t\t// write ascii string\r\n\t\twriteInt32(writer, value.length);\r\n\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\twriteUint8(writer, value.charCodeAt(i));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function readDescriptorStructure(reader: PsdReader) {\r\n\tconst object: any = {};\r\n\t// object.__struct =\r\n\treadClassStructure(reader);\r\n\tconst itemsCount = readUint32(reader);\r\n\r\n\tfor (let i = 0; i < itemsCount; i++) {\r\n\t\tconst key = readAsciiStringOrClassId(reader);\r\n\t\tconst type = readSignature(reader);\r\n\t\t// console.log(`> '${key}' '${type}'`);\r\n\t\tconst data = readOSType(reader, type);\r\n\t\t// if (!getTypeByKey(key, data)) console.log(`> '${key}' '${type}'`, data);\r\n\t\tobject[key] = data;\r\n\t}\r\n\t// console.log('//', struct);\r\n\treturn object;\r\n}\r\n\r\nexport function writeDescriptorStructure(writer: PsdWriter, name: string, classId: string, value: any, root: string) {\r\n\tif (logErrors && !classId) console.log('Missing classId for: ', name, classId, value);\r\n\r\n\t// write class structure\r\n\twriteUnicodeStringWithPadding(writer, name);\r\n\twriteAsciiStringOrClassId(writer, classId);\r\n\r\n\tconst keys = Object.keys(value);\r\n\twriteUint32(writer, keys.length);\r\n\r\n\tfor (const key of keys) {\r\n\t\tlet type = getTypeByKey(key, value[key], root);\r\n\t\tlet extType = fieldToExtType[key];\r\n\r\n\t\tif ((key === 'Strt' || key === 'Brgh') && 'H   ' in value) {\r\n\t\t\ttype = 'doub';\r\n\t\t} else if (channels.indexOf(key) !== -1) {\r\n\t\t\ttype = (classId === 'RGBC' && root !== 'artd') ? 'doub' : 'long';\r\n\t\t} else if (key === 'profile') {\r\n\t\t\ttype = classId === 'printOutput' ? 'TEXT' : 'tdta';\r\n\t\t} else if (key === 'strokeStyleContent') {\r\n\t\t\tif (value[key]['Clr ']) {\r\n\t\t\t\textType = makeType('', 'solidColorLayer');\r\n\t\t\t} else if (value[key].Grad) {\r\n\t\t\t\textType = makeType('', 'gradientLayer');\r\n\t\t\t} else if (value[key].Ptrn) {\r\n\t\t\t\textType = makeType('', 'patternLayer');\r\n\t\t\t} else {\r\n\t\t\t\tlogErrors && console.log('Invalid strokeStyleContent value', value[key]);\r\n\t\t\t}\r\n\t\t} else if (key === 'bounds' && root === 'quiltWarp') {\r\n\t\t\textType = makeType('', 'classFloatRect');\r\n\t\t}\r\n\r\n\t\tif (extType && extType.classID === 'RGBC') {\r\n\t\t\tif ('H   ' in value[key]) extType = { classID: 'HSBC', name: '' };\r\n\t\t\t// TODO: other color spaces\r\n\t\t}\r\n\r\n\t\twriteAsciiStringOrClassId(writer, key);\r\n\t\twriteSignature(writer, type || 'long');\r\n\t\twriteOSType(writer, type || 'long', value[key], key, extType, root);\r\n\t\tif (logErrors && !type) console.log(`Missing descriptor field type for: '${key}' in`, value);\r\n\t}\r\n}\r\n\r\nfunction readOSType(reader: PsdReader, type: string) {\r\n\tswitch (type) {\r\n\t\tcase 'obj ': // Reference\r\n\t\t\treturn readReferenceStructure(reader);\r\n\t\tcase 'Objc': // Descriptor\r\n\t\tcase 'GlbO': // GlobalObject same as Descriptor\r\n\t\t\treturn readDescriptorStructure(reader);\r\n\t\tcase 'VlLs': { // List\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\tconst items: any[] = [];\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tconst type = readSignature(reader);\r\n\t\t\t\t// console.log('  >', type);\r\n\t\t\t\titems.push(readOSType(reader, type));\r\n\t\t\t}\r\n\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\tcase 'doub': // Double\r\n\t\t\treturn readFloat64(reader);\r\n\t\tcase 'UntF': { // Unit double\r\n\t\t\tconst units = readSignature(reader);\r\n\t\t\tconst value = readFloat64(reader);\r\n\t\t\tif (!unitsMap[units]) throw new Error(`Invalid units: ${units}`);\r\n\t\t\treturn { units: unitsMap[units], value };\r\n\t\t}\r\n\t\tcase 'UnFl': { // Unit float\r\n\t\t\tconst units = readSignature(reader);\r\n\t\t\tconst value = readFloat32(reader);\r\n\t\t\tif (!unitsMap[units]) throw new Error(`Invalid units: ${units}`);\r\n\t\t\treturn { units: unitsMap[units], value };\r\n\t\t}\r\n\t\tcase 'TEXT': // String\r\n\t\t\treturn readUnicodeString(reader);\r\n\t\tcase 'enum': { // Enumerated\r\n\t\t\tconst type = readAsciiStringOrClassId(reader);\r\n\t\t\tconst value = readAsciiStringOrClassId(reader);\r\n\t\t\treturn `${type}.${value}`;\r\n\t\t}\r\n\t\tcase 'long': // Integer\r\n\t\t\treturn readInt32(reader);\r\n\t\tcase 'comp': { // Large Integer\r\n\t\t\tconst low = readUint32(reader);\r\n\t\t\tconst high = readUint32(reader);\r\n\t\t\treturn { low, high };\r\n\t\t}\r\n\t\tcase 'bool': // Boolean\r\n\t\t\treturn !!readUint8(reader);\r\n\t\tcase 'type': // Class\r\n\t\tcase 'GlbC': // Class\r\n\t\t\treturn readClassStructure(reader);\r\n\t\tcase 'alis': { // Alias\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\treturn readAsciiString(reader, length);\r\n\t\t}\r\n\t\tcase 'tdta': { // Raw Data\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\treturn readBytes(reader, length);\r\n\t\t}\r\n\t\tcase 'ObAr': { // Object array\r\n\t\t\treadInt32(reader); // version: 16\r\n\t\t\treadUnicodeString(reader); // name: ''\r\n\t\t\treadAsciiStringOrClassId(reader); // 'rationalPoint'\r\n\t\t\tconst length = readInt32(reader);\r\n\t\t\tconst items: any[] = [];\r\n\r\n\t\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\t\tconst type1 = readAsciiStringOrClassId(reader); // type Hrzn | Vrtc\r\n\t\t\t\treadSignature(reader); // UnFl\r\n\r\n\t\t\t\treadSignature(reader); // units ? '#Pxl'\r\n\t\t\t\tconst valuesCount = readInt32(reader);\r\n\t\t\t\tconst values: number[] = [];\r\n\t\t\t\tfor (let j = 0; j < valuesCount; j++) {\r\n\t\t\t\t\tvalues.push(readFloat64(reader));\r\n\t\t\t\t}\r\n\r\n\t\t\t\titems.push({ type: type1, values });\r\n\t\t\t}\r\n\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\tcase 'Pth ': { // File path\r\n\t\t\t/*const length =*/ readInt32(reader);\r\n\t\t\tconst sig = readSignature(reader);\r\n\t\t\t/*const pathSize =*/ readInt32LE(reader);\r\n\t\t\tconst charsCount = readInt32LE(reader);\r\n\t\t\tconst path = readUnicodeStringWithLength(reader, charsCount);\r\n\t\t\treturn { sig, path };\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Invalid TySh descriptor OSType: ${type} at ${reader.offset.toString(16)}`);\r\n\t}\r\n}\r\n\r\nconst ObArTypes: { [key: string]: string | undefined; } = {\r\n\tmeshPoints: 'rationalPoint',\r\n\tquiltSliceX: 'UntF',\r\n\tquiltSliceY: 'UntF',\r\n};\r\n\r\nfunction writeOSType(writer: PsdWriter, type: string, value: any, key: string, extType: NameClassID | undefined, root: string) {\r\n\tswitch (type) {\r\n\t\tcase 'obj ': // Reference\r\n\t\t\twriteReferenceStructure(writer, key, value);\r\n\t\t\tbreak;\r\n\t\tcase 'Objc': // Descriptor\r\n\t\tcase 'GlbO': // GlobalObject same as Descriptor\r\n\t\t\tif (!extType) throw new Error(`Missing ext type for: '${key}' (${JSON.stringify(value)})`);\r\n\t\t\twriteDescriptorStructure(writer, extType.name, extType.classID, value, root);\r\n\t\t\tbreak;\r\n\t\tcase 'VlLs': // List\r\n\t\t\twriteInt32(writer, value.length);\r\n\r\n\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\tconst type = fieldToArrayType[key];\r\n\t\t\t\twriteSignature(writer, type || 'long');\r\n\t\t\t\twriteOSType(writer, type || 'long', value[i], '', fieldToArrayExtType[key], root);\r\n\t\t\t\tif (logErrors && !type) console.log(`Missing descriptor array type for: '${key}' in`, value);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'doub': // Double\r\n\t\t\twriteFloat64(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'UntF': // Unit double\r\n\t\t\tif (!unitsMapRev[value.units]) throw new Error(`Invalid units: ${value.units} in ${key}`);\r\n\t\t\twriteSignature(writer, unitsMapRev[value.units]);\r\n\t\t\twriteFloat64(writer, value.value);\r\n\t\t\tbreak;\r\n\t\tcase 'UnFl': // Unit float\r\n\t\t\tif (!unitsMapRev[value.units]) throw new Error(`Invalid units: ${value.units} in ${key}`);\r\n\t\t\twriteSignature(writer, unitsMapRev[value.units]);\r\n\t\t\twriteFloat32(writer, value.value);\r\n\t\t\tbreak;\r\n\t\tcase 'TEXT': // String\r\n\t\t\twriteUnicodeStringWithPadding(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'enum': { // Enumerated\r\n\t\t\tconst [_type, val] = value.split('.');\r\n\t\t\twriteAsciiStringOrClassId(writer, _type);\r\n\t\t\twriteAsciiStringOrClassId(writer, val);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'long': // Integer\r\n\t\t\twriteInt32(writer, value);\r\n\t\t\tbreak;\r\n\t\t// case 'comp': // Large Integer\r\n\t\t// \twriteLargeInteger(reader);\r\n\t\tcase 'bool': // Boolean\r\n\t\t\twriteUint8(writer, value ? 1 : 0);\r\n\t\t\tbreak;\r\n\t\t// case 'type': // Class\r\n\t\t// case 'GlbC': // Class\r\n\t\t// \twriteClassStructure(reader);\r\n\t\t// case 'alis': // Alias\r\n\t\t// \twriteAliasStructure(reader);\r\n\t\tcase 'tdta': // Raw Data\r\n\t\t\twriteInt32(writer, value.byteLength);\r\n\t\t\twriteBytes(writer, value);\r\n\t\t\tbreak;\r\n\t\tcase 'ObAr': { // Object array\r\n\t\t\twriteInt32(writer, 16); // version\r\n\t\t\twriteUnicodeStringWithPadding(writer, ''); // name\r\n\t\t\tconst type = ObArTypes[key];\r\n\t\t\tif (!type) throw new Error(`Not implemented ObArType for: ${key}`);\r\n\t\t\twriteAsciiStringOrClassId(writer, type);\r\n\t\t\twriteInt32(writer, value.length);\r\n\r\n\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\twriteAsciiStringOrClassId(writer, value[i].type); // Hrzn | Vrtc\r\n\t\t\t\twriteSignature(writer, 'UnFl');\r\n\t\t\t\twriteSignature(writer, '#Pxl');\r\n\t\t\t\twriteInt32(writer, value[i].values.length);\r\n\r\n\t\t\t\tfor (let j = 0; j < value[i].values.length; j++) {\r\n\t\t\t\t\twriteFloat64(writer, value[i].values[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t// case 'Pth ': // File path\r\n\t\t// \twriteFilePath(reader);\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Not implemented descriptor OSType: ${type}`);\r\n\t}\r\n}\r\n\r\nfunction readReferenceStructure(reader: PsdReader) {\r\n\tconst itemsCount = readInt32(reader);\r\n\tconst items: any[] = [];\r\n\r\n\tfor (let i = 0; i < itemsCount; i++) {\r\n\t\tconst type = readSignature(reader);\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase 'prop': { // Property\r\n\t\t\t\treadClassStructure(reader);\r\n\t\t\t\tconst keyID = readAsciiStringOrClassId(reader);\r\n\t\t\t\titems.push(keyID);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Clss': // Class\r\n\t\t\t\titems.push(readClassStructure(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Enmr': { // Enumerated Reference\r\n\t\t\t\treadClassStructure(reader);\r\n\t\t\t\tconst typeID = readAsciiStringOrClassId(reader);\r\n\t\t\t\tconst value = readAsciiStringOrClassId(reader);\r\n\t\t\t\titems.push(`${typeID}.${value}`);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'rele': { // Offset\r\n\t\t\t\t// const { name, classID } =\r\n\t\t\t\treadClassStructure(reader);\r\n\t\t\t\titems.push(readUint32(reader));\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'Idnt': // Identifier\r\n\t\t\t\titems.push(readInt32(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'indx': // Index\r\n\t\t\t\titems.push(readInt32(reader));\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'name': { // Name\r\n\t\t\t\treadClassStructure(reader);\r\n\t\t\t\titems.push(readUnicodeString(reader));\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid descriptor reference type: ${type}`);\r\n\t\t}\r\n\t}\r\n\r\n\treturn items;\r\n}\r\n\r\nfunction writeReferenceStructure(writer: PsdWriter, _key: string, items: any[]) {\r\n\twriteInt32(writer, items.length);\r\n\r\n\tfor (let i = 0; i < items.length; i++) {\r\n\t\tconst value = items[i];\r\n\t\tlet type = 'unknown';\r\n\r\n\t\tif (typeof value === 'string') {\r\n\t\t\tif (/^[a-z]+\\.[a-z]+$/i.test(value)) {\r\n\t\t\t\ttype = 'Enmr';\r\n\t\t\t} else {\r\n\t\t\t\ttype = 'name';\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twriteSignature(writer, type);\r\n\r\n\t\tswitch (type) {\r\n\t\t\t// case 'prop': // Property\r\n\t\t\t// case 'Clss': // Class\r\n\t\t\tcase 'Enmr': { // Enumerated Reference\r\n\t\t\t\tconst [typeID, enumValue] = value.split('.');\r\n\t\t\t\twriteClassStructure(writer, '\\0', typeID);\r\n\t\t\t\twriteAsciiStringOrClassId(writer, typeID);\r\n\t\t\t\twriteAsciiStringOrClassId(writer, enumValue);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// case 'rele': // Offset\r\n\t\t\t// case 'Idnt': // Identifier\r\n\t\t\t// case 'indx': // Index\r\n\t\t\tcase 'name': { // Name\r\n\t\t\t\twriteClassStructure(writer, '\\0', 'Lyr ');\r\n\t\t\t\twriteUnicodeString(writer, value + '\\0');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid descriptor reference type: ${type}`);\r\n\t\t}\r\n\t}\r\n\r\n\treturn items;\r\n}\r\n\r\nfunction readClassStructure(reader: PsdReader) {\r\n\tconst name = readUnicodeString(reader);\r\n\tconst classID = readAsciiStringOrClassId(reader);\r\n\t// console.log({ name, classID });\r\n\treturn { name, classID };\r\n}\r\n\r\nfunction writeClassStructure(writer: PsdWriter, name: string, classID: string) {\r\n\twriteUnicodeString(writer, name);\r\n\twriteAsciiStringOrClassId(writer, classID);\r\n}\r\n\r\nexport function readVersionAndDescriptor(reader: PsdReader) {\r\n\tconst version = readUint32(reader);\r\n\tif (version !== 16) throw new Error(`Invalid descriptor version: ${version}`);\r\n\tconst desc = readDescriptorStructure(reader);\r\n\t// console.log(require('util').inspect(desc, false, 99, true));\r\n\treturn desc;\r\n}\r\n\r\nexport function writeVersionAndDescriptor(writer: PsdWriter, name: string, classID: string, descriptor: any, root = '') {\r\n\twriteUint32(writer, 16); // version\r\n\twriteDescriptorStructure(writer, name, classID, descriptor, root);\r\n}\r\n\r\nexport type DescriptorUnits = 'Angle' | 'Density' | 'Distance' | 'None' | 'Percent' | 'Pixels' |\r\n\t'Millimeters' | 'Points' | 'Picas' | 'Inches' | 'Centimeters';\r\n\r\nexport interface DescriptorUnitsValue {\r\n\tunits: DescriptorUnits;\r\n\tvalue: number;\r\n}\r\n\r\nexport type DescriptorColor = {\r\n\t'Rd  ': number;\r\n\t'Grn ': number;\r\n\t'Bl  ': number;\r\n} | {\r\n\t'H   ': DescriptorUnitsValue;\r\n\tStrt: number;\r\n\tBrgh: number;\r\n} | {\r\n\t'Cyn ': number;\r\n\tMgnt: number;\r\n\t'Ylw ': number;\r\n\tBlck: number;\r\n} | {\r\n\t'Gry ': number;\r\n} | {\r\n\tLmnc: number;\r\n\t'A   ': number;\r\n\t'B   ': number;\r\n};\r\n\r\nexport interface DesciptorPattern {\r\n\t'Nm  ': string;\r\n\tIdnt: string;\r\n}\r\n\r\nexport type DesciptorGradient = {\r\n\t'Nm  ': string;\r\n\tGrdF: 'GrdF.CstS';\r\n\tIntr: number;\r\n\tClrs: {\r\n\t\t'Clr ': DescriptorColor;\r\n\t\tType: 'Clry.UsrS';\r\n\t\tLctn: number;\r\n\t\tMdpn: number;\r\n\t}[];\r\n\tTrns: {\r\n\t\tOpct: DescriptorUnitsValue;\r\n\t\tLctn: number;\r\n\t\tMdpn: number;\r\n\t}[];\r\n} | {\r\n\tGrdF: 'GrdF.ClNs';\r\n\tSmth: number;\r\n\t'Nm  ': string;\r\n\tClrS: string;\r\n\tRndS: number;\r\n\tVctC?: boolean;\r\n\tShTr?: boolean;\r\n\t'Mnm ': number[];\r\n\t'Mxm ': number[];\r\n};\r\n\r\nexport interface DescriptorColorContent {\r\n\t'Clr ': DescriptorColor;\r\n}\r\n\r\nexport interface DescriptorGradientContent {\r\n\tGrad: DesciptorGradient;\r\n\tType: string;\r\n\tDthr?: boolean;\r\n\tRvrs?: boolean;\r\n\tAngl?: DescriptorUnitsValue;\r\n\t'Scl '?: DescriptorUnitsValue;\r\n\tAlgn?: boolean;\r\n\tOfst?: { Hrzn: DescriptorUnitsValue; Vrtc: DescriptorUnitsValue; };\r\n}\r\n\r\nexport interface DescriptorPatternContent {\r\n\tPtrn: DesciptorPattern;\r\n\tLnkd?: boolean;\r\n\tphase?: { Hrzn: number; Vrtc: number; };\r\n}\r\n\r\nexport type DescriptorVectorContent = DescriptorColorContent | DescriptorGradientContent | DescriptorPatternContent;\r\n\r\nexport interface StrokeDescriptor {\r\n\tstrokeStyleVersion: number;\r\n\tstrokeEnabled: boolean;\r\n\tfillEnabled: boolean;\r\n\tstrokeStyleLineWidth: DescriptorUnitsValue;\r\n\tstrokeStyleLineDashOffset: DescriptorUnitsValue;\r\n\tstrokeStyleMiterLimit: number;\r\n\tstrokeStyleLineCapType: string;\r\n\tstrokeStyleLineJoinType: string;\r\n\tstrokeStyleLineAlignment: string;\r\n\tstrokeStyleScaleLock: boolean;\r\n\tstrokeStyleStrokeAdjust: boolean;\r\n\tstrokeStyleLineDashSet: DescriptorUnitsValue[];\r\n\tstrokeStyleBlendMode: string;\r\n\tstrokeStyleOpacity: DescriptorUnitsValue;\r\n\tstrokeStyleContent: DescriptorVectorContent;\r\n\tstrokeStyleResolution: number;\r\n}\r\n\r\nexport interface TextDescriptor {\r\n\t'Txt ': string;\r\n\ttextGridding: string;\r\n\tOrnt: string;\r\n\tAntA: string;\r\n\tTextIndex: number;\r\n\tEngineData?: Uint8Array;\r\n}\r\n\r\nexport interface WarpDescriptor {\r\n\twarpStyle: string;\r\n\twarpValue: number;\r\n\twarpPerspective: number;\r\n\twarpPerspectiveOther: number;\r\n\twarpRotate: string;\r\n\tbounds?: {\r\n\t\t'Top ': DescriptorUnitsValue;\r\n\t\tLeft: DescriptorUnitsValue;\r\n\t\tBtom: DescriptorUnitsValue;\r\n\t\tRght: DescriptorUnitsValue;\r\n\t};\r\n\tuOrder: number;\r\n\tvOrder: number;\r\n\tcustomEnvelopeWarp?: {\r\n\t\tmeshPoints: {\r\n\t\t\ttype: 'Hrzn' | 'Vrtc';\r\n\t\t\tvalues: number[];\r\n\t\t}[];\r\n\t};\r\n}\r\n\r\nexport interface QuiltWarpDescriptor extends WarpDescriptor {\r\n\tdeformNumRows: number;\r\n\tdeformNumCols: number;\r\n\tcustomEnvelopeWarp: {\r\n\t\tquiltSliceX: {\r\n\t\t\ttype: 'quiltSliceX';\r\n\t\t\tvalues: number[];\r\n\t\t}[];\r\n\t\tquiltSliceY: {\r\n\t\t\ttype: 'quiltSliceY';\r\n\t\t\tvalues: number[];\r\n\t\t}[];\r\n\t\tmeshPoints: {\r\n\t\t\ttype: 'Hrzn' | 'Vrtc';\r\n\t\t\tvalues: number[];\r\n\t\t}[];\r\n\t};\r\n}\r\n\r\nexport function parseAngle(x: DescriptorUnitsValue) {\r\n\tif (x === undefined) return 0;\r\n\tif (x.units !== 'Angle') throw new Error(`Invalid units: ${x.units}`);\r\n\treturn x.value;\r\n}\r\n\r\nexport function parsePercent(x: DescriptorUnitsValue | undefined) {\r\n\tif (x === undefined) return 1;\r\n\tif (x.units !== 'Percent') throw new Error(`Invalid units: ${x.units}`);\r\n\treturn x.value / 100;\r\n}\r\n\r\nexport function parsePercentOrAngle(x: DescriptorUnitsValue | undefined) {\r\n\tif (x === undefined) return 1;\r\n\tif (x.units === 'Percent') return x.value / 100;\r\n\tif (x.units === 'Angle') return x.value / 360;\r\n\tthrow new Error(`Invalid units: ${x.units}`);\r\n}\r\n\r\nexport function parseUnits({ units, value }: DescriptorUnitsValue): UnitsValue {\r\n\tif (\r\n\t\tunits !== 'Pixels' && units !== 'Millimeters' && units !== 'Points' && units !== 'None' &&\r\n\t\tunits !== 'Picas' && units !== 'Inches' && units !== 'Centimeters' && units !== 'Density'\r\n\t) {\r\n\t\tthrow new Error(`Invalid units: ${JSON.stringify({ units, value })}`);\r\n\t}\r\n\treturn { value, units };\r\n}\r\n\r\nexport function parseUnitsOrNumber(value: DescriptorUnitsValue | number, units: Units = 'Pixels'): UnitsValue {\r\n\tif (typeof value === 'number') return { value, units };\r\n\treturn parseUnits(value);\r\n}\r\n\r\nexport function parseUnitsToNumber({ units, value }: DescriptorUnitsValue, expectedUnits: string): number {\r\n\tif (units !== expectedUnits) throw new Error(`Invalid units: ${JSON.stringify({ units, value })}`);\r\n\treturn value;\r\n}\r\n\r\nexport function unitsAngle(value: number | undefined): DescriptorUnitsValue {\r\n\treturn { units: 'Angle', value: value || 0 };\r\n}\r\n\r\nexport function unitsPercent(value: number | undefined): DescriptorUnitsValue {\r\n\treturn { units: 'Percent', value: Math.round((value || 0) * 100) };\r\n}\r\n\r\nexport function unitsValue(x: UnitsValue | undefined, key: string): DescriptorUnitsValue {\r\n\tif (x == null) return { units: 'Pixels', value: 0 };\r\n\r\n\tif (typeof x !== 'object')\r\n\t\tthrow new Error(`Invalid value: ${JSON.stringify(x)} (key: ${key}) (should have value and units)`);\r\n\r\n\tconst { units, value } = x;\r\n\r\n\tif (typeof value !== 'number')\r\n\t\tthrow new Error(`Invalid value in ${JSON.stringify(x)} (key: ${key})`);\r\n\r\n\tif (\r\n\t\tunits !== 'Pixels' && units !== 'Millimeters' && units !== 'Points' && units !== 'None' &&\r\n\t\tunits !== 'Picas' && units !== 'Inches' && units !== 'Centimeters' && units !== 'Density'\r\n\t) {\r\n\t\tthrow new Error(`Invalid units in ${JSON.stringify(x)} (key: ${key})`);\r\n\t}\r\n\r\n\treturn { units, value };\r\n}\r\n\r\nexport const textGridding = createEnum<TextGridding>('textGridding', 'none', {\r\n\tnone: 'None',\r\n\tround: 'Rnd ',\r\n});\r\n\r\nexport const Ornt = createEnum<Orientation>('Ornt', 'horizontal', {\r\n\thorizontal: 'Hrzn',\r\n\tvertical: 'Vrtc',\r\n});\r\n\r\nexport const Annt = createEnum<AntiAlias>('Annt', 'sharp', {\r\n\tnone: 'Anno',\r\n\tsharp: 'antiAliasSharp',\r\n\tcrisp: 'AnCr',\r\n\tstrong: 'AnSt',\r\n\tsmooth: 'AnSm',\r\n\tplatform: 'antiAliasPlatformGray',\r\n\tplatformLCD: 'antiAliasPlatformLCD',\r\n});\r\n\r\nexport const warpStyle = createEnum<WarpStyle>('warpStyle', 'none', {\r\n\tnone: 'warpNone',\r\n\tarc: 'warpArc',\r\n\tarcLower: 'warpArcLower',\r\n\tarcUpper: 'warpArcUpper',\r\n\tarch: 'warpArch',\r\n\tbulge: 'warpBulge',\r\n\tshellLower: 'warpShellLower',\r\n\tshellUpper: 'warpShellUpper',\r\n\tflag: 'warpFlag',\r\n\twave: 'warpWave',\r\n\tfish: 'warpFish',\r\n\trise: 'warpRise',\r\n\tfisheye: 'warpFisheye',\r\n\tinflate: 'warpInflate',\r\n\tsqueeze: 'warpSqueeze',\r\n\ttwist: 'warpTwist',\r\n\tcustom: 'warpCustom',\r\n});\r\n\r\nexport const BlnM = createEnum<BlendMode>('BlnM', 'normal', {\r\n\t'normal': 'Nrml',\r\n\t'dissolve': 'Dslv',\r\n\t'darken': 'Drkn',\r\n\t'multiply': 'Mltp',\r\n\t'color burn': 'CBrn',\r\n\t'linear burn': 'linearBurn',\r\n\t'darker color': 'darkerColor',\r\n\t'lighten': 'Lghn',\r\n\t'screen': 'Scrn',\r\n\t'color dodge': 'CDdg',\r\n\t'linear dodge': 'linearDodge',\r\n\t'lighter color': 'lighterColor',\r\n\t'overlay': 'Ovrl',\r\n\t'soft light': 'SftL',\r\n\t'hard light': 'HrdL',\r\n\t'vivid light': 'vividLight',\r\n\t'linear light': 'linearLight',\r\n\t'pin light': 'pinLight',\r\n\t'hard mix': 'hardMix',\r\n\t'difference': 'Dfrn',\r\n\t'exclusion': 'Xclu',\r\n\t'subtract': 'blendSubtraction',\r\n\t'divide': 'blendDivide',\r\n\t'hue': 'H   ',\r\n\t'saturation': 'Strt',\r\n\t'color': 'Clr ',\r\n\t'luminosity': 'Lmns',\r\n});\r\n\r\nexport const BESl = createEnum<BevelStyle>('BESl', 'inner bevel', {\r\n\t'inner bevel': 'InrB',\r\n\t'outer bevel': 'OtrB',\r\n\t'emboss': 'Embs',\r\n\t'pillow emboss': 'PlEb',\r\n\t'stroke emboss': 'strokeEmboss',\r\n});\r\n\r\nexport const bvlT = createEnum<BevelTechnique>('bvlT', 'smooth', {\r\n\t'smooth': 'SfBL',\r\n\t'chisel hard': 'PrBL',\r\n\t'chisel soft': 'Slmt',\r\n});\r\n\r\nexport const BESs = createEnum<BevelDirection>('BESs', 'up', {\r\n\tup: 'In  ',\r\n\tdown: 'Out ',\r\n});\r\n\r\nexport const BETE = createEnum<GlowTechnique>('BETE', 'softer', {\r\n\tsofter: 'SfBL',\r\n\tprecise: 'PrBL',\r\n});\r\n\r\nexport const IGSr = createEnum<GlowSource>('IGSr', 'edge', {\r\n\tedge: 'SrcE',\r\n\tcenter: 'SrcC',\r\n});\r\n\r\nexport const GrdT = createEnum<GradientStyle>('GrdT', 'linear', {\r\n\tlinear: 'Lnr ',\r\n\tradial: 'Rdl ',\r\n\tangle: 'Angl',\r\n\treflected: 'Rflc',\r\n\tdiamond: 'Dmnd',\r\n});\r\n\r\nexport const ClrS = createEnum<'rgb' | 'hsb' | 'lab'>('ClrS', 'rgb', {\r\n\trgb: 'RGBC',\r\n\thsb: 'HSBl',\r\n\tlab: 'LbCl',\r\n});\r\n\r\nexport const FStl = createEnum<'inside' | 'center' | 'outside'>('FStl', 'outside', {\r\n\toutside: 'OutF',\r\n\tcenter: 'CtrF',\r\n\tinside: 'InsF'\r\n});\r\n\r\nexport const FrFl = createEnum<'color' | 'gradient' | 'pattern'>('FrFl', 'color', {\r\n\tcolor: 'SClr',\r\n\tgradient: 'GrFl',\r\n\tpattern: 'Ptrn',\r\n});\r\n\r\nexport const strokeStyleLineCapType = createEnum<LineCapType>('strokeStyleLineCapType', 'butt', {\r\n\tbutt: 'strokeStyleButtCap',\r\n\tround: 'strokeStyleRoundCap',\r\n\tsquare: 'strokeStyleSquareCap',\r\n});\r\n\r\nexport const strokeStyleLineJoinType = createEnum<LineJoinType>('strokeStyleLineJoinType', 'miter', {\r\n\tmiter: 'strokeStyleMiterJoin',\r\n\tround: 'strokeStyleRoundJoin',\r\n\tbevel: 'strokeStyleBevelJoin',\r\n});\r\n\r\nexport const strokeStyleLineAlignment = createEnum<LineAlignment>('strokeStyleLineAlignment', 'inside', {\r\n\tinside: 'strokeStyleAlignInside',\r\n\tcenter: 'strokeStyleAlignCenter',\r\n\toutside: 'strokeStyleAlignOutside',\r\n});\r\n","import { toByteArray } from 'base64-js';\nimport { ImageResources, ReadOptions, RenderingIntent } from './psd';\nimport {\n\tPsdReader, readPascalString, readUnicodeString, readUint32, readUint16, readUint8, readFloat64,\n\treadBytes, skipBytes, readFloat32, readInt16, readFixedPoint32, readSignature, checkSignature,\n\treadSection, readColor\n} from './psdReader';\nimport {\n\tPsdWriter, writePascalString, writeUnicodeString, writeUint32, writeUint8, writeFloat64, writeUint16,\n\twriteBytes, writeInt16, writeFloat32, writeFixedPoint32, writeUnicodeStringWithPadding, writeColor,\n} from './psdWriter';\nimport { createCanvasFromData, createEnum, MOCK_HANDLERS } from './helpers';\nimport { decodeString, encodeString } from './utf8';\nimport { readVersionAndDescriptor, writeVersionAndDescriptor } from './descriptor';\n\nexport interface ResourceHandler {\n\tkey: number;\n\thas: (target: ImageResources) => boolean;\n\tread: (reader: PsdReader, target: ImageResources, left: () => number, options: ReadOptions) => void;\n\twrite: (writer: PsdWriter, target: ImageResources) => void;\n}\n\nexport const resourceHandlers: ResourceHandler[] = [];\nexport const resourceHandlersMap: { [key: number]: ResourceHandler } = {};\n\nfunction addHandler(\n\tkey: number,\n\thas: (target: ImageResources) => boolean,\n\tread: (reader: PsdReader, target: ImageResources, left: () => number, options: ReadOptions) => void,\n\twrite: (writer: PsdWriter, target: ImageResources) => void,\n) {\n\tconst handler: ResourceHandler = { key, has, read, write };\n\tresourceHandlers.push(handler);\n\tresourceHandlersMap[handler.key] = handler;\n}\n\nconst LOG_MOCK_HANDLERS = false;\nconst RESOLUTION_UNITS = [undefined, 'PPI', 'PPCM'];\nconst MEASUREMENT_UNITS = [undefined, 'Inches', 'Centimeters', 'Points', 'Picas', 'Columns'];\nconst hex = '0123456789abcdef';\n\nfunction charToNibble(code: number) {\n\treturn code <= 57 ? code - 48 : code - 87;\n}\n\nfunction byteAt(value: string, index: number) {\n\treturn (charToNibble(value.charCodeAt(index)) << 4) | charToNibble(value.charCodeAt(index + 1));\n}\n\nfunction readUtf8String(reader: PsdReader, length: number) {\n\tconst buffer = readBytes(reader, length);\n\treturn decodeString(buffer);\n}\n\nfunction writeUtf8String(writer: PsdWriter, value: string) {\n\tconst buffer = encodeString(value);\n\twriteBytes(writer, buffer);\n}\n\nMOCK_HANDLERS && addHandler(\n\t1028, // IPTC-NAA record\n\ttarget => (target as any)._ir1028 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1028', left());\n\t\t(target as any)._ir1028 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1028);\n\t},\n);\n\naddHandler(\n\t1061,\n\ttarget => target.captionDigest !== undefined,\n\t(reader, target) => {\n\t\tlet captionDigest = '';\n\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\tconst byte = readUint8(reader);\n\t\t\tcaptionDigest += hex[byte >> 4];\n\t\t\tcaptionDigest += hex[byte & 0xf];\n\t\t}\n\n\t\ttarget.captionDigest = captionDigest;\n\t},\n\t(writer, target) => {\n\t\tfor (let i = 0; i < 16; i++) {\n\t\t\twriteUint8(writer, byteAt(target.captionDigest!, i * 2));\n\t\t}\n\t},\n);\n\naddHandler(\n\t1060,\n\ttarget => target.xmpMetadata !== undefined,\n\t(reader, target, left) => target.xmpMetadata = readUtf8String(reader, left()),\n\t(writer, target) => writeUtf8String(writer, target.xmpMetadata!),\n);\n\nconst Inte = createEnum<RenderingIntent>('Inte', 'perceptual', {\n\t'perceptual': 'Img ',\n\t'saturation': 'Grp ',\n\t'relative colorimetric': 'Clrm',\n\t'absolute colorimetric': 'AClr',\n});\n\ninterface PrintInformationDescriptor {\n\t'Nm  '?: string;\n\tClrS?: string;\n\tPstS?: boolean;\n\tMpBl?: boolean;\n\tInte?: string;\n\thardProof?: boolean;\n\tprintSixteenBit?: boolean;\n\tprinterName?: string;\n\tprintProofSetup?: {\n\t\tBltn: string;\n\t} | {\n\t\tprofile: string;\n\t\tInte: string;\n\t\tMpBl: boolean;\n\t\tpaperWhite: boolean;\n\t};\n}\n\naddHandler(\n\t1082,\n\ttarget => target.printInformation !== undefined,\n\t(reader, target) => {\n\t\tconst desc: PrintInformationDescriptor = readVersionAndDescriptor(reader);\n\n\t\ttarget.printInformation = {\n\t\t\tprinterName: desc.printerName || '',\n\t\t\trenderingIntent: Inte.decode(desc.Inte ?? 'Inte.Img '),\n\t\t};\n\n\t\tconst info = target.printInformation;\n\n\t\tif (desc.PstS !== undefined) info.printerManagesColors = desc.PstS;\n\t\tif (desc['Nm  '] !== undefined) info.printerProfile = desc['Nm  '];\n\t\tif (desc.MpBl !== undefined) info.blackPointCompensation = desc.MpBl;\n\t\tif (desc.printSixteenBit !== undefined) info.printSixteenBit = desc.printSixteenBit;\n\t\tif (desc.hardProof !== undefined) info.hardProof = desc.hardProof;\n\t\tif (desc.printProofSetup) {\n\t\t\tif ('Bltn' in desc.printProofSetup) {\n\t\t\t\tinfo.proofSetup = { builtin: desc.printProofSetup.Bltn.split('.')[1] };\n\t\t\t} else {\n\t\t\t\tinfo.proofSetup = {\n\t\t\t\t\tprofile: desc.printProofSetup.profile,\n\t\t\t\t\trenderingIntent: Inte.decode(desc.printProofSetup.Inte ?? 'Inte.Img '),\n\t\t\t\t\tblackPointCompensation: !!desc.printProofSetup.MpBl,\n\t\t\t\t\tpaperWhite: !!desc.printProofSetup.paperWhite,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tconst info = target.printInformation!;\n\t\tconst desc: PrintInformationDescriptor = {};\n\n\t\tif (info.printerManagesColors) {\n\t\t\tdesc.PstS = true;\n\t\t} else {\n\t\t\tif (info.hardProof !== undefined) desc.hardProof = !!info.hardProof;\n\t\t\tdesc.ClrS = 'ClrS.RGBC'; // TODO: ???\n\t\t\tdesc['Nm  '] = info.printerProfile ?? 'CIE RGB';\n\t\t}\n\n\t\tdesc.Inte = Inte.encode(info.renderingIntent);\n\n\t\tif (!info.printerManagesColors) desc.MpBl = !!info.blackPointCompensation;\n\n\t\tdesc.printSixteenBit = !!info.printSixteenBit;\n\t\tdesc.printerName = info.printerName || '';\n\n\t\tif (info.proofSetup && 'profile' in info.proofSetup) {\n\t\t\tdesc.printProofSetup = {\n\t\t\t\tprofile: info.proofSetup.profile || '',\n\t\t\t\tInte: Inte.encode(info.proofSetup.renderingIntent),\n\t\t\t\tMpBl: !!info.proofSetup.blackPointCompensation,\n\t\t\t\tpaperWhite: !!info.proofSetup.paperWhite,\n\t\t\t};\n\t\t} else {\n\t\t\tdesc.printProofSetup = {\n\t\t\t\tBltn: info.proofSetup?.builtin ? `builtinProof.${info.proofSetup.builtin}` : 'builtinProof.proofCMYK',\n\t\t\t};\n\t\t}\n\n\t\twriteVersionAndDescriptor(writer, '', 'printOutput', desc);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1083, // Print style\n\ttarget => (target as any)._ir1083 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1083', left());\n\t\t(target as any)._ir1083 = readBytes(reader, left());\n\n\t\t// TODO:\n\t\t// const desc = readVersionAndDescriptor(reader);\n\t\t// console.log('1083', require('util').inspect(desc, false, 99, true));\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1083);\n\t},\n);\n\naddHandler(\n\t1005,\n\ttarget => target.resolutionInfo !== undefined,\n\t(reader, target) => {\n\t\tconst horizontalResolution = readFixedPoint32(reader);\n\t\tconst horizontalResolutionUnit = readUint16(reader);\n\t\tconst widthUnit = readUint16(reader);\n\t\tconst verticalResolution = readFixedPoint32(reader);\n\t\tconst verticalResolutionUnit = readUint16(reader);\n\t\tconst heightUnit = readUint16(reader);\n\n\t\ttarget.resolutionInfo = {\n\t\t\thorizontalResolution,\n\t\t\thorizontalResolutionUnit: RESOLUTION_UNITS[horizontalResolutionUnit] || 'PPI' as any,\n\t\t\twidthUnit: MEASUREMENT_UNITS[widthUnit] || 'Inches' as any,\n\t\t\tverticalResolution,\n\t\t\tverticalResolutionUnit: RESOLUTION_UNITS[verticalResolutionUnit] || 'PPI' as any,\n\t\t\theightUnit: MEASUREMENT_UNITS[heightUnit] || 'Inches' as any,\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst info = target.resolutionInfo!;\n\n\t\twriteFixedPoint32(writer, info.horizontalResolution || 0);\n\t\twriteUint16(writer, Math.max(1, RESOLUTION_UNITS.indexOf(info.horizontalResolutionUnit)));\n\t\twriteUint16(writer, Math.max(1, MEASUREMENT_UNITS.indexOf(info.widthUnit)));\n\t\twriteFixedPoint32(writer, info.verticalResolution || 0);\n\t\twriteUint16(writer, Math.max(1, RESOLUTION_UNITS.indexOf(info.verticalResolutionUnit)));\n\t\twriteUint16(writer, Math.max(1, MEASUREMENT_UNITS.indexOf(info.heightUnit)));\n\t},\n);\n\nconst printScaleStyles = ['centered', 'size to fit', 'user defined'];\n\naddHandler(\n\t1062,\n\ttarget => target.printScale !== undefined,\n\t(reader, target) => {\n\t\ttarget.printScale = {\n\t\t\tstyle: printScaleStyles[readInt16(reader)] as any,\n\t\t\tx: readFloat32(reader),\n\t\t\ty: readFloat32(reader),\n\t\t\tscale: readFloat32(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst { style, x, y, scale } = target.printScale!;\n\t\twriteInt16(writer, Math.max(0, printScaleStyles.indexOf(style!)));\n\t\twriteFloat32(writer, x || 0);\n\t\twriteFloat32(writer, y || 0);\n\t\twriteFloat32(writer, scale || 0);\n\t},\n);\n\naddHandler(\n\t1006,\n\ttarget => target.alphaChannelNames !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaChannelNames = [];\n\n\t\twhile (left()) {\n\t\t\tconst value = readPascalString(reader, 1);\n\t\t\ttarget.alphaChannelNames.push(value);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const name of target.alphaChannelNames!) {\n\t\t\twritePascalString(writer, name, 1);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1045,\n\ttarget => target.alphaChannelNames !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaChannelNames = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.alphaChannelNames.push(readUnicodeString(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const name of target.alphaChannelNames!) {\n\t\t\twriteUnicodeStringWithPadding(writer, name);\n\t\t}\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1077,\n\ttarget => (target as any)._ir1077 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1077', left());\n\t\t(target as any)._ir1077 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1077);\n\t},\n);\n\naddHandler(\n\t1053,\n\ttarget => target.alphaIdentifiers !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.alphaIdentifiers = [];\n\n\t\twhile (left() >= 4) {\n\t\t\ttarget.alphaIdentifiers.push(readUint32(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const id of target.alphaIdentifiers!) {\n\t\t\twriteUint32(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1010,\n\ttarget => target.backgroundColor !== undefined,\n\t(reader, target) => target.backgroundColor = readColor(reader),\n\t(writer, target) => writeColor(writer, target.backgroundColor!),\n);\n\naddHandler(\n\t1037,\n\ttarget => target.globalAngle !== undefined,\n\t(reader, target) => target.globalAngle = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.globalAngle!),\n);\n\naddHandler(\n\t1049,\n\ttarget => target.globalAltitude !== undefined,\n\t(reader, target) => target.globalAltitude = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.globalAltitude!),\n);\n\naddHandler(\n\t1011,\n\ttarget => target.printFlags !== undefined,\n\t(reader, target) => {\n\t\ttarget.printFlags = {\n\t\t\tlabels: !!readUint8(reader),\n\t\t\tcropMarks: !!readUint8(reader),\n\t\t\tcolorBars: !!readUint8(reader),\n\t\t\tregistrationMarks: !!readUint8(reader),\n\t\t\tnegative: !!readUint8(reader),\n\t\t\tflip: !!readUint8(reader),\n\t\t\tinterpolate: !!readUint8(reader),\n\t\t\tcaption: !!readUint8(reader),\n\t\t\tprintFlags: !!readUint8(reader),\n\t\t};\n\t},\n\t(writer, target) => {\n\t\tconst flags = target.printFlags!;\n\t\twriteUint8(writer, flags.labels ? 1 : 0);\n\t\twriteUint8(writer, flags.cropMarks ? 1 : 0);\n\t\twriteUint8(writer, flags.colorBars ? 1 : 0);\n\t\twriteUint8(writer, flags.registrationMarks ? 1 : 0);\n\t\twriteUint8(writer, flags.negative ? 1 : 0);\n\t\twriteUint8(writer, flags.flip ? 1 : 0);\n\t\twriteUint8(writer, flags.interpolate ? 1 : 0);\n\t\twriteUint8(writer, flags.caption ? 1 : 0);\n\t\twriteUint8(writer, flags.printFlags ? 1 : 0);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t10000, // Print flags\n\ttarget => (target as any)._ir10000 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 10000', left());\n\t\t(target as any)._ir10000 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir10000);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1013, // Color halftoning\n\ttarget => (target as any)._ir1013 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1013', left());\n\t\t(target as any)._ir1013 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1013);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1016, // Color transfer functions\n\ttarget => (target as any)._ir1016 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1016', left());\n\t\t(target as any)._ir1016 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1016);\n\t},\n);\n\naddHandler(\n\t1024,\n\ttarget => target.layerState !== undefined,\n\t(reader, target) => target.layerState = readUint16(reader),\n\t(writer, target) => writeUint16(writer, target.layerState!),\n);\n\naddHandler(\n\t1026,\n\ttarget => target.layersGroup !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.layersGroup = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.layersGroup.push(readUint16(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const g of target.layersGroup!) {\n\t\t\twriteUint16(writer, g);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1072,\n\ttarget => target.layerGroupsEnabledId !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.layerGroupsEnabledId = [];\n\n\t\twhile (left()) {\n\t\t\ttarget.layerGroupsEnabledId.push(readUint8(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tfor (const id of target.layerGroupsEnabledId!) {\n\t\t\twriteUint8(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1069,\n\ttarget => target.layerSelectionIds !== undefined,\n\t(reader, target) => {\n\t\tlet count = readUint16(reader);\n\t\ttarget.layerSelectionIds = [];\n\n\t\twhile (count--) {\n\t\t\ttarget.layerSelectionIds.push(readUint32(reader));\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteUint16(writer, target.layerSelectionIds!.length);\n\n\t\tfor (const id of target.layerSelectionIds!) {\n\t\t\twriteUint32(writer, id);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1032,\n\ttarget => target.gridAndGuidesInformation !== undefined,\n\t(reader, target) => {\n\t\tconst version = readUint32(reader);\n\t\tconst horizontal = readUint32(reader);\n\t\tconst vertical = readUint32(reader);\n\t\tconst count = readUint32(reader);\n\n\t\tif (version !== 1) throw new Error(`Invalid 1032 resource version: ${version}`);\n\n\t\ttarget.gridAndGuidesInformation = {\n\t\t\tgrid: { horizontal, vertical },\n\t\t\tguides: [],\n\t\t};\n\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\ttarget.gridAndGuidesInformation.guides!.push({\n\t\t\t\tlocation: readUint32(reader) / 32,\n\t\t\t\tdirection: readUint8(reader) ? 'horizontal' : 'vertical'\n\t\t\t});\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tconst info = target.gridAndGuidesInformation!;\n\t\tconst grid = info.grid || { horizontal: 18 * 32, vertical: 18 * 32 };\n\t\tconst guides = info.guides || [];\n\n\t\twriteUint32(writer, 1);\n\t\twriteUint32(writer, grid.horizontal);\n\t\twriteUint32(writer, grid.vertical);\n\t\twriteUint32(writer, guides.length);\n\n\t\tfor (const g of guides) {\n\t\t\twriteUint32(writer, g.location * 32);\n\t\t\twriteUint8(writer, g.direction === 'horizontal' ? 1 : 0);\n\t\t}\n\t},\n);\n\naddHandler(\n\t1054,\n\ttarget => target.urlsList !== undefined,\n\t(reader, target, _, options) => {\n\t\tconst count = readUint32(reader);\n\n\t\tif (count) {\n\t\t\tif (!options.throwForMissingFeatures) return;\n\t\t\tthrow new Error('Not implemented: URL List');\n\t\t}\n\n\t\t// TODO: read actual URL list\n\t\ttarget.urlsList = [];\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, target.urlsList!.length);\n\n\t\t// TODO: write actual URL list\n\t\tif (target.urlsList!.length) {\n\t\t\tthrow new Error('Not implemented: URL List');\n\t\t}\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1050, // Slices\n\ttarget => (target as any)._ir1050 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1050', left());\n\t\t(target as any)._ir1050 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1050);\n\t},\n);\n\naddHandler(\n\t1064,\n\ttarget => target.pixelAspectRatio !== undefined,\n\t(reader, target) => {\n\t\tif (readUint32(reader) > 2) throw new Error('Invalid pixelAspectRatio version');\n\t\ttarget.pixelAspectRatio = { aspect: readFloat64(reader) };\n\t},\n\t(writer, target) => {\n\t\twriteUint32(writer, 2); // version\n\t\twriteFloat64(writer, target.pixelAspectRatio!.aspect);\n\t},\n);\n\naddHandler(\n\t1041,\n\ttarget => target.iccUntaggedProfile !== undefined,\n\t(reader, target) => {\n\t\ttarget.iccUntaggedProfile = !!readUint8(reader);\n\t},\n\t(writer, target) => {\n\t\twriteUint8(writer, target.iccUntaggedProfile ? 1 : 0);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1039, // ICC Profile\n\ttarget => (target as any)._ir1039 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1039', left());\n\t\t(target as any)._ir1039 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1039);\n\t},\n);\n\naddHandler(\n\t1044,\n\ttarget => target.idsSeedNumber !== undefined,\n\t(reader, target) => target.idsSeedNumber = readUint32(reader),\n\t(writer, target) => writeUint32(writer, target.idsSeedNumber!),\n);\n\naddHandler(\n\t1036,\n\ttarget => target.thumbnail !== undefined || target.thumbnailRaw !== undefined,\n\t(reader, target, left, options) => {\n\t\tconst format = readUint32(reader); // 1 = kJpegRGB, 0 = kRawRGB\n\t\tconst width = readUint32(reader);\n\t\tconst height = readUint32(reader);\n\t\treadUint32(reader); // widthBytes = (width * bits_per_pixel + 31) / 32 * 4.\n\t\treadUint32(reader); // totalSize = widthBytes * height * planes\n\t\treadUint32(reader); // sizeAfterCompression\n\t\tconst bitsPerPixel = readUint16(reader); // 24\n\t\tconst planes = readUint16(reader); // 1\n\n\t\tif (format !== 1 || bitsPerPixel !== 24 || planes !== 1) {\n\t\t\toptions.logMissingFeatures && console.log(`Invalid thumbnail data (format: ${format}, bitsPerPixel: ${bitsPerPixel}, planes: ${planes})`);\n\t\t\tskipBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst size = left();\n\t\tconst data = readBytes(reader, size);\n\n\t\tif (options.useRawThumbnail) {\n\t\t\ttarget.thumbnailRaw = { width, height, data };\n\t\t} else {\n\t\t\ttarget.thumbnail = createCanvasFromData(data);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\tlet width = 0;\n\t\tlet height = 0;\n\t\tlet data: Uint8Array;\n\n\t\tif (target.thumbnailRaw) {\n\t\t\twidth = target.thumbnailRaw.width;\n\t\t\theight = target.thumbnailRaw.height;\n\t\t\tdata = target.thumbnailRaw.data;\n\t\t} else {\n\t\t\twidth = target.thumbnail!.width;\n\t\t\theight = target.thumbnail!.height;\n\t\t\tdata = toByteArray(target.thumbnail!.toDataURL('image/jpeg', 1).substr('data:image/jpeg;base64,'.length));\n\t\t}\n\n\t\tconst bitsPerPixel = 24;\n\t\tconst widthBytes = Math.floor((width * bitsPerPixel + 31) / 32) * 4;\n\t\tconst planes = 1;\n\t\tconst totalSize = widthBytes * height * planes;\n\t\tconst sizeAfterCompression = data.length;\n\n\t\twriteUint32(writer, 1); // 1 = kJpegRGB\n\t\twriteUint32(writer, width);\n\t\twriteUint32(writer, height);\n\t\twriteUint32(writer, widthBytes);\n\t\twriteUint32(writer, totalSize);\n\t\twriteUint32(writer, sizeAfterCompression);\n\t\twriteUint16(writer, bitsPerPixel);\n\t\twriteUint16(writer, planes);\n\t\twriteBytes(writer, data);\n\t},\n);\n\naddHandler(\n\t1057,\n\ttarget => target.versionInfo !== undefined,\n\t(reader, target, left) => {\n\t\tconst version = readUint32(reader);\n\t\tif (version !== 1) throw new Error('Invalid versionInfo version');\n\n\t\ttarget.versionInfo = {\n\t\t\thasRealMergedData: !!readUint8(reader),\n\t\t\twriterName: readUnicodeString(reader),\n\t\t\treaderName: readUnicodeString(reader),\n\t\t\tfileVersion: readUint32(reader),\n\t\t};\n\n\t\tskipBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\tconst versionInfo = target.versionInfo!;\n\t\twriteUint32(writer, 1); // version\n\t\twriteUint8(writer, versionInfo.hasRealMergedData ? 1 : 0);\n\t\twriteUnicodeString(writer, versionInfo.writerName);\n\t\twriteUnicodeString(writer, versionInfo.readerName);\n\t\twriteUint32(writer, versionInfo.fileVersion);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1058, // EXIF data 1.\n\ttarget => (target as any)._ir1058 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1058', left());\n\t\t(target as any)._ir1058 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1058);\n\t},\n);\n\naddHandler(\n\t7000,\n\ttarget => target.imageReadyVariables !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.imageReadyVariables = readUtf8String(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteUtf8String(writer, target.imageReadyVariables!);\n\t},\n);\n\naddHandler(\n\t7001,\n\ttarget => target.imageReadyDataSets !== undefined,\n\t(reader, target, left) => {\n\t\ttarget.imageReadyDataSets = readUtf8String(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteUtf8String(writer, target.imageReadyDataSets!);\n\t},\n);\n\ninterface Descriptor1088 {\n\t'null': string[];\n}\n\naddHandler(\n\t1088,\n\ttarget => target.pathSelectionState !== undefined,\n\t(reader, target, _left) => {\n\t\tconst desc: Descriptor1088 = readVersionAndDescriptor(reader);\n\t\t// console.log(require('util').inspect(desc, false, 99, true));\n\t\ttarget.pathSelectionState = desc['null'];\n\t},\n\t(writer, target) => {\n\t\tconst desc: Descriptor1088 = { 'null': target.pathSelectionState! };\n\t\twriteVersionAndDescriptor(writer, '', 'null', desc);\n\t},\n);\n\nMOCK_HANDLERS && addHandler(\n\t1025,\n\ttarget => (target as any)._ir1025 !== undefined,\n\t(reader, target, left) => {\n\t\tLOG_MOCK_HANDLERS && console.log('image resource 1025', left());\n\t\t(target as any)._ir1025 = readBytes(reader, left());\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir1025);\n\t},\n);\n\nconst FrmD = createEnum<'auto' | 'none' | 'dispose'>('FrmD', '', {\n\tauto: 'Auto',\n\tnone: 'None',\n\tdispose: 'Disp',\n});\n\ninterface AnimationDescriptor {\n\tAFSt: number;\n\tFrIn: {\n\t\tFrID: number;\n\t\tFrDl: number;\n\t\tFrDs: string;\n\t\tFrGA?: number;\n\t}[];\n\tFSts: {\n\t\tFsID: number;\n\t\tAFrm: number;\n\t\tFsFr: number[];\n\t\tLCnt: number;\n\t}[];\n}\n\ninterface Animations {\n\tframes: {\n\t\tid: number;\n\t\tdelay: number;\n\t\tdispose?: 'auto' | 'none' | 'dispose';\n\t}[];\n\tanimations: {\n\t\tid: number;\n\t\tframes: number[];\n\t\trepeats?: number;\n\t}[];\n}\n\n// TODO: Unfinished\nMOCK_HANDLERS && addHandler(\n\t4000, // Plug-In resource(s)\n\ttarget => (target as any)._ir4000 !== undefined,\n\t(reader, target, left, { logMissingFeatures, logDevFeatures }) => {\n\t\tif (MOCK_HANDLERS) {\n\t\t\tLOG_MOCK_HANDLERS && console.log('image resource 4000', left());\n\t\t\t(target as any)._ir4000 = readBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = readSignature(reader);\n\n\t\tif (key === 'mani') {\n\t\t\tcheckSignature(reader, 'IRFR');\n\t\t\treadSection(reader, 1, left => {\n\t\t\t\twhile (left()) {\n\t\t\t\t\tcheckSignature(reader, '8BIM');\n\t\t\t\t\tconst key = readSignature(reader);\n\n\t\t\t\t\treadSection(reader, 1, left => {\n\t\t\t\t\t\tif (key === 'AnDs') {\n\t\t\t\t\t\t\tconst desc = readVersionAndDescriptor(reader) as AnimationDescriptor;\n\t\t\t\t\t\t\t// console.log('AnDs', desc);\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 AnDs', desc);\n\t\t\t\t\t\t\t// logDevFeatures && console.log('#4000 AnDs', require('util').inspect(desc, false, 99, true));\n\n\t\t\t\t\t\t\tconst result: Animations = {\n\t\t\t\t\t\t\t\t// desc.AFSt ???\n\t\t\t\t\t\t\t\tframes: desc.FrIn.map(x => ({\n\t\t\t\t\t\t\t\t\tid: x.FrID,\n\t\t\t\t\t\t\t\t\tdelay: x.FrDl / 100,\n\t\t\t\t\t\t\t\t\tdispose: x.FrDs ? FrmD.decode(x.FrDs) : 'auto', // missing == auto\n\t\t\t\t\t\t\t\t\t// x.FrGA ???\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\tanimations: desc.FSts.map(x => ({\n\t\t\t\t\t\t\t\t\tid: x.FsID,\n\t\t\t\t\t\t\t\t\tframes: x.FsFr,\n\t\t\t\t\t\t\t\t\trepeats: x.LCnt,\n\t\t\t\t\t\t\t\t\t// x.AFrm ???\n\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 AnDs:result', result);\n\t\t\t\t\t\t\t// logDevFeatures && console.log('#4000 AnDs:result', require('util').inspect(result, false, 99, true));\n\t\t\t\t\t\t} else if (key === 'Roll') {\n\t\t\t\t\t\t\tconst bytes = readBytes(reader, left());\n\t\t\t\t\t\t\tlogDevFeatures && console.log('#4000 Roll', bytes);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogMissingFeatures && console.log('Unhandled subsection in #4000', key);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (key === 'mopt') {\n\t\t\tconst bytes = readBytes(reader, left());\n\t\t\tlogDevFeatures && console.log('#4000 mopt', bytes);\n\t\t} else {\n\t\t\tlogMissingFeatures && console.log('Unhandled key in #4000:', key);\n\t\t\treturn;\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir4000);\n\t},\n);\n\n// TODO: Unfinished\nMOCK_HANDLERS && addHandler(\n\t4001, // Plug-In resource(s)\n\ttarget => (target as any)._ir4001 !== undefined,\n\t(reader, target, left, { logMissingFeatures, logDevFeatures }) => {\n\t\tif (MOCK_HANDLERS) {\n\t\t\tLOG_MOCK_HANDLERS && console.log('image resource 4001', left());\n\t\t\t(target as any)._ir4001 = readBytes(reader, left());\n\t\t\treturn;\n\t\t}\n\n\t\tconst key = readSignature(reader);\n\n\t\tif (key === 'mfri') {\n\t\t\tconst version = readUint32(reader);\n\t\t\tif (version !== 2) throw new Error('Invalid mfri version');\n\n\t\t\tconst length = readUint32(reader);\n\t\t\tconst bytes = readBytes(reader, length);\n\t\t\tlogDevFeatures && console.log('mfri', bytes);\n\t\t} else if (key === 'mset') {\n\t\t\tconst desc = readVersionAndDescriptor(reader);\n\t\t\tlogDevFeatures && console.log('mset', desc);\n\t\t} else {\n\t\t\tlogMissingFeatures && console.log('Unhandled key in #4001', key);\n\t\t}\n\t},\n\t(writer, target) => {\n\t\twriteBytes(writer, (target as any)._ir4001);\n\t},\n);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","import { LayerEffectsInfo, BevelStyle, LayerEffectShadow } from './psd';\nimport { toBlendMode, fromBlendMode } from './helpers';\nimport {\n\tPsdReader, checkSignature, readSignature, skipBytes, readUint16, readUint8,\n\treadUint32, readFixedPoint32, readColor\n} from './psdReader';\nimport {\n\tPsdWriter, writeSignature, writeUint16, writeZeros, writeFixedPoint32,\n\twriteUint8, writeUint32, writeColor\n} from './psdWriter';\n\nconst bevelStyles: BevelStyle[] = [\n\tundefined as any, 'outer bevel', 'inner bevel', 'emboss', 'pillow emboss', 'stroke emboss'\n];\n\nfunction readBlendMode(reader: PsdReader) {\n\tcheckSignature(reader, '8BIM');\n\treturn toBlendMode[readSignature(reader)] || 'normal';\n}\n\nfunction writeBlendMode(writer: PsdWriter, mode: string | undefined) {\n\twriteSignature(writer, '8BIM');\n\twriteSignature(writer, fromBlendMode[mode!] || 'norm');\n}\n\nfunction readFixedPoint8(reader: PsdReader) {\n\treturn readUint8(reader) / 0xff;\n}\n\nfunction writeFixedPoint8(writer: PsdWriter, value: number) {\n\twriteUint8(writer, Math.round(value * 0xff) | 0);\n}\n\nexport function readEffects(reader: PsdReader) {\n\tconst version = readUint16(reader);\n\tif (version !== 0) throw new Error(`Invalid effects layer version: ${version}`);\n\n\tconst effectsCount = readUint16(reader);\n\tconst effects: LayerEffectsInfo = <any>{};\n\n\tfor (let i = 0; i < effectsCount; i++) {\n\t\tcheckSignature(reader, '8BIM');\n\t\tconst type = readSignature(reader);\n\n\t\tswitch (type) {\n\t\t\tcase 'cmnS': { // common state (see See Effects layer, common state info)\n\t\t\t\tconst size = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\t\t\t\tconst visible = !!readUint8(reader);\n\t\t\t\tskipBytes(reader, 2);\n\n\t\t\t\tif (size !== 7 || version !== 0 || !visible) throw new Error(`Invalid effects common state`);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'dsdw': // drop shadow (see See Effects layer, drop shadow and inner shadow info)\n\t\t\tcase 'isdw': { // inner shadow (see See Effects layer, drop shadow and inner shadow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 41 && blockSize !== 51) throw new Error(`Invalid shadow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid shadow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst angle = readFixedPoint32(reader);\n\t\t\t\tconst distance = readFixedPoint32(reader);\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst useGlobalLight = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tif (blockSize >= 51) readColor(reader); // native color\n\t\t\t\tconst shadowInfo: LayerEffectShadow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tdistance: { units: 'Pixels', value: distance },\n\t\t\t\t\tangle, color, blendMode, enabled, useGlobalLight, opacity\n\t\t\t\t};\n\n\t\t\t\tif (type === 'dsdw') {\n\t\t\t\t\teffects.dropShadow = [shadowInfo];\n\t\t\t\t} else {\n\t\t\t\t\teffects.innerShadow = [shadowInfo];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'oglw': { // outer glow (see See Effects layer, outer glow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 32 && blockSize !== 42) throw new Error(`Invalid outer glow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid outer glow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tif (blockSize >= 42) readColor(reader); // native color\n\n\t\t\t\teffects.outerGlow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tcolor, blendMode, enabled, opacity\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'iglw': { // inner glow (see See Effects layer, inner glow info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 32 && blockSize !== 43) throw new Error(`Invalid inner glow size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid inner glow version: ${version}`);\n\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\treadFixedPoint32(reader); // intensity\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\n\t\t\t\tif (blockSize >= 43) {\n\t\t\t\t\treadUint8(reader); // inverted\n\t\t\t\t\treadColor(reader); // native color\n\t\t\t\t}\n\n\t\t\t\teffects.innerGlow = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tcolor, blendMode, enabled, opacity\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'bevl': { // bevel (see See Effects layer, bevel info)\n\t\t\t\tconst blockSize = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (blockSize !== 58 && blockSize !== 78) throw new Error(`Invalid bevel size: ${blockSize}`);\n\t\t\t\tif (version !== 0 && version !== 2) throw new Error(`Invalid bevel version: ${version}`);\n\n\t\t\t\tconst angle = readFixedPoint32(reader);\n\t\t\t\tconst strength = readFixedPoint32(reader);\n\t\t\t\tconst size = readFixedPoint32(reader);\n\t\t\t\tconst highlightBlendMode = readBlendMode(reader);\n\t\t\t\tconst shadowBlendMode = readBlendMode(reader);\n\t\t\t\tconst highlightColor = readColor(reader);\n\t\t\t\tconst shadowColor = readColor(reader);\n\t\t\t\tconst style = bevelStyles[readUint8(reader)] || 'inner bevel';\n\t\t\t\tconst highlightOpacity = readFixedPoint8(reader);\n\t\t\t\tconst shadowOpacity = readFixedPoint8(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\tconst useGlobalLight = !!readUint8(reader);\n\t\t\t\tconst direction = readUint8(reader) ? 'down' : 'up';\n\n\t\t\t\tif (blockSize >= 78) {\n\t\t\t\t\treadColor(reader); // real highlight color\n\t\t\t\t\treadColor(reader); // real shadow color\n\t\t\t\t}\n\n\t\t\t\teffects.bevel = {\n\t\t\t\t\tsize: { units: 'Pixels', value: size },\n\t\t\t\t\tangle, strength, highlightBlendMode, shadowBlendMode, highlightColor, shadowColor,\n\t\t\t\t\tstyle, highlightOpacity, shadowOpacity, enabled, useGlobalLight, direction,\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'sofi': { // solid fill (Photoshop 7.0) (see See Effects layer, solid fill (added in Photoshop 7.0))\n\t\t\t\tconst size = readUint32(reader);\n\t\t\t\tconst version = readUint32(reader);\n\n\t\t\t\tif (size !== 34) throw new Error(`Invalid effects solid fill info size: ${size}`);\n\t\t\t\tif (version !== 2) throw new Error(`Invalid effects solid fill info version: ${version}`);\n\n\t\t\t\tconst blendMode = readBlendMode(reader);\n\t\t\t\tconst color = readColor(reader);\n\t\t\t\tconst opacity = readFixedPoint8(reader);\n\t\t\t\tconst enabled = !!readUint8(reader);\n\t\t\t\treadColor(reader); // native color\n\n\t\t\t\teffects.solidFill = [{ blendMode, color, opacity, enabled }];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Invalid effect type: '${type}'`);\n\t\t}\n\t}\n\n\treturn effects;\n}\n\nfunction writeShadowInfo(writer: PsdWriter, shadow: LayerEffectShadow) {\n\twriteUint32(writer, 51);\n\twriteUint32(writer, 2);\n\twriteFixedPoint32(writer, shadow.size && shadow.size.value || 0);\n\twriteFixedPoint32(writer, 0); // intensity\n\twriteFixedPoint32(writer, shadow.angle || 0);\n\twriteFixedPoint32(writer, shadow.distance && shadow.distance.value || 0);\n\twriteColor(writer, shadow.color);\n\twriteBlendMode(writer, shadow.blendMode);\n\twriteUint8(writer, shadow.enabled ? 1 : 0);\n\twriteUint8(writer, shadow.useGlobalLight ? 1 : 0);\n\twriteFixedPoint8(writer, shadow.opacity ?? 1);\n\twriteColor(writer, shadow.color); // native color\n}\n\nexport function writeEffects(writer: PsdWriter, effects: LayerEffectsInfo) {\n\tconst dropShadow = effects.dropShadow?.[0];\n\tconst innerShadow = effects.innerShadow?.[0];\n\tconst outerGlow = effects.outerGlow;\n\tconst innerGlow = effects.innerGlow;\n\tconst bevel = effects.bevel;\n\tconst solidFill = effects.solidFill?.[0];\n\n\tlet count = 1;\n\tif (dropShadow) count++;\n\tif (innerShadow) count++;\n\tif (outerGlow) count++;\n\tif (innerGlow) count++;\n\tif (bevel) count++;\n\tif (solidFill) count++;\n\n\twriteUint16(writer, 0);\n\twriteUint16(writer, count);\n\n\twriteSignature(writer, '8BIM');\n\twriteSignature(writer, 'cmnS');\n\twriteUint32(writer, 7); // size\n\twriteUint32(writer, 0); // version\n\twriteUint8(writer, 1); // visible\n\twriteZeros(writer, 2);\n\n\tif (dropShadow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'dsdw');\n\t\twriteShadowInfo(writer, dropShadow);\n\t}\n\n\tif (innerShadow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'isdw');\n\t\twriteShadowInfo(writer, innerShadow);\n\t}\n\n\tif (outerGlow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'oglw');\n\t\twriteUint32(writer, 42);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, outerGlow.size?.value || 0);\n\t\twriteFixedPoint32(writer, 0); // intensity\n\t\twriteColor(writer, outerGlow.color);\n\t\twriteBlendMode(writer, outerGlow.blendMode);\n\t\twriteUint8(writer, outerGlow.enabled ? 1 : 0);\n\t\twriteFixedPoint8(writer, outerGlow.opacity || 0);\n\t\twriteColor(writer, outerGlow.color);\n\t}\n\n\tif (innerGlow) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'iglw');\n\t\twriteUint32(writer, 43);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, innerGlow.size?.value || 0);\n\t\twriteFixedPoint32(writer, 0); // intensity\n\t\twriteColor(writer, innerGlow.color);\n\t\twriteBlendMode(writer, innerGlow.blendMode);\n\t\twriteUint8(writer, innerGlow.enabled ? 1 : 0);\n\t\twriteFixedPoint8(writer, innerGlow.opacity || 0);\n\t\twriteUint8(writer, 0); // inverted\n\t\twriteColor(writer, innerGlow.color);\n\t}\n\n\tif (bevel) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'bevl');\n\t\twriteUint32(writer, 78);\n\t\twriteUint32(writer, 2);\n\t\twriteFixedPoint32(writer, bevel.angle || 0);\n\t\twriteFixedPoint32(writer, bevel.strength || 0);\n\t\twriteFixedPoint32(writer, bevel.size?.value || 0);\n\t\twriteBlendMode(writer, bevel.highlightBlendMode);\n\t\twriteBlendMode(writer, bevel.shadowBlendMode);\n\t\twriteColor(writer, bevel.highlightColor);\n\t\twriteColor(writer, bevel.shadowColor);\n\t\tconst style = bevelStyles.indexOf(bevel.style!);\n\t\twriteUint8(writer, style <= 0 ? 1 : style);\n\t\twriteFixedPoint8(writer, bevel.highlightOpacity || 0);\n\t\twriteFixedPoint8(writer, bevel.shadowOpacity || 0);\n\t\twriteUint8(writer, bevel.enabled ? 1 : 0);\n\t\twriteUint8(writer, bevel.useGlobalLight ? 1 : 0);\n\t\twriteUint8(writer, bevel.direction === 'down' ? 1 : 0);\n\t\twriteColor(writer, bevel.highlightColor);\n\t\twriteColor(writer, bevel.shadowColor);\n\t}\n\n\tif (solidFill) {\n\t\twriteSignature(writer, '8BIM');\n\t\twriteSignature(writer, 'sofi');\n\t\twriteUint32(writer, 34);\n\t\twriteUint32(writer, 2);\n\t\twriteBlendMode(writer, solidFill.blendMode);\n\t\twriteColor(writer, solidFill.color);\n\t\twriteFixedPoint8(writer, solidFill.opacity || 0);\n\t\twriteUint8(writer, solidFill.enabled ? 1 : 0);\n\t\twriteColor(writer, solidFill.color);\n\t}\n}\n","function charLengthInBytes(code: number): number {\r\n\tif ((code & 0xffffff80) === 0) {\r\n\t\treturn 1;\r\n\t} else if ((code & 0xfffff800) === 0) {\r\n\t\treturn 2;\r\n\t} else if ((code & 0xffff0000) === 0) {\r\n\t\treturn 3;\r\n\t} else {\r\n\t\treturn 4;\r\n\t}\r\n}\r\n\r\nexport function stringLengthInBytes(value: string): number {\r\n\tlet result = 0;\r\n\r\n\tfor (let i = 0; i < value.length; i++) {\r\n\t\tconst code = value.charCodeAt(i);\r\n\r\n\t\t// high surrogate\r\n\t\tif (code >= 0xd800 && code <= 0xdbff) {\r\n\t\t\tif ((i + 1) < value.length) {\r\n\t\t\t\tconst extra = value.charCodeAt(i + 1);\r\n\r\n\t\t\t\t// low surrogate\r\n\t\t\t\tif ((extra & 0xfc00) === 0xdc00) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tresult += charLengthInBytes(((code & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tresult += charLengthInBytes(code);\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction writeCharacter(buffer: Uint8Array | Buffer, offset: number, code: number): number {\r\n\tconst length = charLengthInBytes(code);\r\n\r\n\tswitch (length) {\r\n\t\tcase 1:\r\n\t\t\tbuffer[offset] = code;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tbuffer[offset] = ((code >> 6) & 0x1f) | 0xc0;\r\n\t\t\tbuffer[offset + 1] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tbuffer[offset] = ((code >> 12) & 0x0f) | 0xe0;\r\n\t\t\tbuffer[offset + 1] = ((code >> 6) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 2] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbuffer[offset] = ((code >> 18) & 0x07) | 0xf0;\r\n\t\t\tbuffer[offset + 1] = ((code >> 12) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 2] = ((code >> 6) & 0x3f) | 0x80;\r\n\t\t\tbuffer[offset + 3] = (code & 0x3f) | 0x80;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn length;\r\n}\r\n\r\nexport function encodeStringTo(buffer: Uint8Array | Buffer, offset: number, value: string): number {\r\n\tfor (let i = 0; i < value.length; i++) {\r\n\t\tconst code = value.charCodeAt(i);\r\n\r\n\t\t// high surrogate\r\n\t\tif (code >= 0xd800 && code <= 0xdbff) {\r\n\t\t\tif ((i + 1) < value.length) {\r\n\t\t\t\tconst extra = value.charCodeAt(i + 1);\r\n\r\n\t\t\t\t// low surrogate\r\n\t\t\t\tif ((extra & 0xfc00) === 0xdc00) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tconst fullCode = ((code & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\r\n\t\t\t\t\toffset += writeCharacter(buffer, offset, fullCode);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\toffset += writeCharacter(buffer, offset, code);\r\n\t\t}\r\n\t}\r\n\r\n\treturn offset;\r\n}\r\n\r\nexport function encodeString(value: string): Uint8Array {\r\n\tconst buffer = new Uint8Array(stringLengthInBytes(value));\r\n\tencodeStringTo(buffer, 0, value);\r\n\treturn buffer;\r\n}\r\n\r\nfunction continuationByte(buffer: Uint8Array, index: number): number {\r\n\tif (index >= buffer.length) {\r\n\t\tthrow Error('Invalid byte index');\r\n\t}\r\n\r\n\tconst continuationByte = buffer[index];\r\n\r\n\tif ((continuationByte & 0xC0) === 0x80) {\r\n\t\treturn continuationByte & 0x3F;\r\n\t} else {\r\n\t\tthrow Error('Invalid continuation byte');\r\n\t}\r\n}\r\n\r\nexport function decodeString(value: Uint8Array): string {\r\n\tlet result = '';\r\n\r\n\tfor (let i = 0; i < value.length;) {\r\n\t\tconst byte1 = value[i++];\r\n\t\tlet code: number;\r\n\r\n\t\tif ((byte1 & 0x80) === 0) {\r\n\t\t\tcode = byte1;\r\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x1f) << 6) | byte2;\r\n\r\n\t\t\tif (code < 0x80) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tconst byte3 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x0f) << 12) | (byte2 << 6) | byte3;\r\n\r\n\t\t\tif (code < 0x0800) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\r\n\t\t\tif (code >= 0xd800 && code <= 0xdfff) {\r\n\t\t\t\tthrow Error(`Lone surrogate U+${code.toString(16).toUpperCase()} is not a scalar value`);\r\n\t\t\t}\r\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\r\n\t\t\tconst byte2 = continuationByte(value, i++);\r\n\t\t\tconst byte3 = continuationByte(value, i++);\r\n\t\t\tconst byte4 = continuationByte(value, i++);\r\n\t\t\tcode = ((byte1 & 0x0f) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\r\n\r\n\t\t\tif (code < 0x010000 || code > 0x10ffff) {\r\n\t\t\t\tthrow Error('Invalid continuation byte');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow Error('Invalid UTF-8 detected');\r\n\t\t}\r\n\r\n\t\tif (code > 0xffff) {\r\n\t\t\tcode -= 0x10000;\r\n\t\t\tresult += String.fromCharCode(code >>> 10 & 0x3ff | 0xd800);\r\n\t\t\tcode = 0xdc00 | code & 0x3ff;\r\n\t\t}\r\n\r\n\t\tresult += String.fromCharCode(code);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n","function isWhitespace(char: number) {\r\n\t// ' ', '\\n', '\\r', '\\t'\r\n\treturn char === 32 || char === 10 || char === 13 || char === 9;\r\n}\r\n\r\nfunction isNumber(char: number) {\r\n\t// 0123456789.-\r\n\treturn (char >= 48 && char <= 57) || char === 46 || char === 45;\r\n}\r\n\r\nexport function parseEngineData(data: number[] | Uint8Array) {\r\n\tlet index = 0;\r\n\r\n\tfunction skipWhitespace() {\r\n\t\twhile (index < data.length && isWhitespace(data[index])) {\r\n\t\t\tindex++;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getTextByte() {\r\n\t\tlet byte = data[index];\r\n\t\tindex++;\r\n\r\n\t\tif (byte === 92) { // \\\r\n\t\t\tbyte = data[index];\r\n\t\t\tindex++;\r\n\t\t}\r\n\r\n\t\treturn byte;\r\n\t}\r\n\r\n\tfunction getText() {\r\n\t\tlet result = '';\r\n\r\n\t\tif (data[index] === 41) { // )\r\n\t\t\tindex++;\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\t// Strings start with utf-16 BOM\r\n\t\tif (data[index] !== 0xFE || data[index + 1] !== 0xFF) {\r\n\t\t\tthrow new Error('Invalid utf-16 BOM');\r\n\t\t}\r\n\r\n\t\tindex += 2;\r\n\r\n\t\t// ), ( and \\ characters are escaped in ascii manner, remove the escapes before interpreting\r\n\t\t// the bytes as utf-16\r\n\t\twhile (index < data.length && data[index] !== 41) { // )\r\n\t\t\tconst high = getTextByte();\r\n\t\t\tconst low = getTextByte();\r\n\t\t\tconst char = (high << 8) | low;\r\n\t\t\tresult += String.fromCharCode(char);\r\n\t\t}\r\n\r\n\t\tindex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tlet root: any = null;\r\n\tconst stack: any[] = [];\r\n\r\n\tfunction pushContainer(value: any) {\r\n\t\tif (!stack.length) {\r\n\t\t\tstack.push(value);\r\n\t\t\troot = value;\r\n\t\t} else {\r\n\t\t\tpushValue(value);\r\n\t\t\tstack.push(value);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pushValue(value: any) {\r\n\t\tif (!stack.length) throw new Error('Invalid data');\r\n\r\n\t\tconst top = stack[stack.length - 1];\r\n\r\n\t\tif (typeof top === 'string') {\r\n\t\t\tstack[stack.length - 2][top] = value;\r\n\t\t\tpop();\r\n\t\t} else if (Array.isArray(top)) {\r\n\t\t\ttop.push(value);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid data');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pushProperty(name: string) {\r\n\t\tif (!stack.length) pushContainer({});\r\n\r\n\t\tconst top = stack[stack.length - 1];\r\n\r\n\t\tif (top && typeof top === 'string') {\r\n\t\t\tif (name === 'nil') {\r\n\t\t\t\tpushValue(null);\r\n\t\t\t} else {\r\n\t\t\t\tpushValue(`/${name}`);\r\n\t\t\t}\r\n\t\t} else if (top && typeof top === 'object') {\r\n\t\t\tstack.push(name);\r\n\t\t} else {\r\n\t\t\tthrow new Error('Invalid data');\r\n\t\t}\r\n\t}\r\n\r\n\tfunction pop() {\r\n\t\tif (!stack.length) throw new Error('Invalid data');\r\n\t\tstack.pop();\r\n\t}\r\n\r\n\tskipWhitespace();\r\n\r\n\twhile (index < data.length) {\r\n\t\tconst i = index;\r\n\t\tconst char = data[i];\r\n\r\n\t\tif (char === 60 && data[i + 1] === 60) { // <<\r\n\t\t\tindex += 2;\r\n\t\t\tpushContainer({});\r\n\t\t} else if (char === 62 && data[i + 1] === 62) { // >>\r\n\t\t\tindex += 2;\r\n\t\t\tpop();\r\n\t\t} else if (char === 47) { // /\r\n\t\t\tindex += 1;\r\n\t\t\tconst start = index;\r\n\r\n\t\t\twhile (index < data.length && !isWhitespace(data[index])) {\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tlet name = '';\r\n\r\n\t\t\tfor (let i = start; i < index; i++) {\r\n\t\t\t\tname += String.fromCharCode(data[i]);\r\n\t\t\t}\r\n\r\n\t\t\tpushProperty(name);\r\n\t\t} else if (char === 40) { // (\r\n\t\t\tindex += 1;\r\n\t\t\tpushValue(getText());\r\n\t\t} else if (char === 91) { // [\r\n\t\t\tindex += 1;\r\n\t\t\tpushContainer([]);\r\n\t\t} else if (char === 93) { // ]\r\n\t\t\tindex += 1;\r\n\t\t\tpop();\r\n\t\t} else if (char === 110 && data[i + 1] === 117 && data[i + 2] === 108 && data[i + 3] === 108) { // null\r\n\t\t\tindex += 4;\r\n\t\t\tpushValue(null);\r\n\t\t} else if (char === 116 && data[i + 1] === 114 && data[i + 2] === 117 && data[i + 3] === 101) { // true\r\n\t\t\tindex += 4;\r\n\t\t\tpushValue(true);\r\n\t\t} else if (char === 102 && data[i + 1] === 97 && data[i + 2] === 108 && data[i + 3] === 115 && data[i + 4] === 101) { // false\r\n\t\t\tindex += 5;\r\n\t\t\tpushValue(false);\r\n\t\t} else if (isNumber(char)) {\r\n\t\t\tlet value = '';\r\n\r\n\t\t\twhile (index < data.length && isNumber(data[index])) {\r\n\t\t\t\tvalue += String.fromCharCode(data[index]);\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\r\n\t\t\tpushValue(parseFloat(value));\r\n\t\t} else {\r\n\t\t\tindex += 1;\r\n\t\t\tconsole.log(`Invalid token ${String.fromCharCode(char)} at ${index}`);\r\n\t\t\t// ` near ${String.fromCharCode.apply(null, data.slice(index - 10, index + 20) as any)}` +\r\n\t\t\t// `data [${Array.from(data.slice(index - 10, index + 20)).join(', ')}]`\r\n\t\t}\r\n\r\n\t\tskipWhitespace();\r\n\t}\r\n\r\n\treturn root;\r\n}\r\n\r\nconst floatKeys = [\r\n\t'Axis', 'XY', 'Zone', 'WordSpacing', 'FirstLineIndent', 'GlyphSpacing', 'StartIndent', 'EndIndent', 'SpaceBefore',\r\n\t'SpaceAfter', 'LetterSpacing', 'Values', 'GridSize', 'GridLeading', 'PointBase', 'BoxBounds', 'TransformPoint0', 'TransformPoint1',\r\n\t'TransformPoint2', 'FontSize', 'Leading', 'HorizontalScale', 'VerticalScale', 'BaselineShift', 'Tsume',\r\n\t'OutlineWidth', 'AutoLeading',\r\n];\r\n\r\nconst intArrays = ['RunLengthArray'];\r\n\r\n// TODO: handle /nil\r\nexport function serializeEngineData(data: any, condensed = false) {\r\n\tlet buffer = new Uint8Array(1024);\r\n\tlet offset = 0;\r\n\tlet indent = 0;\r\n\r\n\tfunction write(value: number) {\r\n\t\tif (offset >= buffer.length) {\r\n\t\t\tconst newBuffer = new Uint8Array(buffer.length * 2);\r\n\t\t\tnewBuffer.set(buffer);\r\n\t\t\tbuffer = newBuffer;\r\n\t\t}\r\n\r\n\t\tbuffer[offset] = value;\r\n\t\toffset++;\r\n\t}\r\n\r\n\tfunction writeString(value: string) {\r\n\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\twrite(value.charCodeAt(i));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction writeIndent() {\r\n\t\tif (condensed) {\r\n\t\t\twriteString(' ');\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < indent; i++) {\r\n\t\t\t\twriteString('\\t');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction writeProperty(key: string, value: any) {\r\n\t\twriteIndent();\r\n\t\twriteString(`/${key}`);\r\n\t\twriteValue(value, key, true);\r\n\t\tif (!condensed) writeString('\\n');\r\n\t}\r\n\r\n\tfunction serializeInt(value: number) {\r\n\t\treturn value.toString();\r\n\t}\r\n\r\n\tfunction serializeFloat(value: number) {\r\n\t\treturn value.toFixed(5)\r\n\t\t\t.replace(/(\\d)0+$/g, '$1')\r\n\t\t\t.replace(/^0+\\.([1-9])/g, '.$1')\r\n\t\t\t.replace(/^-0+\\.0(\\d)/g, '-.0$1');\r\n\t}\r\n\r\n\tfunction serializeNumber(value: number, key?: string) {\r\n\t\tconst isFloat = (key && floatKeys.indexOf(key) !== -1) || (value | 0) !== value;\r\n\t\treturn isFloat ? serializeFloat(value) : serializeInt(value);\r\n\t}\r\n\r\n\tfunction getKeys(value: any) {\r\n\t\tconst keys = Object.keys(value);\r\n\r\n\t\tif (keys.indexOf('98') !== -1)\r\n\t\t\tkeys.unshift(...keys.splice(keys.indexOf('99'), 1));\r\n\r\n\t\tif (keys.indexOf('99') !== -1)\r\n\t\t\tkeys.unshift(...keys.splice(keys.indexOf('99'), 1));\r\n\r\n\t\treturn keys;\r\n\t}\r\n\r\n\tfunction writeStringByte(value: number) {\r\n\t\tif (value === 40 || value === 41 || value === 92) { // ( ) \\\r\n\t\t\twrite(92); // \\\r\n\t\t}\r\n\r\n\t\twrite(value);\r\n\t}\r\n\r\n\tfunction writeValue(value: any, key?: string, inProperty = false) {\r\n\t\tfunction writePrefix() {\r\n\t\t\tif (inProperty) {\r\n\t\t\t\twriteString(' ');\r\n\t\t\t} else {\r\n\t\t\t\twriteIndent();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (value === null) {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(condensed ? '/nil' : 'null');\r\n\t\t} else if (typeof value === 'number') {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(serializeNumber(value, key));\r\n\t\t} else if (typeof value === 'boolean') {\r\n\t\t\twritePrefix();\r\n\t\t\twriteString(value ? 'true' : 'false');\r\n\t\t} else if (typeof value === 'string') {\r\n\t\t\twritePrefix();\r\n\r\n\t\t\tif ((key === '99' || key === '98') && value.charAt(0) === '/') {\r\n\t\t\t\twriteString(value);\r\n\t\t\t} else {\r\n\t\t\t\twriteString('(');\r\n\t\t\t\twrite(0xfe);\r\n\t\t\t\twrite(0xff);\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\tconst code = value.charCodeAt(i);\r\n\t\t\t\t\twriteStringByte((code >> 8) & 0xff);\r\n\t\t\t\t\twriteStringByte(code & 0xff);\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteString(')');\r\n\t\t\t}\r\n\t\t} else if (Array.isArray(value)) {\r\n\t\t\twritePrefix();\r\n\r\n\t\t\tif (value.every(x => typeof x === 'number')) {\r\n\t\t\t\twriteString('[');\r\n\r\n\t\t\t\tconst intArray = intArrays.indexOf(key!) !== -1;\r\n\r\n\t\t\t\tfor (const x of value) {\r\n\t\t\t\t\twriteString(' ');\r\n\t\t\t\t\twriteString(intArray ? serializeNumber(x) : serializeFloat(x));\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteString(' ]');\r\n\t\t\t} else {\r\n\t\t\t\twriteString('[');\r\n\t\t\t\tif (!condensed) writeString('\\n');\r\n\r\n\t\t\t\tfor (const x of value) {\r\n\t\t\t\t\twriteValue(x, key);\r\n\t\t\t\t\tif (!condensed) writeString('\\n');\r\n\t\t\t\t}\r\n\r\n\t\t\t\twriteIndent();\r\n\t\t\t\twriteString(']');\r\n\t\t\t}\r\n\t\t} else if (typeof value === 'object') {\r\n\t\t\tif (inProperty && !condensed) writeString('\\n');\r\n\r\n\t\t\twriteIndent();\r\n\t\t\twriteString('<<');\r\n\r\n\t\t\tif (!condensed) writeString('\\n');\r\n\r\n\t\t\tindent++;\r\n\r\n\t\t\tfor (const key of getKeys(value)) {\r\n\t\t\t\twriteProperty(key, value[key]);\r\n\t\t\t}\r\n\r\n\t\t\tindent--;\r\n\t\t\twriteIndent();\r\n\t\t\twriteString('>>');\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tif (condensed) {\r\n\t\tif (typeof data === 'object') {\r\n\t\t\tfor (const key of getKeys(data)) {\r\n\t\t\t\twriteProperty(key, data[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\twriteString('\\n\\n');\r\n\t\twriteValue(data);\r\n\t}\r\n\r\n\treturn buffer.slice(0, offset);\r\n}\r\n","import { TextStyle, LayerTextData, ParagraphStyle, Font, AntiAlias, TextGridInfo, Justification, Color } from './psd';\r\n\r\ninterface Adjustments {\r\n\tAxis: number[];\r\n\tXY: number[];\r\n}\r\n\r\ninterface TypeValues {\r\n\tType: number;\r\n\tValues: number[];\r\n}\r\n\r\ninterface ParagraphProperties {\r\n\tJustification?: number;\r\n\tFirstLineIndent?: number;\r\n\tStartIndent?: number;\r\n\tEndIndent?: number;\r\n\tSpaceBefore?: number;\r\n\tSpaceAfter?: number;\r\n\tAutoHyphenate?: boolean;\r\n\tHyphenatedWordSize?: number;\r\n\tPreHyphen?: number;\r\n\tPostHyphen?: number;\r\n\tConsecutiveHyphens?: number;\r\n\tZone?: number;\r\n\tWordSpacing?: number[];\r\n\tLetterSpacing?: number[];\r\n\tGlyphSpacing?: number[];\r\n\tAutoLeading?: number;\r\n\tLeadingType?: number;\r\n\tHanging?: boolean;\r\n\tBurasagari?: boolean;\r\n\tKinsokuOrder?: number;\r\n\tEveryLineComposer?: boolean;\r\n}\r\n\r\ninterface ParagraphSheet {\r\n\tName?: string;\r\n\tDefaultStyleSheet: number;\r\n\tProperties: ParagraphProperties;\r\n}\r\n\r\ninterface StyleSheetData {\r\n\tFont?: number;\r\n\tFontSize?: number;\r\n\tFauxBold?: boolean;\r\n\tFauxItalic?: boolean;\r\n\tAutoLeading?: boolean;\r\n\tLeading?: number;\r\n\tHorizontalScale?: number;\r\n\tVerticalScale?: number;\r\n\tTracking?: number;\r\n\tAutoKerning?: boolean;\r\n\tKerning?: number;\r\n\tBaselineShift?: number;\r\n\tFontCaps?: number;\r\n\tFontBaseline?: number;\r\n\tUnderline?: boolean;\r\n\tStrikethrough?: boolean;\r\n\tLigatures?: boolean;\r\n\tDLigatures?: boolean;\r\n\tBaselineDirection?: number;\r\n\tTsume?: number;\r\n\tStyleRunAlignment?: number;\r\n\tLanguage?: number;\r\n\tNoBreak?: boolean;\r\n\tFillColor?: TypeValues;\r\n\tStrokeColor?: TypeValues;\r\n\tFillFlag?: boolean;\r\n\tStrokeFlag?: boolean;\r\n\tFillFirst?: boolean;\r\n\tYUnderline?: number;\r\n\tOutlineWidth?: number;\r\n\tCharacterDirection?: number;\r\n\tHindiNumbers?: boolean;\r\n\tKashida?: number;\r\n\tDiacriticPos?: number;\r\n}\r\n\r\ninterface FontSet {\r\n\tName: string;\r\n\tScript: number;\r\n\tFontType: number;\r\n\tSynthetic: number;\r\n}\r\n\r\ninterface ResourceDict {\r\n\tKinsokuSet: any[];\r\n\tMojiKumiSet: any[];\r\n\tTheNormalStyleSheet: number;\r\n\tTheNormalParagraphSheet: number;\r\n\tParagraphSheetSet: ParagraphSheet[];\r\n\tStyleSheetSet: { Name: string; StyleSheetData: StyleSheetData; }[];\r\n\tFontSet: FontSet[];\r\n\tSuperscriptSize: number;\r\n\tSuperscriptPosition: number;\r\n\tSubscriptSize: number;\r\n\tSubscriptPosition: number;\r\n\tSmallCapSize: number;\r\n}\r\n\r\ninterface ParagraphRun {\r\n\tParagraphSheet: ParagraphSheet;\r\n\tAdjustments: Adjustments;\r\n}\r\n\r\ninterface StyleRun {\r\n\tStyleSheet: { StyleSheetData: StyleSheetData; };\r\n}\r\n\r\ninterface PhotoshopNode {\r\n\tShapeType?: number;\r\n\tPointBase?: number[];\r\n\tBoxBounds?: number[];\r\n\tBase?: {\r\n\t\tShapeType: number;\r\n\t\tTransformPoint0: number[];\r\n\t\tTransformPoint1: number[];\r\n\t\tTransformPoint2: number[];\r\n\t};\r\n}\r\n\r\ninterface EngineData {\r\n\tEngineDict: {\r\n\t\tEditor: { Text: string; };\r\n\t\tParagraphRun: {\r\n\t\t\tDefaultRunData: ParagraphRun;\r\n\t\t\tRunArray: ParagraphRun[];\r\n\t\t\tRunLengthArray: number[];\r\n\t\t\tIsJoinable: number;\r\n\t\t};\r\n\t\tStyleRun: {\r\n\t\t\tDefaultRunData: StyleRun;\r\n\t\t\tRunArray: StyleRun[];\r\n\t\t\tRunLengthArray: number[];\r\n\t\t\tIsJoinable: number;\r\n\t\t};\r\n\t\tGridInfo: {\r\n\t\t\tGridIsOn: boolean;\r\n\t\t\tShowGrid: boolean;\r\n\t\t\tGridSize: number;\r\n\t\t\tGridLeading: number;\r\n\t\t\tGridColor: TypeValues;\r\n\t\t\tGridLeadingFillColor: TypeValues;\r\n\t\t\tAlignLineHeightToGridFlags: boolean;\r\n\t\t};\r\n\t\tAntiAlias: number;\r\n\t\tUseFractionalGlyphWidths: boolean;\r\n\t\tRendered?: {\r\n\t\t\tVersion: number;\r\n\t\t\tShapes?: {\r\n\t\t\t\tWritingDirection: number;\r\n\t\t\t\tChildren?: {\r\n\t\t\t\t\tShapeType?: number;\r\n\t\t\t\t\tProcession: number;\r\n\t\t\t\t\tLines: { WritingDirection: number; Children: any[]; };\r\n\t\t\t\t\tCookie?: {\r\n\t\t\t\t\t\tPhotoshop?: PhotoshopNode;\r\n\t\t\t\t\t};\r\n\t\t\t\t}[];\r\n\t\t\t};\r\n\t\t};\r\n\t};\r\n\tResourceDict: ResourceDict;\r\n\tDocumentResources: ResourceDict;\r\n}\r\n\r\nconst defaultFont: Font = {\r\n\tname: 'MyriadPro-Regular',\r\n\tscript: 0,\r\n\ttype: 0,\r\n\tsynthetic: 0,\r\n};\r\n\r\nconst defaultParagraphStyle: ParagraphStyle = {\r\n\tjustification: 'left',\r\n\tfirstLineIndent: 0,\r\n\tstartIndent: 0,\r\n\tendIndent: 0,\r\n\tspaceBefore: 0,\r\n\tspaceAfter: 0,\r\n\tautoHyphenate: true,\r\n\thyphenatedWordSize: 6,\r\n\tpreHyphen: 2,\r\n\tpostHyphen: 2,\r\n\tconsecutiveHyphens: 8,\r\n\tzone: 36,\r\n\twordSpacing: [0.8, 1, 1.33],\r\n\tletterSpacing: [0, 0, 0],\r\n\tglyphSpacing: [1, 1, 1],\r\n\tautoLeading: 1.2,\r\n\tleadingType: 0,\r\n\thanging: false,\r\n\tburasagari: false,\r\n\tkinsokuOrder: 0,\r\n\teveryLineComposer: false,\r\n};\r\n\r\nconst defaultStyle: TextStyle = {\r\n\tfont: defaultFont,\r\n\tfontSize: 12,\r\n\tfauxBold: false,\r\n\tfauxItalic: false,\r\n\tautoLeading: true,\r\n\tleading: 0,\r\n\thorizontalScale: 1,\r\n\tverticalScale: 1,\r\n\ttracking: 0,\r\n\tautoKerning: true,\r\n\tkerning: 0,\r\n\tbaselineShift: 0,\r\n\tfontCaps: 0,\r\n\tfontBaseline: 0,\r\n\tunderline: false,\r\n\tstrikethrough: false,\r\n\tligatures: true,\r\n\tdLigatures: false,\r\n\tbaselineDirection: 2,\r\n\ttsume: 0,\r\n\tstyleRunAlignment: 2,\r\n\tlanguage: 0,\r\n\tnoBreak: false,\r\n\tfillColor: { r: 0, g: 0, b: 0 },\r\n\tstrokeColor: { r: 0, g: 0, b: 0 },\r\n\tfillFlag: true,\r\n\tstrokeFlag: false,\r\n\tfillFirst: true,\r\n\tyUnderline: 1,\r\n\toutlineWidth: 1,\r\n\tcharacterDirection: 0,\r\n\thindiNumbers: false,\r\n\tkashida: 1,\r\n\tdiacriticPos: 2,\r\n};\r\n\r\nconst defaultGridInfo: TextGridInfo = {\r\n\tisOn: false,\r\n\tshow: false,\r\n\tsize: 18,\r\n\tleading: 22,\r\n\tcolor: { r: 0, g: 0, b: 255 },\r\n\tleadingFillColor: { r: 0, g: 0, b: 255 },\r\n\talignLineHeightToGridFlags: false,\r\n};\r\n\r\nconst paragraphStyleKeys: (keyof ParagraphStyle)[] = [\r\n\t'justification', 'firstLineIndent', 'startIndent', 'endIndent', 'spaceBefore', 'spaceAfter',\r\n\t'autoHyphenate', 'hyphenatedWordSize', 'preHyphen', 'postHyphen', 'consecutiveHyphens',\r\n\t'zone', 'wordSpacing', 'letterSpacing', 'glyphSpacing', 'autoLeading', 'leadingType',\r\n\t'hanging', 'burasagari', 'kinsokuOrder', 'everyLineComposer',\r\n];\r\n\r\nconst styleKeys: (keyof TextStyle)[] = [\r\n\t'font', 'fontSize', 'fauxBold', 'fauxItalic', 'autoLeading', 'leading', 'horizontalScale',\r\n\t'verticalScale', 'tracking', 'autoKerning', 'kerning', 'baselineShift', 'fontCaps', 'fontBaseline',\r\n\t'underline', 'strikethrough', 'ligatures', 'dLigatures', 'baselineDirection', 'tsume',\r\n\t'styleRunAlignment', 'language', 'noBreak', 'fillColor', 'strokeColor', 'fillFlag',\r\n\t'strokeFlag', 'fillFirst', 'yUnderline', 'outlineWidth', 'characterDirection', 'hindiNumbers',\r\n\t'kashida', 'diacriticPos',\r\n];\r\n\r\nconst antialias: AntiAlias[] = ['none', 'crisp', 'strong', 'smooth', 'sharp'];\r\nconst justification: Justification[] = ['left', 'right', 'center'];\r\n\r\nfunction upperFirst(value: string) {\r\n\treturn value.substr(0, 1).toUpperCase() + value.substr(1);\r\n}\r\n\r\nfunction decodeColor(color: { Type: number; Values: number[]; }): Color {\r\n\tconst c = color.Values;\r\n\r\n\tif (color.Type === 0) { // grayscale\r\n\t\treturn { r: c[1] * 255, g: c[1] * 255, b: c[1] * 255 }; // , c[0] * 255];\r\n\t} else { // rgb\r\n\t\treturn { r: c[1] * 255, g: c[2] * 255, b: c[3] * 255, a: c[0] }; // , c[0] * 255];\r\n\t}\r\n}\r\n\r\nfunction encodeColor(color: Color | undefined) {\r\n\tif (color && 'r' in color) {\r\n\t\treturn ['a' in color ? color.a : 1, color.r / 255, color.g / 255, color.b / 255];\r\n\t} else {\r\n\t\treturn [0, 0, 0, 0];\r\n\t}\r\n}\r\n\r\nfunction arraysEqual(a: any[], b: any[]) {\r\n\tif (!a || !b) return false;\r\n\tif (a.length !== b.length) return false;\r\n\tfor (let i = 0; i < a.length; i++) if (a[i] !== b[i]) return false;\r\n\treturn true;\r\n}\r\n\r\nfunction objectsEqual(a: any, b: any) {\r\n\tif (!a || !b) return false;\r\n\tfor (const key of Object.keys(a)) if (a[key] !== b[key]) return false;\r\n\tfor (const key of Object.keys(b)) if (a[key] !== b[key]) return false;\r\n\treturn true;\r\n}\r\n\r\nfunction findOrAddFont(fonts: Font[], font: Font) {\r\n\tfor (let i = 0; i < fonts.length; i++) {\r\n\t\tif (fonts[i].name === font.name) return i;\r\n\t}\r\n\r\n\tfonts.push(font);\r\n\treturn fonts.length - 1;\r\n}\r\n\r\nfunction decodeObject(obj: any, keys: string[], fonts: Font[]) {\r\n\tconst result: any = {};\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst Key = upperFirst(key);\r\n\r\n\t\tif (obj[Key] === undefined) continue;\r\n\r\n\t\tif (key === 'justification') {\r\n\t\t\tresult[key] = justification[obj[Key]];\r\n\t\t} else if (key === 'font') {\r\n\t\t\tresult[key] = fonts[obj[Key]];\r\n\t\t} else if (key === 'fillColor' || key === 'strokeColor') {\r\n\t\t\tresult[key] = decodeColor(obj[Key]);\r\n\t\t} else {\r\n\t\t\tresult[key] = obj[Key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction encodeObject(obj: any, keys: string[], fonts: Font[]) {\r\n\tconst result: any = {};\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst Key = upperFirst(key);\r\n\r\n\t\tif (obj[key] === undefined) continue;\r\n\r\n\t\tif (key === 'justification') {\r\n\t\t\tresult[Key] = justification.indexOf(obj[key] ?? 'left');\r\n\t\t} else if (key === 'font') {\r\n\t\t\tresult[Key] = findOrAddFont(fonts, obj[key]);\r\n\t\t} else if (key === 'fillColor' || key === 'strokeColor') {\r\n\t\t\tresult[Key] = { Type: 1, Values: encodeColor(obj[key]) } as TypeValues;\r\n\t\t} else {\r\n\t\t\tresult[Key] = obj[key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction decodeParagraphStyle(obj: ParagraphProperties, fonts: Font[]): ParagraphStyle {\r\n\treturn decodeObject(obj, paragraphStyleKeys, fonts);\r\n}\r\n\r\nfunction decodeStyle(obj: StyleSheetData, fonts: Font[]): TextStyle {\r\n\treturn decodeObject(obj, styleKeys, fonts);\r\n}\r\n\r\nfunction encodeParagraphStyle(obj: ParagraphStyle, fonts: Font[]): ParagraphProperties {\r\n\treturn encodeObject(obj, paragraphStyleKeys, fonts);\r\n}\r\n\r\nfunction encodeStyle(obj: TextStyle, fonts: Font[]): StyleSheetData {\r\n\treturn encodeObject(obj, styleKeys, fonts);\r\n}\r\n\r\nfunction deduplicateValues<T>(base: T, runs: { style: T; }[], keys: (keyof T)[]) {\r\n\tif (!runs.length) return;\r\n\r\n\tfor (const key of keys) {\r\n\t\tconst value = runs[0].style[key];\r\n\r\n\t\tif (value !== undefined) {\r\n\t\t\tlet identical = false;\r\n\r\n\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\tidentical = runs.every(r => arraysEqual(r.style[key] as any, value));\r\n\t\t\t} else if (typeof value === 'object') {\r\n\t\t\t\tidentical = runs.every(r => objectsEqual(r.style[key] as any, value));\r\n\t\t\t} else {\r\n\t\t\t\tidentical = runs.every(r => r.style[key] === value);\r\n\t\t\t}\r\n\r\n\t\t\tif (identical) {\r\n\t\t\t\tbase[key] = value as any;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst styleValue = base[key];\r\n\r\n\t\tif (styleValue !== undefined) {\r\n\t\t\tfor (const r of runs) {\r\n\t\t\t\tlet same = false;\r\n\r\n\t\t\t\tif (Array.isArray(value)) {\r\n\t\t\t\t\tsame = arraysEqual(r.style[key] as any, value);\r\n\t\t\t\t} else if (typeof value === 'object') {\r\n\t\t\t\t\tsame = objectsEqual(r.style[key] as any, value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsame = r.style[key] === value;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (same) delete r.style[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (runs.every(x => Object.keys(x.style).length === 0)) {\r\n\t\truns.length = 0;\r\n\t}\r\n}\r\n\r\nexport function decodeEngineData(engineData: EngineData) {\r\n\t// console.log('engineData', require('util').inspect(engineData, false, 99, true));\r\n\tconst engineDict = engineData.EngineDict;\r\n\tconst resourceDict = engineData.ResourceDict;\r\n\r\n\tconst fonts = resourceDict.FontSet.map<Font>(f => ({\r\n\t\tname: f.Name,\r\n\t\tscript: f.Script,\r\n\t\ttype: f.FontType,\r\n\t\tsynthetic: f.Synthetic,\r\n\t}));\r\n\r\n\tlet text = engineDict.Editor.Text.replace(/\\r/g, '\\n');\r\n\tlet removedCharacters = 0;\r\n\r\n\twhile (/\\n$/.test(text)) {\r\n\t\ttext = text.substr(0, text.length - 1);\r\n\t\tremovedCharacters++;\r\n\t}\r\n\r\n\tconst result: LayerTextData = {\r\n\t\ttext,\r\n\t\tantiAlias: antialias[engineDict.AntiAlias] ?? 'smooth',\r\n\t\tuseFractionalGlyphWidths: !!engineDict.UseFractionalGlyphWidths,\r\n\t\tsuperscriptSize: resourceDict.SuperscriptSize,\r\n\t\tsuperscriptPosition: resourceDict.SuperscriptPosition,\r\n\t\tsubscriptSize: resourceDict.SubscriptSize,\r\n\t\tsubscriptPosition: resourceDict.SubscriptPosition,\r\n\t\tsmallCapSize: resourceDict.SmallCapSize,\r\n\t};\r\n\r\n\t// shape\r\n\r\n\tconst photoshop = engineDict.Rendered?.Shapes?.Children?.[0]?.Cookie?.Photoshop;\r\n\r\n\tif (photoshop) {\r\n\t\tresult.shapeType = photoshop.ShapeType === 1 ? 'box' : 'point';\r\n\t\tif (photoshop.PointBase) result.pointBase = photoshop.PointBase;\r\n\t\tif (photoshop.BoxBounds) result.boxBounds = photoshop.BoxBounds;\r\n\t}\r\n\r\n\t// paragraph style\r\n\r\n\t// const theNormalParagraphSheet = resourceDict.TheNormalParagraphSheet;\r\n\t// const paragraphSheetSet = resourceDict.ParagraphSheetSet;\r\n\t// const paragraphProperties = paragraphSheetSet[theNormalParagraphSheet].Properties;\r\n\tconst paragraphRun = engineData.EngineDict.ParagraphRun;\r\n\r\n\tresult.paragraphStyle = {}; // decodeParagraphStyle(paragraphProperties, fonts);\r\n\tresult.paragraphStyleRuns = [];\r\n\r\n\tfor (let i = 0; i < paragraphRun.RunArray.length; i++) {\r\n\t\tconst run = paragraphRun.RunArray[i];\r\n\t\tconst length = paragraphRun.RunLengthArray[i];\r\n\t\tconst style = decodeParagraphStyle(run.ParagraphSheet.Properties, fonts);\r\n\t\t// const adjustments = {\r\n\t\t//   axis: run.Adjustments.Axis,\r\n\t\t//   xy: run.Adjustments.XY,\r\n\t\t// };\r\n\t\tresult.paragraphStyleRuns.push({ length, style/*, adjustments*/ });\r\n\t}\r\n\r\n\tfor (let counter = removedCharacters; result.paragraphStyleRuns.length && counter > 0; counter--) {\r\n\t\tif (--result.paragraphStyleRuns[result.paragraphStyleRuns.length - 1].length === 0) {\r\n\t\t\tresult.paragraphStyleRuns.pop();\r\n\t\t}\r\n\t}\r\n\r\n\tdeduplicateValues(result.paragraphStyle, result.paragraphStyleRuns, paragraphStyleKeys);\r\n\r\n\tif (!result.paragraphStyleRuns.length) delete result.paragraphStyleRuns;\r\n\r\n\t// style\r\n\r\n\t// const theNormalStyleSheet = resourceDict.TheNormalStyleSheet;\r\n\t// const styleSheetSet = resourceDict.StyleSheetSet;\r\n\t// const styleSheetData = styleSheetSet[theNormalStyleSheet].StyleSheetData;\r\n\tconst styleRun = engineData.EngineDict.StyleRun;\r\n\r\n\tresult.style = {}; // decodeStyle(styleSheetData, fonts);\r\n\tresult.styleRuns = [];\r\n\r\n\tfor (let i = 0; i < styleRun.RunArray.length; i++) {\r\n\t\tconst length = styleRun.RunLengthArray[i];\r\n\t\tconst style = decodeStyle(styleRun.RunArray[i].StyleSheet.StyleSheetData, fonts);\r\n\t\tresult.styleRuns.push({ length, style });\r\n\t}\r\n\r\n\tfor (let counter = removedCharacters; result.styleRuns.length && counter > 0; counter--) {\r\n\t\tif (--result.styleRuns[result.styleRuns.length - 1].length === 0) {\r\n\t\t\tresult.styleRuns.pop();\r\n\t\t}\r\n\t}\r\n\r\n\tdeduplicateValues(result.style, result.styleRuns, styleKeys);\r\n\r\n\tif (!result.styleRuns.length) delete result.styleRuns;\r\n\r\n\treturn result;\r\n}\r\n\r\nexport function encodeEngineData(data: LayerTextData) {\r\n\tconst text = `${(data.text || '').replace(/\\r?\\n/g, '\\r')}\\r`;\r\n\r\n\tconst fonts: Font[] = [\r\n\t\t{ name: 'AdobeInvisFont', script: 0, type: 0, synthetic: 0 },\r\n\t];\r\n\r\n\tconst defFont = data.style?.font || data.styleRuns?.find(s => s.style.font)?.style.font || defaultFont;\r\n\tconst paragraphRunArray: ParagraphRun[] = [];\r\n\tconst paragraphRunLengthArray: number[] = [];\r\n\tconst paragraphRuns = data.paragraphStyleRuns;\r\n\r\n\tif (paragraphRuns && paragraphRuns.length) {\r\n\t\tlet leftLength = text.length;\r\n\r\n\t\tfor (const run of paragraphRuns) {\r\n\t\t\tlet runLength = Math.min(run.length, leftLength);\r\n\t\t\tleftLength -= runLength;\r\n\r\n\t\t\tif (!runLength) continue; // ignore 0 size runs\r\n\r\n\t\t\t// extend last run if it's only for trailing \\r\r\n\t\t\tif (leftLength === 1 && run === paragraphRuns[paragraphRuns.length - 1]) {\r\n\t\t\t\trunLength++;\r\n\t\t\t\tleftLength--;\r\n\t\t\t}\r\n\r\n\t\t\tparagraphRunLengthArray.push(runLength);\r\n\t\t\tparagraphRunArray.push({\r\n\t\t\t\tParagraphSheet: {\r\n\t\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle, ...run.style }, fonts),\r\n\t\t\t\t},\r\n\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (leftLength) {\r\n\t\t\tparagraphRunLengthArray.push(leftLength);\r\n\t\t\tparagraphRunArray.push({\r\n\t\t\t\tParagraphSheet: {\r\n\t\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle }, fonts),\r\n\t\t\t\t},\r\n\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t});\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let i = 0, last = 0; i < text.length; i++) {\r\n\t\t\tif (text.charCodeAt(i) === 13) { // \\r\r\n\t\t\t\tparagraphRunLengthArray.push(i - last + 1);\r\n\t\t\t\tparagraphRunArray.push({\r\n\t\t\t\t\tParagraphSheet: {\r\n\t\t\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle }, fonts),\r\n\t\t\t\t\t},\r\n\t\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t\t});\r\n\t\t\t\tlast = i + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst styleSheetData = encodeStyle({ ...defaultStyle, font: defFont }, fonts);\r\n\tconst styleRuns = data.styleRuns || [{ length: text.length, style: data.style || {} }];\r\n\tconst styleRunArray: StyleRun[] = [];\r\n\tconst styleRunLengthArray: number[] = [];\r\n\r\n\tlet leftLength = text.length;\r\n\r\n\tfor (const run of styleRuns) {\r\n\t\tlet runLength = Math.min(run.length, leftLength);\r\n\t\tleftLength -= runLength;\r\n\r\n\t\tif (!runLength) continue; // ignore 0 size runs\r\n\r\n\t\t// extend last run if it's only for trailing \\r\r\n\t\tif (leftLength === 1 && run === styleRuns[styleRuns.length - 1]) {\r\n\t\t\trunLength++;\r\n\t\t\tleftLength--;\r\n\t\t}\r\n\r\n\t\tstyleRunLengthArray.push(runLength);\r\n\t\tstyleRunArray.push({\r\n\t\t\tStyleSheet: {\r\n\t\t\t\tStyleSheetData: encodeStyle({\r\n\t\t\t\t\tkerning: 0,\r\n\t\t\t\t\tautoKerning: true,\r\n\t\t\t\t\tfillColor: { r: 0, g: 0, b: 0 },\r\n\t\t\t\t\t...data.style,\r\n\t\t\t\t\t...run.style,\r\n\t\t\t\t}, fonts),\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t// add extra run to the end if existing ones didn't fill it up\r\n\tif (leftLength && styleRuns.length) {\r\n\t\tstyleRunLengthArray.push(leftLength);\r\n\t\tstyleRunArray.push({\r\n\t\t\tStyleSheet: {\r\n\t\t\t\tStyleSheetData: encodeStyle({\r\n\t\t\t\t\tkerning: 0,\r\n\t\t\t\t\tautoKerning: true,\r\n\t\t\t\t\tfillColor: { r: 0, g: 0, b: 0 },\r\n\t\t\t\t\t...data.style,\r\n\t\t\t\t}, fonts),\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tconst gridInfo = { ...defaultGridInfo, ...data.gridInfo };\r\n\tconst WritingDirection = data.orientation === 'vertical' ? 2 : 0;\r\n\tconst Procession = data.orientation === 'vertical' ? 1 : 0;\r\n\tconst ShapeType = data.shapeType === 'box' ? 1 : 0;\r\n\tconst Photoshop: PhotoshopNode = {\r\n\t\tShapeType,\r\n\t};\r\n\r\n\tif (ShapeType === 0) {\r\n\t\tPhotoshop.PointBase = data.pointBase || [0, 0];\r\n\t} else {\r\n\t\tPhotoshop.BoxBounds = data.boxBounds || [0, 0, 0, 0];\r\n\t}\r\n\r\n\t// needed for correct order of properties\r\n\tPhotoshop.Base = {\r\n\t\tShapeType,\r\n\t\tTransformPoint0: [1, 0],\r\n\t\tTransformPoint1: [0, 1],\r\n\t\tTransformPoint2: [0, 0],\r\n\t};\r\n\r\n\tconst defaultResources = {\r\n\t\tKinsokuSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'PhotoshopKinsokuHard',\r\n\t\t\t\tNoStart: '、。，．・：；？！ー―’”）〕］｝〉》」』】ヽヾゝゞ々ぁぃぅぇぉっゃゅょゎァィゥェォッャュョヮヵヶ゛゜?!)]},.:;℃℉¢％‰',\r\n\t\t\t\tNoEnd: '‘“（〔［｛〈《「『【([{￥＄£＠§〒＃',\r\n\t\t\t\tKeep: '―‥',\r\n\t\t\t\tHanging: '、。.,',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tName: 'PhotoshopKinsokuSoft',\r\n\t\t\t\tNoStart: '、。，．・：；？！’”）〕］｝〉》」』】ヽヾゝゞ々',\r\n\t\t\t\tNoEnd: '‘“（〔［｛〈《「『【',\r\n\t\t\t\tKeep: '―‥',\r\n\t\t\t\tHanging: '、。.,',\r\n\t\t\t},\r\n\t\t],\r\n\t\tMojiKumiSet: [\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet1' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet2' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet3' },\r\n\t\t\t{ InternalName: 'Photoshop6MojiKumiSet4' },\r\n\t\t],\r\n\t\tTheNormalStyleSheet: 0,\r\n\t\tTheNormalParagraphSheet: 0,\r\n\t\tParagraphSheetSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'Normal RGB',\r\n\t\t\t\tDefaultStyleSheet: 0,\r\n\t\t\t\tProperties: encodeParagraphStyle({ ...defaultParagraphStyle, ...data.paragraphStyle }, fonts),\r\n\t\t\t},\r\n\t\t],\r\n\t\tStyleSheetSet: [\r\n\t\t\t{\r\n\t\t\t\tName: 'Normal RGB',\r\n\t\t\t\tStyleSheetData: styleSheetData,\r\n\t\t\t},\r\n\t\t],\r\n\t\tFontSet: fonts.map<FontSet>(f => ({\r\n\t\t\tName: f.name,\r\n\t\t\tScript: f.script || 0,\r\n\t\t\tFontType: f.type || 0,\r\n\t\t\tSynthetic: f.synthetic || 0,\r\n\t\t})),\r\n\t\tSuperscriptSize: data.superscriptSize ?? 0.583,\r\n\t\tSuperscriptPosition: data.superscriptPosition ?? 0.333,\r\n\t\tSubscriptSize: data.subscriptSize ?? 0.583,\r\n\t\tSubscriptPosition: data.subscriptPosition ?? 0.333,\r\n\t\tSmallCapSize: data.smallCapSize ?? 0.7,\r\n\t};\r\n\r\n\tconst engineData: EngineData = {\r\n\t\tEngineDict: {\r\n\t\t\tEditor: { Text: text },\r\n\t\t\tParagraphRun: {\r\n\t\t\t\tDefaultRunData: {\r\n\t\t\t\t\tParagraphSheet: { DefaultStyleSheet: 0, Properties: {} },\r\n\t\t\t\t\tAdjustments: { Axis: [1, 0, 1], XY: [0, 0] },\r\n\t\t\t\t},\r\n\t\t\t\tRunArray: paragraphRunArray,\r\n\t\t\t\tRunLengthArray: paragraphRunLengthArray,\r\n\t\t\t\tIsJoinable: 1,\r\n\t\t\t},\r\n\t\t\tStyleRun: {\r\n\t\t\t\tDefaultRunData: { StyleSheet: { StyleSheetData: {} } },\r\n\t\t\t\tRunArray: styleRunArray,\r\n\t\t\t\tRunLengthArray: styleRunLengthArray,\r\n\t\t\t\tIsJoinable: 2,\r\n\t\t\t},\r\n\t\t\tGridInfo: {\r\n\t\t\t\tGridIsOn: !!gridInfo.isOn,\r\n\t\t\t\tShowGrid: !!gridInfo.show,\r\n\t\t\t\tGridSize: gridInfo.size ?? 18,\r\n\t\t\t\tGridLeading: gridInfo.leading ?? 22,\r\n\t\t\t\tGridColor: { Type: 1, Values: encodeColor(gridInfo.color) },\r\n\t\t\t\tGridLeadingFillColor: { Type: 1, Values: encodeColor(gridInfo.color) },\r\n\t\t\t\tAlignLineHeightToGridFlags: !!gridInfo.alignLineHeightToGridFlags,\r\n\t\t\t},\r\n\t\t\tAntiAlias: antialias.indexOf(data.antiAlias ?? 'sharp'),\r\n\t\t\tUseFractionalGlyphWidths: data.useFractionalGlyphWidths ?? true,\r\n\t\t\tRendered: {\r\n\t\t\t\tVersion: 1,\r\n\t\t\t\tShapes: {\r\n\t\t\t\t\tWritingDirection,\r\n\t\t\t\t\tChildren: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tShapeType,\r\n\t\t\t\t\t\t\tProcession,\r\n\t\t\t\t\t\t\tLines: { WritingDirection, Children: [] },\r\n\t\t\t\t\t\t\tCookie: { Photoshop },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tResourceDict: { ...defaultResources },\r\n\t\tDocumentResources: { ...defaultResources },\r\n\t};\r\n\r\n\t// console.log('encodeEngineData', require('util').inspect(engineData, false, 99, true));\r\n\treturn engineData;\r\n}\r\n","import { BlnM, DescriptorUnitsValue, parseAngle, parsePercent, parseUnitsToNumber, readVersionAndDescriptor } from './descriptor';\r\nimport { BlendMode, PatternInfo } from './psd';\r\nimport {\r\n\tcheckSignature, createReader, readBytes, readDataRLE, readInt16, readInt32, readPascalString, readPattern,\r\n\treadSignature, readUint16, readUint32, readUint8, skipBytes\r\n} from './psdReader';\r\n\r\nexport interface Abr {\r\n\tbrushes: Brush[];\r\n\tsamples: SampleInfo[];\r\n\tpatterns: PatternInfo[];\r\n}\r\n\r\nexport interface SampleInfo {\r\n\tid: string;\r\n\tbounds: { x: number; y: number; w: number; h: number; };\r\n\talpha: Uint8Array;\r\n}\r\n\r\nexport interface BrushDynamics {\r\n\tcontrol: 'off' | 'fade' | 'pen pressure' | 'pen tilt' | 'stylus wheel' | 'initial direction' | 'direction' | 'initial rotation' | 'rotation';\r\n\tsteps: number;\r\n\tjitter: number;\r\n\tminimum: number;\r\n}\r\n\r\nconst dynamicsControl = ['off', 'fade', 'pen pressure', 'pen tilt', 'stylus sheel', 'initial direction', 'direction', 'initial rotation', 'rotation'];\r\n\r\nexport interface BrushShape {\r\n\tname?: string;\r\n\tsize: number;\r\n\tangle: number;\r\n\troundness: number;\r\n\thardness?: number;\r\n\tspacingOn: boolean;\r\n\tspacing: number;\r\n\tflipX: boolean;\r\n\tflipY: boolean;\r\n\tsampledData?: string;\r\n}\r\n\r\nexport interface Brush {\r\n\tname: string;\r\n\tshape: BrushShape;\r\n\tshapeDynamics?: {\r\n\t\tsizeDynamics: BrushDynamics;\r\n\t\tminimumDiameter: number;\r\n\t\ttiltScale: number;\r\n\t\tangleDynamics: BrushDynamics;\r\n\t\troundnessDynamics: BrushDynamics;\r\n\t\tminimumRoundness: number;\r\n\t\tflipX: boolean;\r\n\t\tflipY: boolean;\r\n\t\tbrushProjection: boolean;\r\n\t};\r\n\tscatter?: {\r\n\t\tbothAxes: boolean;\r\n\t\tscatterDynamics: BrushDynamics;\r\n\t\tcountDynamics: BrushDynamics;\r\n\t\tcount: number;\r\n\t};\r\n\ttexture?: {\r\n\t\tid: string;\r\n\t\tname: string;\r\n\t\tinvert: boolean;\r\n\t\tscale: number;\r\n\t\tbrightness: number;\r\n\t\tcontrast: number;\r\n\t\tblendMode: BlendMode;\r\n\t\tdepth: number;\r\n\t\tdepthMinimum: number;\r\n\t\tdepthDynamics: BrushDynamics;\r\n\t};\r\n\tdualBrush?: {\r\n\t\tflip: boolean;\r\n\t\tshape: BrushShape;\r\n\t\tblendMode: BlendMode;\r\n\t\tuseScatter: boolean;\r\n\t\tspacing: number;\r\n\t\tcount: number;\r\n\t\tbothAxes: boolean;\r\n\t\tcountDynamics: BrushDynamics;\r\n\t\tscatterDynamics: BrushDynamics;\r\n\t};\r\n\tcolorDynamics?: {\r\n\t\tforegroundBackground: BrushDynamics;\r\n\t\thue: number;\r\n\t\tsaturation: number;\r\n\t\tbrightness: number;\r\n\t\tpurity: number;\r\n\t\tperTip: boolean;\r\n\t};\r\n\ttransfer?: {\r\n\t\tflowDynamics: BrushDynamics;\r\n\t\topacityDynamics: BrushDynamics;\r\n\t\twetnessDynamics: BrushDynamics;\r\n\t\tmixDynamics: BrushDynamics;\r\n\t};\r\n\tbrushPose?: {\r\n\t\toverrideAngle: boolean;\r\n\t\toverrideTiltX: boolean;\r\n\t\toverrideTiltY: boolean;\r\n\t\toverridePressure: boolean;\r\n\t\tpressure: number;\r\n\t\ttiltX: number;\r\n\t\ttiltY: number;\r\n\t\tangle: number;\r\n\t};\r\n\tnoise: boolean;\r\n\twetEdges: boolean;\r\n\t// TODO: build-up\r\n\t// TODO: smoothing\r\n\tprotectTexture?: boolean;\r\n\tspacing: number;\r\n\tbrushGroup?: undefined; // ?\r\n\tinterpretation?: boolean; // ?\r\n\tuseBrushSize: boolean; // ?\r\n\ttoolOptions?: {\r\n\t\tbrushPreset: boolean;\r\n\t\tflow: number;\r\n\t\tsmooth: number; // ?\r\n\t\tmode: BlendMode;\r\n\t\topacity: number;\r\n\t\tsmoothing: boolean;\r\n\t\tsmoothingValue: number;\r\n\t\tsmoothingRadiusMode: boolean;\r\n\t\tsmoothingCatchup: boolean;\r\n\t\tsmoothingCatchupAtEnd: boolean;\r\n\t\tsmoothingZoomCompensation: boolean;\r\n\t\tpressureSmoothing: boolean;\r\n\t\tusePressureOverridesSize: boolean;\r\n\t\tusePressureOverridesOpacity: boolean;\r\n\t\tuseLegacy: boolean;\r\n\t};\r\n}\r\n\r\n// internal\r\n\r\ninterface PhryDescriptor {\r\n\thierarchy: any[];\r\n}\r\n\r\ninterface DynamicsDescriptor {\r\n\tbVTy: number;\r\n\tfStp: number;\r\n\tjitter: DescriptorUnitsValue;\r\n\t'Mnm ': DescriptorUnitsValue;\r\n}\r\n\r\ninterface BrushShapeDescriptor {\r\n\tDmtr: DescriptorUnitsValue;\r\n\tAngl: DescriptorUnitsValue;\r\n\tRndn: DescriptorUnitsValue;\r\n\t'Nm  '?: string;\r\n\tSpcn: DescriptorUnitsValue;\r\n\tIntr: boolean;\r\n\tHrdn?: DescriptorUnitsValue;\r\n\tflipX: boolean;\r\n\tflipY: boolean;\r\n\tsampledData?: string;\r\n}\r\n\r\ninterface DescDescriptor {\r\n\tBrsh: {\r\n\t\t'Nm  ': string;\r\n\t\tBrsh: BrushShapeDescriptor;\r\n\t\tuseTipDynamics: boolean;\r\n\t\tflipX: boolean;\r\n\t\tflipY: boolean;\r\n\t\tbrushProjection: boolean;\r\n\t\tminimumDiameter: DescriptorUnitsValue;\r\n\t\tminimumRoundness: DescriptorUnitsValue;\r\n\t\ttiltScale: DescriptorUnitsValue;\r\n\t\tszVr: DynamicsDescriptor;\r\n\t\tangleDynamics: DynamicsDescriptor;\r\n\t\troundnessDynamics: DynamicsDescriptor;\r\n\t\tuseScatter: boolean;\r\n\t\tSpcn: DescriptorUnitsValue;\r\n\t\t'Cnt ': number;\r\n\t\tbothAxes: boolean;\r\n\t\tcountDynamics: DynamicsDescriptor;\r\n\t\tscatterDynamics: DynamicsDescriptor;\r\n\t\tdualBrush: { useDualBrush: false; } | {\r\n\t\t\tuseDualBrush: true;\r\n\t\t\tFlip: boolean;\r\n\t\t\tBrsh: BrushShapeDescriptor;\r\n\t\t\tBlnM: string;\r\n\t\t\tuseScatter: boolean;\r\n\t\t\tSpcn: DescriptorUnitsValue;\r\n\t\t\t'Cnt ': number;\r\n\t\t\tbothAxes: boolean;\r\n\t\t\tcountDynamics: DynamicsDescriptor;\r\n\t\t\tscatterDynamics: DynamicsDescriptor;\r\n\t\t};\r\n\t\tbrushGroup: { useBrushGroup: false; };\r\n\t\tuseTexture: boolean;\r\n\t\tTxtC: boolean;\r\n\t\tinterpretation: boolean;\r\n\t\ttextureBlendMode: string;\r\n\t\ttextureDepth: DescriptorUnitsValue;\r\n\t\tminimumDepth: DescriptorUnitsValue;\r\n\t\ttextureDepthDynamics: DynamicsDescriptor;\r\n\t\tTxtr: {\r\n\t\t\t'Nm  ': string;\r\n\t\t\tIdnt: string;\r\n\t\t};\r\n\t\ttextureScale: DescriptorUnitsValue;\r\n\t\tInvT: boolean;\r\n\t\tprotectTexture: boolean;\r\n\t\ttextureBrightness: number;\r\n\t\ttextureContrast: number;\r\n\t\tusePaintDynamics: boolean;\r\n\t\tprVr?: DynamicsDescriptor;\r\n\t\topVr?: DynamicsDescriptor;\r\n\t\twtVr?: DynamicsDescriptor;\r\n\t\tmxVr?: DynamicsDescriptor;\r\n\t\tuseColorDynamics: boolean;\r\n\t\tclVr?: DynamicsDescriptor;\r\n\t\t'H   '?: DescriptorUnitsValue;\r\n\t\tStrt?: DescriptorUnitsValue;\r\n\t\tBrgh?: DescriptorUnitsValue;\r\n\t\tpurity?: DescriptorUnitsValue;\r\n\t\tcolorDynamicsPerTip?: true;\r\n\t\tWtdg: boolean;\r\n\t\tNose: boolean;\r\n\t\t'Rpt ': boolean;\r\n\t\tuseBrushSize: boolean;\r\n\t\tuseBrushPose: boolean;\r\n\t\toverridePoseAngle?: boolean;\r\n\t\toverridePoseTiltX?: boolean;\r\n\t\toverridePoseTiltY?: boolean;\r\n\t\toverridePosePressure?: boolean;\r\n\t\tbrushPosePressure?: DescriptorUnitsValue;\r\n\t\tbrushPoseTiltX?: number;\r\n\t\tbrushPoseTiltY?: number;\r\n\t\tbrushPoseAngle?: number;\r\n\t\ttoolOptions?: {\r\n\t\t\tbrushPreset: boolean;\r\n\t\t\tflow: number;\r\n\t\t\tSmoo: number;\r\n\t\t\t'Md  ': string;\r\n\t\t\tOpct: number;\r\n\t\t\tsmoothing: boolean;\r\n\t\t\tsmoothingValue: number;\r\n\t\t\tsmoothingRadiusMode: boolean;\r\n\t\t\tsmoothingCatchup: boolean;\r\n\t\t\tsmoothingCatchupAtEnd: boolean;\r\n\t\t\tsmoothingZoomCompensation: boolean;\r\n\t\t\tpressureSmoothing: boolean;\r\n\t\t\tusePressureOverridesSize: boolean;\r\n\t\t\tusePressureOverridesOpacity: boolean;\r\n\t\t\tuseLegacy: boolean;\r\n\t\t};\r\n\t}[];\r\n}\r\n\r\nfunction parseDynamics(desc: DynamicsDescriptor): BrushDynamics {\r\n\treturn {\r\n\t\tcontrol: dynamicsControl[desc.bVTy] as any,\r\n\t\tsteps: desc.fStp,\r\n\t\tjitter: parsePercent(desc.jitter),\r\n\t\tminimum: parsePercent(desc['Mnm ']),\r\n\t};\r\n}\r\n\r\nfunction parseBrushShape(desc: BrushShapeDescriptor): BrushShape {\r\n\tconst shape: BrushShape = {\r\n\t\tsize: parseUnitsToNumber(desc.Dmtr, 'Pixels'),\r\n\t\tangle: parseAngle(desc.Angl),\r\n\t\troundness: parsePercent(desc.Rndn),\r\n\t\tspacingOn: desc.Intr,\r\n\t\tspacing: parsePercent(desc.Spcn),\r\n\t\tflipX: desc.flipX,\r\n\t\tflipY: desc.flipY,\r\n\t};\r\n\r\n\tif (desc['Nm  ']) shape.name = desc['Nm  '];\r\n\tif (desc.Hrdn) shape.hardness = parsePercent(desc.Hrdn);\r\n\tif (desc.sampledData) shape.sampledData = desc.sampledData;\r\n\r\n\treturn shape;\r\n}\r\n\r\nexport function readAbr(buffer: ArrayBufferView, options: { logMissingFeatures?: boolean; } = {}): Abr {\r\n\tconst reader = createReader(buffer.buffer, buffer.byteOffset, buffer.byteLength);\r\n\tconst version = readInt16(reader);\r\n\tconst samples: SampleInfo[] = [];\r\n\tconst brushes: Brush[] = [];\r\n\tconst patterns: PatternInfo[] = [];\r\n\r\n\tif (version === 1 || version === 2) {\r\n\t\tthrow new Error(`Unsupported ABR version (${version})`); // TODO: ...\r\n\t} else if (version === 6 || version === 7 || version === 10) {\r\n\t\tconst minorVersion = readInt16(reader);\r\n\t\tif (minorVersion !== 1 && minorVersion !== 2) throw new Error('Unsupported ABR minor version');\r\n\r\n\t\twhile (reader.offset < reader.view.byteLength) {\r\n\t\t\tcheckSignature(reader, '8BIM');\r\n\t\t\tconst type = readSignature(reader) as 'samp' | 'desc' | 'patt' | 'phry';\r\n\t\t\tlet size = readUint32(reader);\r\n\t\t\tconst end = reader.offset + size;\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'samp': {\r\n\t\t\t\t\twhile (reader.offset < end) {\r\n\t\t\t\t\t\tlet brushLength = readUint32(reader);\r\n\t\t\t\t\t\twhile (brushLength & 0b11) brushLength++; // pad to 4 byte alignment\r\n\t\t\t\t\t\tconst brushEnd = reader.offset + brushLength;\r\n\r\n\t\t\t\t\t\tconst id = readPascalString(reader, 1);\r\n\r\n\t\t\t\t\t\t// v1 - Skip the Int16 bounds rectangle and the unknown Int16.\r\n\t\t\t\t\t\t// v2 - Skip the unknown bytes.\r\n\t\t\t\t\t\tskipBytes(reader, minorVersion === 1 ? 10 : 264);\r\n\r\n\t\t\t\t\t\tconst y = readInt32(reader);\r\n\t\t\t\t\t\tconst x = readInt32(reader);\r\n\t\t\t\t\t\tconst h = readInt32(reader) - y;\r\n\t\t\t\t\t\tconst w = readInt32(reader) - x;\r\n\t\t\t\t\t\tif (w <= 0 || h <= 0) throw new Error('Invalid bounds');\r\n\r\n\t\t\t\t\t\tconst depth = readInt16(reader);\r\n\t\t\t\t\t\tconst compression = readUint8(reader); // 0 - raw, 1 - RLE\r\n\t\t\t\t\t\tconst alpha = new Uint8Array(w * h);\r\n\r\n\t\t\t\t\t\tif (depth === 8) {\r\n\t\t\t\t\t\t\tif (compression === 0) {\r\n\t\t\t\t\t\t\t\talpha.set(readBytes(reader, alpha.byteLength));\r\n\t\t\t\t\t\t\t} else if (compression === 1) {\r\n\t\t\t\t\t\t\t\treadDataRLE(reader, { width: w, height: h, data: alpha }, w, h, 1, [0], false);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthrow new Error('Invalid compression');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (depth === 16) {\r\n\t\t\t\t\t\t\tif (compression === 0) {\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < alpha.byteLength; i++) {\r\n\t\t\t\t\t\t\t\t\talpha[i] = readUint16(reader) >> 8; // convert to 8bit values\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (compression === 1) {\r\n\t\t\t\t\t\t\t\tthrow new Error('not implemented (16bit RLE)'); // TODO: ...\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthrow new Error('Invalid compression');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow new Error('Invalid depth');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tsamples.push({ id, bounds: { x, y, w, h }, alpha });\r\n\t\t\t\t\t\treader.offset = brushEnd;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'desc': {\r\n\t\t\t\t\tconst desc: DescDescriptor = readVersionAndDescriptor(reader);\r\n\t\t\t\t\t// console.log(require('util').inspect(desc, false, 99, true));\r\n\r\n\t\t\t\t\tfor (const brush of desc.Brsh) {\r\n\t\t\t\t\t\tconst b: Brush = {\r\n\t\t\t\t\t\t\tname: brush['Nm  '],\r\n\t\t\t\t\t\t\tshape: parseBrushShape(brush.Brsh),\r\n\t\t\t\t\t\t\tspacing: parsePercent(brush.Spcn),\r\n\t\t\t\t\t\t\t// TODO: brushGroup ???\r\n\t\t\t\t\t\t\twetEdges: brush.Wtdg,\r\n\t\t\t\t\t\t\tnoise: brush.Nose,\r\n\t\t\t\t\t\t\t// TODO: TxtC ??? smoothing / build-up ?\r\n\t\t\t\t\t\t\t// TODO: 'Rpt ' ???\r\n\t\t\t\t\t\t\tuseBrushSize: brush.useBrushSize, // ???\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t\tif (brush.interpretation != null) b.interpretation = brush.interpretation;\r\n\t\t\t\t\t\tif (brush.protectTexture != null) b.protectTexture = brush.protectTexture;\r\n\r\n\t\t\t\t\t\tif (brush.useTipDynamics) {\r\n\t\t\t\t\t\t\tb.shapeDynamics = {\r\n\t\t\t\t\t\t\t\ttiltScale: parsePercent(brush.tiltScale),\r\n\t\t\t\t\t\t\t\tsizeDynamics: parseDynamics(brush.szVr),\r\n\t\t\t\t\t\t\t\tangleDynamics: parseDynamics(brush.angleDynamics),\r\n\t\t\t\t\t\t\t\troundnessDynamics: parseDynamics(brush.roundnessDynamics),\r\n\t\t\t\t\t\t\t\tflipX: brush.flipX,\r\n\t\t\t\t\t\t\t\tflipY: brush.flipY,\r\n\t\t\t\t\t\t\t\tbrushProjection: brush.brushProjection,\r\n\t\t\t\t\t\t\t\tminimumDiameter: parsePercent(brush.minimumDiameter),\r\n\t\t\t\t\t\t\t\tminimumRoundness: parsePercent(brush.minimumRoundness),\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (brush.useScatter) {\r\n\t\t\t\t\t\t\tb.scatter = {\r\n\t\t\t\t\t\t\t\tcount: brush['Cnt '],\r\n\t\t\t\t\t\t\t\tbothAxes: brush.bothAxes,\r\n\t\t\t\t\t\t\t\tcountDynamics: parseDynamics(brush.countDynamics),\r\n\t\t\t\t\t\t\t\tscatterDynamics: parseDynamics(brush.scatterDynamics),\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (brush.useTexture) {\r\n\t\t\t\t\t\t\tb.texture = {\r\n\t\t\t\t\t\t\t\tid: brush.Txtr.Idnt,\r\n\t\t\t\t\t\t\t\tname: brush.Txtr['Nm  '],\r\n\t\t\t\t\t\t\t\tblendMode: BlnM.decode(brush.textureBlendMode),\r\n\t\t\t\t\t\t\t\tdepth: parsePercent(brush.textureDepth),\r\n\t\t\t\t\t\t\t\tdepthMinimum: parsePercent(brush.minimumDepth),\r\n\t\t\t\t\t\t\t\tdepthDynamics: parseDynamics(brush.textureDepthDynamics),\r\n\t\t\t\t\t\t\t\tscale: parsePercent(brush.textureScale),\r\n\t\t\t\t\t\t\t\tinvert: brush.InvT,\r\n\t\t\t\t\t\t\t\tbrightness: brush.textureBrightness,\r\n\t\t\t\t\t\t\t\tcontrast: brush.textureContrast,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst db = brush.dualBrush;\r\n\t\t\t\t\t\tif (db && db.useDualBrush) {\r\n\t\t\t\t\t\t\tb.dualBrush = {\r\n\t\t\t\t\t\t\t\tflip: db.Flip,\r\n\t\t\t\t\t\t\t\tshape: parseBrushShape(db.Brsh),\r\n\t\t\t\t\t\t\t\tblendMode: BlnM.decode(db.BlnM),\r\n\t\t\t\t\t\t\t\tuseScatter: db.useScatter,\r\n\t\t\t\t\t\t\t\tspacing: parsePercent(db.Spcn),\r\n\t\t\t\t\t\t\t\tcount: db['Cnt '],\r\n\t\t\t\t\t\t\t\tbothAxes: db.bothAxes,\r\n\t\t\t\t\t\t\t\tcountDynamics: parseDynamics(db.countDynamics),\r\n\t\t\t\t\t\t\t\tscatterDynamics: parseDynamics(db.scatterDynamics),\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (brush.useColorDynamics) {\r\n\t\t\t\t\t\t\tb.colorDynamics = {\r\n\t\t\t\t\t\t\t\tforegroundBackground: parseDynamics(brush.clVr!),\r\n\t\t\t\t\t\t\t\thue: parsePercent(brush['H   ']!),\r\n\t\t\t\t\t\t\t\tsaturation: parsePercent(brush.Strt!),\r\n\t\t\t\t\t\t\t\tbrightness: parsePercent(brush.Brgh!),\r\n\t\t\t\t\t\t\t\tpurity: parsePercent(brush.purity!),\r\n\t\t\t\t\t\t\t\tperTip: brush.colorDynamicsPerTip!,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (brush.usePaintDynamics) {\r\n\t\t\t\t\t\t\tb.transfer = {\r\n\t\t\t\t\t\t\t\tflowDynamics: parseDynamics(brush.prVr!),\r\n\t\t\t\t\t\t\t\topacityDynamics: parseDynamics(brush.opVr!),\r\n\t\t\t\t\t\t\t\twetnessDynamics: parseDynamics(brush.wtVr!),\r\n\t\t\t\t\t\t\t\tmixDynamics: parseDynamics(brush.mxVr!),\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (brush.useBrushPose) {\r\n\t\t\t\t\t\t\tb.brushPose = {\r\n\t\t\t\t\t\t\t\toverrideAngle: brush.overridePoseAngle!,\r\n\t\t\t\t\t\t\t\toverrideTiltX: brush.overridePoseTiltX!,\r\n\t\t\t\t\t\t\t\toverrideTiltY: brush.overridePoseTiltY!,\r\n\t\t\t\t\t\t\t\toverridePressure: brush.overridePosePressure!,\r\n\t\t\t\t\t\t\t\tpressure: parsePercent(brush.brushPosePressure!),\r\n\t\t\t\t\t\t\t\ttiltX: brush.brushPoseTiltX!,\r\n\t\t\t\t\t\t\t\ttiltY: brush.brushPoseTiltY!,\r\n\t\t\t\t\t\t\t\tangle: brush.brushPoseAngle!,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst to = brush.toolOptions;\r\n\t\t\t\t\t\tif (to) {\r\n\t\t\t\t\t\t\tb.toolOptions = {\r\n\t\t\t\t\t\t\t\tbrushPreset: to.brushPreset,\r\n\t\t\t\t\t\t\t\tflow: to.flow,\r\n\t\t\t\t\t\t\t\tsmooth: to.Smoo,\r\n\t\t\t\t\t\t\t\tmode: BlnM.decode(to['Md  ']),\r\n\t\t\t\t\t\t\t\topacity: to.Opct,\r\n\t\t\t\t\t\t\t\tsmoothing: to.smoothing,\r\n\t\t\t\t\t\t\t\tsmoothingValue: to.smoothingValue,\r\n\t\t\t\t\t\t\t\tsmoothingRadiusMode: to.smoothingRadiusMode,\r\n\t\t\t\t\t\t\t\tsmoothingCatchup: to.smoothingCatchup,\r\n\t\t\t\t\t\t\t\tsmoothingCatchupAtEnd: to.smoothingCatchupAtEnd,\r\n\t\t\t\t\t\t\t\tsmoothingZoomCompensation: to.smoothingZoomCompensation,\r\n\t\t\t\t\t\t\t\tpressureSmoothing: to.pressureSmoothing,\r\n\t\t\t\t\t\t\t\tusePressureOverridesSize: to.usePressureOverridesSize,\r\n\t\t\t\t\t\t\t\tusePressureOverridesOpacity: to.usePressureOverridesOpacity,\r\n\t\t\t\t\t\t\t\tuseLegacy: to.useLegacy,\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbrushes.push(b);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'patt': {\r\n\t\t\t\t\tif (reader.offset < end) { // TODO: check multiple patterns\r\n\t\t\t\t\t\tpatterns.push(readPattern(reader));\r\n\t\t\t\t\t\treader.offset = end;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'phry': {\r\n\t\t\t\t\t// TODO: what is this ?\r\n\t\t\t\t\tconst desc: PhryDescriptor = readVersionAndDescriptor(reader);\r\n\t\t\t\t\tif (options.logMissingFeatures) {\r\n\t\t\t\t\t\tif (desc.hierarchy?.length) {\r\n\t\t\t\t\t\t\tconsole.log('unhandled phry section', desc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(`Invalid brush type: ${type}`);\r\n\t\t\t}\r\n\r\n\t\t\t// align to 4 bytes\r\n\t\t\twhile (size % 4) {\r\n\t\t\t\treader.offset++;\r\n\t\t\t\tsize++;\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tthrow new Error('Unsupported ABR version');\r\n\t}\r\n\r\n\treturn { samples, patterns, brushes };\r\n}\r\n","import { readVectorMask } from './additionalInfo';\r\nimport { LayerVectorMask } from './psd';\r\nimport { readUint32, checkSignature, createReader, readPascalString, readUnicodeString } from './psdReader';\r\n\r\nexport interface Csh {\r\n\tshapes: (LayerVectorMask & {\r\n\t\tname: string;\r\n\t\tid: string;\r\n\t\twidth: number;\r\n\t\theight: number;\r\n\t})[];\r\n}\r\n\r\nexport function readCsh(buffer: ArrayBufferView): Csh {\r\n\tconst reader = createReader(buffer.buffer, buffer.byteOffset, buffer.byteLength);\r\n\tconst csh: Csh = { shapes: [] };\r\n\r\n\tcheckSignature(reader, 'cush');\r\n\tif (readUint32(reader) !== 2) throw new Error('Invalid version');\r\n\tconst count = readUint32(reader);\r\n\r\n\tfor (let i = 0; i < count; i++) {\r\n\t\tconst name = readUnicodeString(reader);\r\n\t\twhile (reader.offset % 4) reader.offset++; // pad to 4byte bounds\r\n\t\tif (readUint32(reader) !== 1) throw new Error('Invalid shape version');\r\n\t\tconst size = readUint32(reader);\r\n\t\tconst end = reader.offset + size;\r\n\t\tconst id = readPascalString(reader, 1);\r\n\t\t// this might not be correct ???\r\n\t\tconst y1 = readUint32(reader);\r\n\t\tconst x1 = readUint32(reader);\r\n\t\tconst y2 = readUint32(reader);\r\n\t\tconst x2 = readUint32(reader);\r\n\t\tconst width = x2 - x1;\r\n\t\tconst height = y2 - y1;\r\n\t\tconst mask: LayerVectorMask = { paths: [] };\r\n\t\treadVectorMask(reader, mask, width, height, end - reader.offset);\r\n\t\tcsh.shapes.push({ name, id, width, height, ...mask });\r\n\r\n\t\treader.offset = end;\r\n\t}\r\n\r\n\treturn csh;\r\n}\r\n","export type BlendMode = 'pass through' | 'normal' | 'dissolve' | 'darken' | 'multiply' |\n\t'color burn' | 'linear burn' | 'darker color' | 'lighten' | 'screen' | 'color dodge' |\n\t'linear dodge' | 'lighter color' | 'overlay' | 'soft light' | 'hard light' |\n\t'vivid light' | 'linear light' | 'pin light' | 'hard mix' | 'difference' | 'exclusion' |\n\t'subtract' | 'divide' | 'hue' | 'saturation' | 'color' | 'luminosity';\n\nexport const enum ColorMode {\n\tBitmap = 0,\n\tGrayscale = 1,\n\tIndexed = 2,\n\tRGB = 3,\n\tCMYK = 4,\n\tMultichannel = 7,\n\tDuotone = 8,\n\tLab = 9,\n}\n\nexport const enum SectionDividerType {\n\tOther = 0,\n\tOpenFolder = 1,\n\tClosedFolder = 2,\n\tBoundingSectionDivider = 3,\n}\n\nexport type RGBA = { r: number; g: number; b: number; a: number; }; // values from 0 to 255\nexport type RGB = { r: number; g: number; b: number; }; // values from 0 to 255\nexport type HSB = { h: number; s: number; b: number; }; // values from 0 to 1\nexport type CMYK = { c: number; m: number; y: number; k: number; }; // values from 0 to 255\nexport type LAB = { l: number; a: number; b: number; }; // values `l` from 0 to 1; `a` and `b` from -1 to 1\nexport type Grayscale = { k: number }; // values from 0 to 255\nexport type Color = RGBA | RGB | HSB | CMYK | LAB | Grayscale;\n\nexport interface EffectContour {\n\tname: string;\n\tcurve: { x: number; y: number; }[];\n}\n\nexport interface EffectPattern {\n\tname: string;\n\tid: string;\n\t// TODO: add fields\n}\n\nexport interface LayerEffectShadow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tangle?: number;\n\tdistance?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tuseGlobalLight?: boolean;\n\tantialiased?: boolean;\n\tcontour?: EffectContour;\n\tchoke?: UnitsValue; // spread\n\tlayerConceals?: boolean; // only drop shadow\n}\n\nexport interface LayerEffectsOuterGlow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tsource?: GlowSource;\n\tantialiased?: boolean;\n\tnoise?: number;\n\trange?: number;\n\tchoke?: UnitsValue;\n\tjitter?: number;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectInnerGlow {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tcolor?: Color;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tsource?: GlowSource;\n\ttechnique?: GlowTechnique;\n\tantialiased?: boolean;\n\tnoise?: number;\n\trange?: number;\n\tchoke?: UnitsValue; // spread\n\tjitter?: number;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectBevel {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tangle?: number;\n\tstrength?: number; // depth\n\thighlightBlendMode?: BlendMode;\n\tshadowBlendMode?: BlendMode;\n\thighlightColor?: Color;\n\tshadowColor?: Color;\n\tstyle?: BevelStyle;\n\thighlightOpacity?: number;\n\tshadowOpacity?: number;\n\tsoften?: UnitsValue;\n\tuseGlobalLight?: boolean;\n\taltitude?: number;\n\ttechnique?: BevelTechnique;\n\tdirection?: BevelDirection;\n\tuseTexture?: boolean;\n\tuseShape?: boolean;\n\tantialiasGloss?: boolean;\n\tcontour?: EffectContour;\n}\n\nexport interface LayerEffectSolidFill {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: BlendMode;\n\tcolor?: Color;\n\topacity?: number;\n}\n\nexport interface LayerEffectStroke {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\toverprint?: boolean;\n\tsize?: UnitsValue;\n\tposition?: 'inside' | 'center' | 'outside';\n\tfillType?: 'color' | 'gradient' | 'pattern';\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tcolor?: Color;\n\tgradient?: (EffectSolidGradient | EffectNoiseGradient) & ExtraGradientInfo;\n\tpattern?: EffectPattern & {}; // TODO: additional pattern info\n}\n\nexport interface LayerEffectSatin {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tsize?: UnitsValue;\n\tblendMode?: BlendMode;\n\tcolor?: Color;\n\tantialiased?: boolean;\n\topacity?: number;\n\tdistance?: UnitsValue;\n\tinvert?: boolean;\n\tangle?: number;\n\tcontour?: EffectContour;\n}\n\n// not supported yet because of `Patt` section not implemented\nexport interface LayerEffectPatternOverlay {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\tscale?: number;\n\tpattern?: EffectPattern;\n\tphase?: { x: number; y: number; };\n\talign?: boolean;\n}\n\nexport interface EffectSolidGradient {\n\tname: string;\n\ttype: 'solid';\n\tsmoothness?: number;\n\tcolorStops: ColorStop[];\n\topacityStops: OpacityStop[];\n}\n\nexport interface EffectNoiseGradient {\n\tname: string;\n\ttype: 'noise';\n\troughness?: number;\n\tcolorModel?: 'rgb' | 'hsb' | 'lab';\n\trandomSeed?: number;\n\trestrictColors?: boolean;\n\taddTransparency?: boolean;\n\tmin: number[];\n\tmax: number[];\n}\n\nexport interface LayerEffectGradientOverlay {\n\tpresent?: boolean;\n\tshowInDialog?: boolean;\n\tenabled?: boolean;\n\tblendMode?: string;\n\topacity?: number;\n\talign?: boolean;\n\tscale?: number;\n\tdither?: boolean;\n\treverse?: boolean;\n\ttype?: GradientStyle;\n\toffset?: { x: number; y: number; };\n\tgradient?: EffectSolidGradient | EffectNoiseGradient;\n}\n\nexport interface LayerEffectsInfo {\n\tdisabled?: boolean;\n\tscale?: number;\n\tdropShadow?: LayerEffectShadow[];\n\tinnerShadow?: LayerEffectShadow[];\n\touterGlow?: LayerEffectsOuterGlow;\n\tinnerGlow?: LayerEffectInnerGlow;\n\tbevel?: LayerEffectBevel;\n\tsolidFill?: LayerEffectSolidFill[];\n\tsatin?: LayerEffectSatin;\n\tstroke?: LayerEffectStroke[];\n\tgradientOverlay?: LayerEffectGradientOverlay[];\n\tpatternOverlay?: LayerEffectPatternOverlay; // not supported yet because of `Patt` section not implemented\n}\n\nexport interface LayerMaskData {\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\tdefaultColor?: number;\n\tdisabled?: boolean;\n\tpositionRelativeToLayer?: boolean;\n\tfromVectorData?: boolean; // set to true if the mask is generated from vector data, false if it's a bitmap provided by user\n\tuserMaskDensity?: number;\n\tuserMaskFeather?: number; // px\n\tvectorMaskDensity?: number;\n\tvectorMaskFeather?: number;\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n}\n\nexport type TextGridding = 'none' | 'round'; // TODO: other values (no idea where to set it up in Photoshop)\nexport type Orientation = 'horizontal' | 'vertical';\nexport type AntiAlias = 'none' | 'sharp' | 'crisp' | 'strong' | 'smooth' | 'platform' | 'platformLCD';\nexport type WarpStyle =\n\t'none' | 'arc' | 'arcLower' | 'arcUpper' | 'arch' | 'bulge' | 'shellLower' | 'shellUpper' | 'flag' |\n\t'wave' | 'fish' | 'rise' | 'fisheye' | 'inflate' | 'squeeze' | 'twist' | 'custom';\nexport type BevelStyle = 'outer bevel' | 'inner bevel' | 'emboss' | 'pillow emboss' | 'stroke emboss';\nexport type BevelTechnique = 'smooth' | 'chisel hard' | 'chisel soft';\nexport type BevelDirection = 'up' | 'down';\nexport type GlowTechnique = 'softer' | 'precise';\nexport type GlowSource = 'edge' | 'center';\nexport type GradientStyle = 'linear' | 'radial' | 'angle' | 'reflected' | 'diamond';\nexport type Justification = 'left' | 'right' | 'center';\nexport type LineCapType = 'butt' | 'round' | 'square';\nexport type LineJoinType = 'miter' | 'round' | 'bevel';\nexport type LineAlignment = 'inside' | 'center' | 'outside';\n\nexport interface Warp {\n\tstyle?: WarpStyle;\n\tvalue?: number;\n\tperspective?: number;\n\tperspectiveOther?: number;\n\trotate?: Orientation;\n\t// for custom warps\n\tbounds?: { top: UnitsValue; left: UnitsValue; bottom: UnitsValue; right: UnitsValue; };\n\tuOrder?: number;\n\tvOrder?: number;\n\tdeformNumRows?: number;\n\tdeformNumCols?: number;\n\tcustomEnvelopeWarp?: {\n\t\tquiltSliceX?: number[];\n\t\tquiltSliceY?: number[];\n\t\tmeshPoints: { x: number; y: number; }[];\n\t};\n}\n\nexport interface Font {\n\tname: string;\n\tscript?: number;\n\ttype?: number;\n\tsynthetic?: number;\n}\n\nexport interface ParagraphStyle {\n\tjustification?: Justification;\n\tfirstLineIndent?: number;\n\tstartIndent?: number;\n\tendIndent?: number;\n\tspaceBefore?: number;\n\tspaceAfter?: number;\n\tautoHyphenate?: boolean;\n\thyphenatedWordSize?: number;\n\tpreHyphen?: number;\n\tpostHyphen?: number;\n\tconsecutiveHyphens?: number;\n\tzone?: number;\n\twordSpacing?: number[];\n\tletterSpacing?: number[];\n\tglyphSpacing?: number[];\n\tautoLeading?: number;\n\tleadingType?: number;\n\thanging?: boolean;\n\tburasagari?: boolean;\n\tkinsokuOrder?: number;\n\teveryLineComposer?: boolean;\n}\n\nexport interface ParagraphStyleRun {\n\tlength: number;\n\tstyle: ParagraphStyle;\n}\n\nexport interface TextStyle {\n\tfont?: Font;\n\tfontSize?: number;\n\tfauxBold?: boolean;\n\tfauxItalic?: boolean;\n\tautoLeading?: boolean;\n\tleading?: number;\n\thorizontalScale?: number;\n\tverticalScale?: number;\n\ttracking?: number;\n\tautoKerning?: boolean;\n\tkerning?: number;\n\tbaselineShift?: number;\n\tfontCaps?: number; // 0 - none, 1 - small caps, 2 - all caps\n\tfontBaseline?: number; // 0 - normal, 1 - superscript, 2 - subscript\n\tunderline?: boolean;\n\tstrikethrough?: boolean;\n\tligatures?: boolean;\n\tdLigatures?: boolean;\n\tbaselineDirection?: number;\n\ttsume?: number;\n\tstyleRunAlignment?: number;\n\tlanguage?: number;\n\tnoBreak?: boolean;\n\tfillColor?: Color;\n\tstrokeColor?: Color;\n\tfillFlag?: boolean;\n\tstrokeFlag?: boolean;\n\tfillFirst?: boolean;\n\tyUnderline?: number;\n\toutlineWidth?: number;\n\tcharacterDirection?: number;\n\thindiNumbers?: boolean;\n\tkashida?: number;\n\tdiacriticPos?: number;\n}\n\nexport interface TextStyleRun {\n\tlength: number;\n\tstyle: TextStyle;\n}\n\nexport interface TextGridInfo {\n\tisOn?: boolean;\n\tshow?: boolean;\n\tsize?: number;\n\tleading?: number;\n\tcolor?: Color;\n\tleadingFillColor?: Color;\n\talignLineHeightToGridFlags?: boolean;\n}\n\nexport interface LayerTextData {\n\ttext: string;\n\ttransform?: number[]; // 2d transform matrix [xx, xy, yx, yy, tx, ty]\n\tantiAlias?: AntiAlias;\n\tgridding?: TextGridding;\n\torientation?: Orientation;\n\tindex?: number;\n\twarp?: Warp;\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\n\tgridInfo?: TextGridInfo;\n\tuseFractionalGlyphWidths?: boolean;\n\tstyle?: TextStyle; // base style\n\tstyleRuns?: TextStyleRun[]; // spans of different style\n\tparagraphStyle?: ParagraphStyle; // base paragraph style\n\tparagraphStyleRuns?: ParagraphStyleRun[]; // style for each line\n\n\tsuperscriptSize?: number;\n\tsuperscriptPosition?: number;\n\tsubscriptSize?: number;\n\tsubscriptPosition?: number;\n\tsmallCapSize?: number;\n\n\tshapeType?: 'point' | 'box';\n\tpointBase?: number[];\n\tboxBounds?: number[];\n}\n\nexport interface PatternInfo {\n\tname: string;\n\tid: string;\n\tx: number;\n\ty: number;\n\tbounds: { x: number; y: number; w: number, h: number; };\n\tdata: Uint8Array;\n}\n\nexport interface BezierKnot {\n\tlinked: boolean;\n\tpoints: number[]; // x0, y0, x1, y1, x2, y2\n}\n\nexport type BooleanOperation = 'exclude' | 'combine' | 'subtract' | 'intersect';\n\nexport interface BezierPath {\n\topen: boolean;\n\toperation: BooleanOperation;\n\tknots: BezierKnot[];\n}\n\nexport interface ExtraGradientInfo {\n\tstyle?: GradientStyle;\n\tscale?: number;\n\tangle?: number;\n\tdither?: boolean;\n\treverse?: boolean;\n\talign?: boolean;\n\toffset?: { x: number; y: number; };\n}\n\nexport interface ExtraPatternInfo {\n\tlinked?: boolean;\n\tphase?: { x: number; y: number; };\n}\n\nexport type VectorContent = { type: 'color'; color: Color; } |\n\t(EffectSolidGradient & ExtraGradientInfo) |\n\t(EffectNoiseGradient & ExtraGradientInfo) |\n\t(EffectPattern & { type: 'pattern'; } & ExtraPatternInfo);\n\nexport type RenderingIntent = 'perceptual' | 'saturation' | 'relative colorimetric' | 'absolute colorimetric';\n\nexport type Units = 'Pixels' | 'Points' | 'Picas' | 'Millimeters' | 'Centimeters' | 'Inches' | 'None' | 'Density';\n\nexport interface UnitsValue {\n\tunits: Units;\n\tvalue: number;\n}\n\nexport interface BrightnessAdjustment {\n\ttype: 'brightness/contrast';\n\tbrightness?: number;\n\tcontrast?: number;\n\tmeanValue?: number;\n\tuseLegacy?: boolean;\n\tlabColorOnly?: boolean;\n\tauto?: boolean;\n}\n\nexport interface LevelsAdjustmentChannel {\n\tshadowInput: number;\n\thighlightInput: number;\n\tshadowOutput: number;\n\thighlightOutput: number;\n\tmidtoneInput: number;\n}\n\nexport interface PresetInfo {\n\tpresetKind?: number;\n\tpresetFileName?: string;\n}\n\nexport interface LevelsAdjustment extends PresetInfo {\n\ttype: 'levels';\n\trgb?: LevelsAdjustmentChannel;\n\tred?: LevelsAdjustmentChannel;\n\tgreen?: LevelsAdjustmentChannel;\n\tblue?: LevelsAdjustmentChannel;\n}\n\nexport type CurvesAdjustmentChannel = { input: number; output: number; }[];\n\nexport interface CurvesAdjustment extends PresetInfo {\n\ttype: 'curves';\n\trgb?: CurvesAdjustmentChannel;\n\tred?: CurvesAdjustmentChannel;\n\tgreen?: CurvesAdjustmentChannel;\n\tblue?: CurvesAdjustmentChannel;\n}\n\nexport interface ExposureAdjustment extends PresetInfo {\n\ttype: 'exposure';\n\texposure?: number;\n\toffset?: number;\n\tgamma?: number;\n}\n\nexport interface VibranceAdjustment {\n\ttype: 'vibrance';\n\tvibrance?: number;\n\tsaturation?: number;\n}\n\nexport interface HueSaturationAdjustmentChannel {\n\ta: number;\n\tb: number;\n\tc: number;\n\td: number;\n\thue: number;\n\tsaturation: number;\n\tlightness: number;\n}\n\nexport interface HueSaturationAdjustment extends PresetInfo {\n\ttype: 'hue/saturation';\n\tmaster?: HueSaturationAdjustmentChannel;\n\treds?: HueSaturationAdjustmentChannel;\n\tyellows?: HueSaturationAdjustmentChannel;\n\tgreens?: HueSaturationAdjustmentChannel;\n\tcyans?: HueSaturationAdjustmentChannel;\n\tblues?: HueSaturationAdjustmentChannel;\n\tmagentas?: HueSaturationAdjustmentChannel;\n}\n\nexport interface ColorBalanceValues {\n\tcyanRed: number;\n\tmagentaGreen: number;\n\tyellowBlue: number;\n}\n\nexport interface ColorBalanceAdjustment {\n\ttype: 'color balance';\n\tshadows?: ColorBalanceValues;\n\tmidtones?: ColorBalanceValues;\n\thighlights?: ColorBalanceValues;\n\tpreserveLuminosity?: boolean;\n}\n\nexport interface BlackAndWhiteAdjustment extends PresetInfo {\n\ttype: 'black & white';\n\treds?: number;\n\tyellows?: number;\n\tgreens?: number;\n\tcyans?: number;\n\tblues?: number;\n\tmagentas?: number;\n\tuseTint?: boolean;\n\ttintColor?: Color;\n}\n\nexport interface PhotoFilterAdjustment {\n\ttype: 'photo filter';\n\tcolor?: Color;\n\tdensity?: number;\n\tpreserveLuminosity?: boolean;\n}\n\nexport interface ChannelMixerChannel {\n\tred: number;\n\tgreen: number;\n\tblue: number;\n\tconstant: number;\n}\n\nexport interface ChannelMixerAdjustment extends PresetInfo {\n\ttype: 'channel mixer';\n\tmonochrome?: boolean;\n\tred?: ChannelMixerChannel;\n\tgreen?: ChannelMixerChannel;\n\tblue?: ChannelMixerChannel;\n\tgray?: ChannelMixerChannel;\n}\n\nexport interface ColorLookupAdjustment {\n\ttype: 'color lookup';\n\tlookupType?: '3dlut' | 'abstractProfile' | 'deviceLinkProfile';\n\tname?: string;\n\tdither?: boolean;\n\tprofile?: Uint8Array;\n\tlutFormat?: 'look' | 'cube' | '3dl';\n\tdataOrder?: 'rgb' | 'bgr';\n\ttableOrder?: 'rgb' | 'bgr';\n\tlut3DFileData?: Uint8Array;\n\tlut3DFileName?: string;\n}\n\nexport interface InvertAdjustment {\n\ttype: 'invert';\n}\n\nexport interface PosterizeAdjustment {\n\ttype: 'posterize';\n\tlevels?: number;\n}\n\nexport interface ThresholdAdjustment {\n\ttype: 'threshold';\n\tlevel?: number;\n}\n\nexport interface ColorStop {\n\tcolor: Color;\n\tlocation: number;\n\tmidpoint: number;\n}\n\nexport interface OpacityStop {\n\topacity: number;\n\tlocation: number;\n\tmidpoint: number;\n}\n\nexport interface GradientMapAdjustment {\n\ttype: 'gradient map';\n\tname?: string;\n\tgradientType: 'solid' | 'noise';\n\tdither?: boolean;\n\treverse?: boolean;\n\t// solid\n\tsmoothness?: number;\n\tcolorStops?: ColorStop[];\n\topacityStops?: OpacityStop[];\n\t// noise\n\troughness?: number;\n\tcolorModel?: 'rgb' | 'hsb' | 'lab';\n\trandomSeed?: number;\n\trestrictColors?: boolean;\n\taddTransparency?: boolean;\n\tmin?: number[];\n\tmax?: number[];\n}\n\nexport interface SelectiveColorAdjustment {\n\ttype: 'selective color';\n\tmode?: 'relative' | 'absolute';\n\treds?: CMYK;\n\tyellows?: CMYK;\n\tgreens?: CMYK;\n\tcyans?: CMYK;\n\tblues?: CMYK;\n\tmagentas?: CMYK;\n\twhites?: CMYK;\n\tneutrals?: CMYK;\n\tblacks?: CMYK;\n}\n\nexport interface LinkedFile {\n\tid: string;\n\tname: string;\n\ttype?: string;\n\tcreator?: string;\n\tdata?: Uint8Array;\n\ttime?: Date; // for external files\n\tdescriptor?: {\n\t\tcompInfo: { compID: number; originalCompID: number; };\n\t};\n\tchildDocumentID?: string;\n\tassetModTime?: number;\n\tassetLockedState?: number;\n}\n\nexport type PlacedLayerType = 'unknown' | 'vector' | 'raster' | 'image stack';\n\nexport interface PlacedLayer {\n\tid: string; // id of linked image file (psd.linkedFiles)\n\tplaced?: string; // ???\n\ttype: PlacedLayerType;\n\t// pageNumber: number; // ???\n\t// totalPages: number; // ???\n\t// frameStep?: { numerator: number; denominator: number; };\n\t// duration?: { numerator: number; denominator: number; };\n\t// frameCount?: number; // ???\n\ttransform: number[]; // x, y of 4 corners of the transform\n\tnonAffineTransform?: number[]; // x, y of 4 corners of the transform\n\twidth?: number;\n\theight?: number;\n\tresolution?: UnitsValue;\n\t// antialias ?\n\twarp?: Warp;\n\tcrop?: number;\n\tcomp?: number;\n\tcompInfo?: { compID: number; originalCompID: number; };\n}\n\nexport type AdjustmentLayer = BrightnessAdjustment | LevelsAdjustment | CurvesAdjustment |\n\tExposureAdjustment | VibranceAdjustment | HueSaturationAdjustment | ColorBalanceAdjustment |\n\tBlackAndWhiteAdjustment | PhotoFilterAdjustment | ChannelMixerAdjustment | ColorLookupAdjustment |\n\tInvertAdjustment | PosterizeAdjustment | ThresholdAdjustment | GradientMapAdjustment |\n\tSelectiveColorAdjustment;\n\nexport type LayerColor = 'none' | 'red' | 'orange' | 'yellow' | 'green' | 'blue' | 'violet' | 'gray';\n\nexport interface KeyDescriptorItem {\n\tkeyShapeInvalidated?: boolean;\n\tkeyOriginType?: number;\n\tkeyOriginResolution?: number;\n\tkeyOriginRRectRadii?: {\n\t\ttopRight: UnitsValue;\n\t\ttopLeft: UnitsValue;\n\t\tbottomLeft: UnitsValue;\n\t\tbottomRight: UnitsValue;\n\t};\n\tkeyOriginShapeBoundingBox?: {\n\t\ttop: UnitsValue;\n\t\tleft: UnitsValue;\n\t\tbottom: UnitsValue;\n\t\tright: UnitsValue;\n\t};\n\tkeyOriginBoxCorners?: { x: number; y: number; }[];\n\ttransform?: number[]; // 2d transform matrix [xx, xy, yx, yy, tx, ty]\n}\n\nexport interface LayerVectorMask {\n\tinvert?: boolean;\n\tnotLink?: boolean;\n\tdisable?: boolean;\n\tfillStartsWithAllPixels?: boolean;\n\tclipboard?: {\n\t\ttop: number;\n\t\tleft: number;\n\t\tbottom: number;\n\t\tright: number;\n\t\tresolution: number;\n\t};\n\tpaths: BezierPath[];\n}\n\nexport interface LayerAdditionalInfo {\n\tname?: string; // layer name\n\tnameSource?: string; // layer name source\n\tid?: number; // layer id\n\tversion?: number; // layer version\n\tmask?: LayerMaskData;\n\tblendClippendElements?: boolean;\n\tblendInteriorElements?: boolean;\n\tknockout?: boolean;\n\tprotected?: {\n\t\ttransparency?: boolean;\n\t\tcomposite?: boolean;\n\t\tposition?: boolean;\n\t\tartboards?: boolean;\n\t};\n\tlayerColor?: LayerColor;\n\treferencePoint?: {\n\t\tx: number;\n\t\ty: number;\n\t};\n\tsectionDivider?: {\n\t\ttype: SectionDividerType;\n\t\tkey?: string;\n\t\tsubType?: number;\n\t};\n\tfilterMask?: {\n\t\tcolorSpace: Color;\n\t\topacity: number;\n\t};\n\teffects?: LayerEffectsInfo;\n\ttext?: LayerTextData;\n\tpatterns?: PatternInfo[]; // not supported yet\n\tvectorFill?: VectorContent;\n\tvectorStroke?: {\n\t\tstrokeEnabled?: boolean;\n\t\tfillEnabled?: boolean;\n\t\tlineWidth?: UnitsValue;\n\t\tlineDashOffset?: UnitsValue;\n\t\tmiterLimit?: number;\n\t\tlineCapType?: LineCapType;\n\t\tlineJoinType?: LineJoinType;\n\t\tlineAlignment?: LineAlignment;\n\t\tscaleLock?: boolean;\n\t\tstrokeAdjust?: boolean;\n\t\tlineDashSet?: UnitsValue[];\n\t\tblendMode?: BlendMode;\n\t\topacity?: number;\n\t\tcontent?: VectorContent;\n\t\tresolution?: number;\n\t};\n\tvectorMask?: LayerVectorMask;\n\tusingAlignedRendering?: boolean;\n\ttimestamp?: number; // seconds\n\tpathList?: {\n\t}[];\n\tadjustment?: AdjustmentLayer;\n\tplacedLayer?: PlacedLayer;\n\tvectorOrigination?: {\n\t\tkeyDescriptorList: KeyDescriptorItem[];\n\t};\n\tcompositorUsed?: {\n\t\tdescription: string;\n\t\treason: string;\n\t\tengine: string;\n\t\tenableCompCore: string;\n\t\tenableCompCoreGPU: string;\n\t\tcompCoreSupport: string;\n\t\tcompCoreGPUSupport: string;\n\t};\n\tartboard?: {\n\t\trect: { top: number; left: number; bottom: number; right: number; };\n\t\tguideIndices?: any[];\n\t\tpresetName?: string;\n\t\tcolor?: Color;\n\t\tbackgroundType?: number;\n\t};\n\tfillOpacity?: number;\n\ttransparencyShapesLayer?: boolean;\n\n\t// Base64 encoded raw EngineData, currently just kept in original state to support\n\t// loading and modifying PSD file without breaking text layers.\n\tengineData?: string;\n}\n\nexport interface ImageResources {\n\tlayerState?: number;\n\tlayersGroup?: number[];\n\tlayerSelectionIds?: number[];\n\tlayerGroupsEnabledId?: number[];\n\tversionInfo?: {\n\t\thasRealMergedData: boolean;\n\t\twriterName: string;\n\t\treaderName: string;\n\t\tfileVersion: number;\n\t};\n\talphaIdentifiers?: number[];\n\talphaChannelNames?: string[];\n\tglobalAngle?: number;\n\tglobalAltitude?: number;\n\tpixelAspectRatio?: {\n\t\taspect: number;\n\t};\n\turlsList?: any[];\n\tgridAndGuidesInformation?: {\n\t\tgrid?: {\n\t\t\thorizontal: number;\n\t\t\tvertical: number;\n\t\t},\n\t\tguides?: {\n\t\t\tlocation: number;\n\t\t\tdirection: 'horizontal' | 'vertical';\n\t\t}[];\n\t};\n\tresolutionInfo?: {\n\t\thorizontalResolution: number;\n\t\thorizontalResolutionUnit: 'PPI' | 'PPCM';\n\t\twidthUnit: 'Inches' | 'Centimeters' | 'Points' | 'Picas' | 'Columns';\n\t\tverticalResolution: number;\n\t\tverticalResolutionUnit: 'PPI' | 'PPCM';\n\t\theightUnit: 'Inches' | 'Centimeters' | 'Points' | 'Picas' | 'Columns';\n\t};\n\tthumbnail?: HTMLCanvasElement;\n\tthumbnailRaw?: { width: number; height: number; data: Uint8Array; };\n\tcaptionDigest?: string;\n\txmpMetadata?: string;\n\tprintScale?: {\n\t\tstyle?: 'centered' | 'size to fit' | 'user defined';\n\t\tx?: number;\n\t\ty?: number;\n\t\tscale?: number;\n\t};\n\tprintInformation?: {\n\t\tprinterManagesColors?: boolean;\n\t\tprinterName?: string;\n\t\tprinterProfile?: string;\n\t\tprintSixteenBit?: boolean;\n\t\trenderingIntent?: RenderingIntent;\n\t\thardProof?: boolean;\n\t\tblackPointCompensation?: boolean;\n\t\tproofSetup?: {\n\t\t\tbuiltin: string;\n\t\t} | {\n\t\t\tprofile: string;\n\t\t\trenderingIntent?: RenderingIntent;\n\t\t\tblackPointCompensation?: boolean;\n\t\t\tpaperWhite?: boolean;\n\t\t};\n\t};\n\tbackgroundColor?: Color;\n\tidsSeedNumber?: number;\n\tprintFlags?: {\n\t\tlabels?: boolean;\n\t\tcropMarks?: boolean;\n\t\tcolorBars?: boolean;\n\t\tregistrationMarks?: boolean;\n\t\tnegative?: boolean;\n\t\tflip?: boolean;\n\t\tinterpolate?: boolean;\n\t\tcaption?: boolean;\n\t\tprintFlags?: boolean;\n\t};\n\ticcUntaggedProfile?: boolean;\n\tpathSelectionState?: string[];\n\timageReadyVariables?: string;\n\timageReadyDataSets?: string;\n}\n\nexport interface GlobalLayerMaskInfo {\n\toverlayColorSpace: number;\n\tcolorSpace1: number;\n\tcolorSpace2: number;\n\tcolorSpace3: number;\n\tcolorSpace4: number;\n\topacity: number;\n\tkind: number;\n}\n\nexport interface Annotation {\n\ttype: 'text' | 'sound';\n\topen: boolean;\n\ticonLocation: { left: number; top: number; right: number; bottom: number };\n\tpopupLocation: { left: number; top: number; right: number; bottom: number };\n\tcolor: Color;\n\tauthor: string;\n\tname: string;\n\tdate: string;\n\tdata: string | Uint8Array;\n}\n\nexport interface Layer extends LayerAdditionalInfo {\n\ttop?: number;\n\tleft?: number;\n\tbottom?: number;\n\tright?: number;\n\tblendMode?: BlendMode;\n\topacity?: number;\n\ttransparencyProtected?: boolean;\n\thidden?: boolean;\n\tclipping?: boolean;\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n\tchildren?: Layer[];\n\t/** applies only for layer groups */\n\topened?: boolean;\n}\n\nexport interface Psd extends LayerAdditionalInfo {\n\twidth: number;\n\theight: number;\n\tchannels?: number;\n\tbitsPerChannel?: number;\n\tcolorMode?: ColorMode;\n\tchildren?: Layer[];\n\tcanvas?: HTMLCanvasElement;\n\timageData?: ImageData;\n\timageResources?: ImageResources;\n\tlinkedFiles?: LinkedFile[]; // used in smart objects\n\tartboards?: {\n\t\tcount: number;\n\t\tautoExpandOffset?: { horizontal: number; vertical: number; };\n\t\torigin?: { horizontal: number; vertical: number; };\n\t\tautoExpandEnabled?: boolean;\n\t\tautoNestEnabled?: boolean;\n\t\tautoPositionEnabled?: boolean;\n\t\tshrinkwrapOnSaveEnabled?: boolean;\n\t\tdocDefaultNewArtboardBackgroundColor?: Color;\n\t\tdocDefaultNewArtboardBackgroundType?: number;\n\t};\n\tglobalLayerMaskInfo?: GlobalLayerMaskInfo;\n\tannotations?: Annotation[];\n}\n\nexport interface ReadOptions {\n\t/** Does not load layer image data. */\n\tskipLayerImageData?: boolean;\n\t/** Does not load composite image data. */\n\tskipCompositeImageData?: boolean;\n\t/** Does not load thumbnail. */\n\tskipThumbnail?: boolean;\n\t/** Does not load linked files (used in smart-objects). */\n\tskipLinkedFilesData?: boolean;\n\t/** Throws exception if features are missing. */\n\tthrowForMissingFeatures?: boolean;\n\t/** Logs if features are missing. */\n\tlogMissingFeatures?: boolean;\n\t/** Keep image data as byte array instead of canvas.\n\t * (image data will appear in `imageData` fields instead of `canvas` fields)\n\t * This avoids issues with canvas premultiplied alpha corrupting image data. */\n\tuseImageData?: boolean;\n\t/** Loads thumbnail raw data instead of decoding it's content into canvas.\n\t * `thumnailRaw` field is used instead. */\n\tuseRawThumbnail?: boolean;\n\t/** Usend only for development */\n\tlogDevFeatures?: boolean;\n}\n\nexport interface WriteOptions {\n\t/** Automatically generates thumbnail from composite image. */\n\tgenerateThumbnail?: boolean;\n\t/** Trims transparent pixels from layer image data. */\n\ttrimImageData?: boolean;\n\t/** Invalidates text layer data, forcing Photoshop to redraw them on load.\n\t *  Use this option if you're updating loaded text layer properties. */\n\tinvalidateTextLayers?: boolean;\n\t/** Logs if features are missing. */\n\tlogMissingFeatures?: boolean;\n\t/** Forces bottom layer to be treated as layer and not background even when it's missing any transparency\n\t * \t(by default Photoshop treats bottom layer as background it it doesn't have any transparent pixels) */\n\tnoBackground?: boolean;\n\t/** Saves document as PSB (Large Document Format) file */\n\tpsb?: boolean;\n}\n","import { Psd, ReadOptions, WriteOptions } from './psd';\nimport { PsdWriter, writePsd as writePsdInternal, getWriterBuffer, createWriter, getWriterBufferNoCopy } from './psdWriter';\nimport { PsdReader, readPsd as readPsdInternal, createReader } from './psdReader';\nexport * from './abr';\nexport * from './csh';\nexport { initializeCanvas } from './helpers';\nexport * from './psd';\nimport { fromByteArray } from 'base64-js';\nexport { PsdReader, PsdWriter };\n\ninterface BufferLike {\n\tbuffer: ArrayBuffer;\n\tbyteOffset: number;\n\tbyteLength: number;\n}\n\nexport const byteArrayToBase64 = fromByteArray;\n\nexport function readPsd(buffer: ArrayBuffer | BufferLike, options?: ReadOptions): Psd {\n\tconst reader = 'buffer' in buffer ?\n\t\tcreateReader(buffer.buffer, buffer.byteOffset, buffer.byteLength) :\n\t\tcreateReader(buffer);\n\treturn readPsdInternal(reader, options);\n}\n\nexport function writePsd(psd: Psd, options?: WriteOptions): ArrayBuffer {\n\tconst writer = createWriter();\n\twritePsdInternal(writer, psd, options);\n\treturn getWriterBuffer(writer);\n}\n\nexport function writePsdUint8Array(psd: Psd, options?: WriteOptions): Uint8Array {\n\tconst writer = createWriter();\n\twritePsdInternal(writer, psd, options);\n\treturn getWriterBufferNoCopy(writer);\n}\n\nexport function writePsdBuffer(psd: Psd, options?: WriteOptions): Buffer {\n\tif (typeof Buffer === 'undefined') {\n\t\tthrow new Error('Buffer not supported on this platform');\n\t}\n\n\treturn Buffer.from(writePsdUint8Array(psd, options));\n}\n"],"sourceRoot":""}